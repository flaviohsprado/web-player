var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Album.html",[0,0.027,1,1.947]],["body/classes/Album.html",[0,0.029,1,2.831,2,1.463,3,0.154,4,0.132,5,0.11,6,3.486,7,0.319,8,1.048,9,3.625,10,3.625,11,3.625,12,1.065,13,4.651,14,3.625,15,3.625,16,0.555,17,0.018,18,0.821,19,3.121,20,4.757,21,1.177,22,4.052,23,4.14,24,3.611,25,4.052,26,4.052,27,3.902,28,4.052,29,3.39,30,4.052,31,4.052,32,4.052,33,0.319,34,3.473,35,1.701,36,0.176,37,4.14,38,0.013,39,0.013]],["title/controllers/AlbumController.html",[40,1.641,41,2.592]],["body/controllers/AlbumController.html",[0,0.021,1,1.507,3,0.109,4,0.093,5,0.174,7,0.226,12,1.178,16,0.436,17,0.018,18,0.751,19,2.616,21,0.987,33,0.516,36,0.124,38,0.01,39,0.01,40,1.27,41,2.957,42,1.27,43,2.467,44,1.849,45,2.868,46,1.095,47,2.244,48,2.486,49,3.007,50,2.912,51,2.957,52,2.639,53,2.203,54,2.425,55,5.022,56,4.229,57,2.203,58,2.868,59,1.132,60,1.025,61,0.878,62,1.461,63,1.938,64,2.006,65,2.006,66,2.868,67,2.006,68,2.868,69,2.006,70,2.006,71,2.868,72,2.203,73,5.022,74,2.006,75,2.868,76,2.532,77,2.811,78,2.006,79,2.006,80,1.849,81,2.006,82,2.725,83,3.248,84,0.531,85,2.006,86,2.006,87,1.849,88,2.006,89,2.006,90,2.467,91,1.849,92,2.467,93,3.007,94,2.467,95,1.605,96,2.006,97,1.849,98,2.006,99,1.849,100,1.718,101,1.507,102,2.868,103,1.605,104,1.605,105,3.876,106,1.505,107,2.126,108,2.868,109,2.006,110,2.006,111,2.006,112,2.868,113,3.248,114,1.322,115,1.454,116,2.868,117,2.868,118,2.006,119,2.006,120,4.228,121,2.868,122,2.868,123,2.006,124,2.006,125,2.868]],["title/classes/AlbumDTO.html",[0,0.027,56,2.389]],["body/classes/AlbumDTO.html",[0,0.027,2,1.353,3,0.142,4,0.122,5,0.102,7,0.295,8,0.994,9,3.484,10,3.484,11,3.484,12,1.215,13,4.47,14,3.484,15,3.484,16,0.561,17,0.018,18,0.828,21,1.191,29,3.284,33,0.402,36,0.162,38,0.012,39,0.012,56,4.216,59,0.765,60,0.693,61,0.922,126,3.223,127,3.222,128,3.256,129,1.066,130,3.295,131,5.112,132,3.295,133,2.415,134,3.747,135,2.001,136,3.747,137,3.747,138,3.747,139,3.747,140,3.747,141,3.747,142,1.969,143,3.295,144,2.244,145,2.415,146,2.415]],["title/modules/AlbumModule.html",[147,1.275,148,2.389]],["body/modules/AlbumModule.html",[0,0.031,3,0.164,4,0.141,5,0.118,17,0.018,33,0.554,36,0.187,38,0.013,39,0.013,41,4.371,42,2.489,84,0.799,93,4.493,94,3.718,147,1.934,148,4.807,149,1.913,150,2.629,151,3.718,152,3.718,153,3.718,154,3.718,155,3.288,156,3.481,157,2.954,158,2.271,159,2.271,160,4.322,161,3.147,162,3.147,163,3.147,164,4.322,165,4.8,166,4.322,167,2.588,168,3.023]],["title/injectables/AlbumService.html",[93,2.219,169,0.757]],["body/injectables/AlbumService.html",[0,0.018,1,3.609,3,0.095,4,0.081,5,0.068,7,0.197,12,1.074,16,0.438,17,0.018,18,0.761,21,0.98,33,0.508,35,1.049,36,0.108,38,0.009,39,0.009,46,0.988,47,2.19,48,1.887,50,2.718,52,2.429,54,2.316,56,4.158,59,1.137,60,1.03,61,0.883,62,1.377,63,1.873,84,0.462,90,2.149,91,2.457,92,2.149,93,2.283,101,1.313,106,1.404,107,2.462,114,1.909,115,1.311,127,2.941,129,1.085,135,1.59,142,1.313,169,0.778,170,0.948,171,2.149,172,2.457,173,2.457,174,2.498,175,2.895,176,2.979,177,2.56,178,2.498,179,3.812,180,3.812,181,2.599,182,2.498,183,2.666,184,2.498,185,2.498,186,2.457,187,2.895,188,2.498,189,1.601,190,1.747,191,2.498,192,1.496,193,2.498,194,1.398,195,1.747,196,1.747,197,2.498,198,1.601,199,4.623,200,2.498,201,5.172,202,3.812,203,2.929,204,4.623,205,3.812,206,2.498,207,2.666,208,2.666,209,2.666,210,2.498,211,3.977,212,2.929,213,1.783,214,1.747,215,3.812,216,3.812,217,2.498,218,2.498,219,2.498]],["title/classes/AllExceptionsFilter.html",[0,0.027,220,2.847]],["body/classes/AllExceptionsFilter.html",[0,0.029,2,1.436,3,0.151,4,0.129,5,0.108,7,0.313,8,1.035,16,0.419,17,0.018,21,1.002,33,0.419,36,0.172,38,0.013,39,0.013,46,1.379,59,0.812,60,0.736,61,0.63,62,0.983,84,0.736,104,3.357,114,1.875,115,1.368,129,1.707,198,2.518,220,4.088,221,3.421,222,3.187,223,5.998,224,5.91,225,5.509,226,5.321,227,5.321,228,5.159,229,6.404,230,3.977,231,5.321,232,3.421,233,3.977,234,3.421,235,2.781,236,3.977,237,3.977,238,3.977,239,3.977,240,3.421,241,3.977,242,3.977,243,5.998,244,5.321,245,3.977,246,4.607,247,3.977,248,3.722,249,3.977,250,3.977,251,3.977,252,3.977,253,2.781,254,3.977,255,3.977,256,3.977,257,3.977,258,3.977]],["title/modules/AppModule.html",[147,1.275,259,2.592]],["body/modules/AppModule.html",[0,0.027,3,0.141,4,0.121,5,0.102,16,0.293,17,0.018,21,0.623,33,0.561,36,0.162,38,0.012,39,0.012,46,0.966,59,0.761,60,0.69,61,0.591,62,0.922,84,0.69,147,1.752,148,4.345,149,1.651,150,2.382,155,3.152,156,3.337,157,2.677,158,1.959,159,1.959,162,2.851,167,2.232,232,3.207,259,5.284,260,3.207,261,3.207,262,4.345,263,4.345,264,4.345,265,4.037,266,3.728,267,3.728,268,5.094,269,6.237,270,3.728,271,3.728,272,5.094,273,3.728,274,3.728,275,3.728,276,2.608,277,3.728,278,3.728,279,3.728,280,3.728,281,3.207,282,3.728]],["title/controllers/AuthController.html",[40,1.641,283,2.592]],["body/controllers/AuthController.html",[0,0.034,3,0.179,4,0.154,5,0.129,7,0.373,17,0.018,19,2.096,21,0.791,33,0.513,36,0.205,38,0.014,39,0.014,40,2.096,42,2.096,44,3.051,46,1.544,47,2.039,59,0.966,60,0.876,61,0.75,62,1.17,76,2.834,77,2.649,80,3.051,84,0.876,97,3.051,103,2.649,106,1.285,283,4.168,284,4.072,285,4.733,286,5.126,287,4.733,288,4.733,289,4.733,290,5.126,291,3.636,292,3.636,293,3.65,294,3.636,295,3.311,296,3.636,297,4.733,298,4.733,299,4.733,300,4.733,301,4.733]],["title/injectables/AuthMiddleware.html",[169,0.757,276,2.592]],["body/injectables/AuthMiddleware.html",[0,0.027,3,0.144,4,0.123,5,0.103,7,0.299,8,1.002,12,0.907,16,0.406,17,0.018,18,0.657,21,0.978,33,0.495,36,0.165,38,0.012,39,0.012,46,1.336,59,0.775,60,0.702,61,0.601,62,0.938,76,2.272,84,0.702,100,2.272,106,1.03,114,1.612,115,1.773,129,1.666,169,1.053,170,1.439,198,2.459,240,5.405,276,3.606,281,3.264,292,4.827,302,3.264,303,5.964,304,5.156,305,5.156,306,5.156,307,5.038,308,6.57,309,6.283,310,3.795,311,3.264,312,5.156,313,4.435,314,2.654,315,2.886,316,3.795,317,0.983,318,3.795,319,1.878,320,2.283,321,2.165,322,3.795,323,3.264,324,2.915,325,3.795,326,3.795,327,2.654,328,2.654,329,3.795,330,3.795,331,3.264,332,3.795,333,3.795,334,3.795,335,3.795,336,3.264,337,3.264,338,3.264]],["title/modules/AuthModule.html",[147,1.275,262,2.389]],["body/modules/AuthModule.html",[0,0.029,3,0.151,4,0.13,5,0.109,17,0.018,33,0.562,36,0.173,38,0.013,39,0.013,42,2.36,84,0.738,147,1.834,149,1.765,150,2.493,157,2.801,158,2.095,159,2.095,161,2.984,162,2.984,163,2.984,262,4.807,265,4.117,283,4.2,293,4.149,294,3.063,314,2.789,323,3.43,324,3.063,339,3.43,340,3.987,341,3.43,342,3.43,343,4.432,344,4.432,345,3.987,346,3.987,347,5.331,348,2.388,349,3.987,350,3.987,351,3.987,352,3.987,353,3.987,354,3.987,355,3.987,356,3.987,357,3.987]],["title/injectables/AuthService.html",[169,0.757,293,2.074]],["body/injectables/AuthService.html",[0,0.025,3,0.131,4,0.113,5,0.095,7,0.273,12,0.61,16,0.44,17,0.018,18,0.759,21,0.933,33,0.519,36,0.15,38,0.011,39,0.011,46,1.256,47,2.061,59,1.141,60,1.033,61,0.885,62,1.198,63,1.379,84,0.642,106,1.517,107,1.921,114,1.989,129,1.379,169,0.989,170,1.315,198,2.035,253,2.426,286,4.169,291,2.664,293,2.712,303,5.821,314,2.426,315,2.712,319,2.993,320,1.535,321,2.539,331,2.984,336,2.984,337,2.984,338,2.984,358,2.984,359,5.586,360,3.468,361,3.689,362,3.468,363,4.846,364,3.898,365,3.468,366,3.468,367,3.343,368,3.468,369,3.468,370,2.235,371,2.984,372,2.984,373,2.077,374,2.664,375,2.984,376,4.846,377,3.468,378,4.846,379,4.846,380,2.984,381,2.426,382,3.468,383,2.984,384,2.984,385,3.468,386,3.468]],["title/classes/CryptographyService.html",[0,0.027,370,2.389]],["body/classes/CryptographyService.html",[0,0.021,2,1.081,3,0.113,4,0.097,5,0.082,7,0.236,8,0.848,16,0.51,17,0.018,18,0.745,21,1.149,33,0.344,36,0.13,38,0.01,39,0.01,46,1.131,47,2.204,59,0.891,60,0.807,61,0.692,62,1.398,63,1.89,104,3.514,106,1.185,107,1.946,114,1.61,115,1.03,129,1.465,189,2.162,198,3.035,370,3.319,387,2.576,388,5.149,389,6.278,390,6.278,391,5.149,392,4.364,393,4.364,394,5.658,395,5.658,396,4.364,397,2.995,398,2.995,399,4.867,400,2.995,401,5.149,402,2.995,403,4.364,404,2.995,405,4.364,406,4.364,407,2.995,408,2.995,409,2.995,410,2.995,411,2.995,412,2.995,413,2.995,414,2.995,415,2.995,416,5.149,417,2.995,418,2.995,419,2.995,420,5.149,421,5.149,422,4.867,423,4.364,424,4.364,425,4.364,426,4.364,427,2.995,428,2.995,429,2.995,430,2.995,431,2.995,432,2.995,433,4.364,434,2.995,435,2.995,436,2.995,437,2.995,438,2.995,439,2.995,440,2.995,441,2.995,442,2.995,443,2.995,444,1.676]],["title/modules/DatabaseModule.html",[147,1.275,155,1.733]],["body/modules/DatabaseModule.html",[0,0.039,3,0.207,4,0.178,5,0.149,17,0.018,33,0.512,36,0.237,38,0.015,39,0.015,84,1.01,147,2.237,149,2.418,155,3.041,161,3.056,163,3.056,445,5.461,446,5.337,447,5.461]],["title/classes/EmailUtils.html",[0,0.027,448,2.592]],["body/classes/EmailUtils.html",[0,0.031,2,1.583,3,0.166,4,0.143,5,0.12,7,0.345,16,0.447,17,0.018,18,0.792,21,0.948,24,2.454,33,0.447,35,1.842,36,0.19,38,0.013,39,0.013,46,1.47,47,1.967,59,1.159,60,1.05,61,0.899,62,1.084,63,1.615,103,2.454,106,1.541,107,1.508,114,1.371,127,2.642,129,1.248,175,3.724,253,3.067,319,3.115,321,2.794,448,3.97,449,3.773,450,6.293,451,3.773,452,4.386,453,4.882,454,4.386,455,4.386,456,6.293,457,3.773,458,3.773,459,3.773]],["title/interfaces/ErrorProps.html",[317,0.96,460,2.847]],["body/interfaces/ErrorProps.html",[3,0.184,4,0.158,5,0.132,7,0.382,8,1.177,16,0.579,17,0.018,18,0.824,29,3.467,38,0.014,39,0.014,246,5.307,317,1.258,460,4.652,461,2.15,462,4.178,463,6.909,464,6.909,465,5.943,466,6.909,467,6.056,468,4.857]],["title/classes/File.html",[0,0.027,5,0.101]],["body/classes/File.html",[0,0.032,2,1.612,3,0.169,4,0.145,5,0.173,7,0.351,8,1.116,12,1.116,16,0.545,17,0.018,18,0.835,19,3.068,20,4.759,21,1.158,27,4.09,33,0.351,34,3.7,35,1.875,36,0.194,38,0.014,39,0.014,189,2.665,213,2.967,469,3.84,470,3.552,471,4.09,472,4.464,473,4.464,474,4.464,475,4.464,476,4.464]],["title/classes/FileDTO.html",[0,0.027,54,1.406]],["body/classes/FileDTO.html",[0,0.026,2,1.307,3,0.137,4,0.118,5,0.099,7,0.285,8,0.97,12,1.204,16,0.57,17,0.018,18,0.852,21,1.219,33,0.285,36,0.157,38,0.012,39,0.012,46,1.293,54,2.336,59,0.739,60,0.923,61,0.574,62,0.895,106,0.983,114,1.132,127,2.399,129,1.03,130,3.218,132,3.218,133,2.333,143,3.218,144,2.167,145,2.333,146,2.333,189,2.399,213,2.672,381,3.997,399,4.916,422,3.114,470,3.198,471,3.683,477,3.114,478,5.714,479,5.714,480,5.714,481,5.714,482,5.299,483,4.992,484,4.992,485,3.62,486,3.62,487,3.62,488,3.62,489,3.62,490,3.62,491,3.62,492,3.62,493,3.62,494,3.62,495,3.62,496,3.62]],["title/modules/FileModule.html",[147,1.275,156,1.835]],["body/modules/FileModule.html",[0,0.033,3,0.175,4,0.15,5,0.126,17,0.018,33,0.534,36,0.2,38,0.014,39,0.014,84,0.854,147,2.017,149,2.044,150,2.743,155,3.346,156,3.677,157,3.082,158,2.425,159,2.425,161,3.283,162,3.283,163,3.283,167,2.764,177,3.748,497,3.971,498,3.971,499,4.616,500,3.971,501,4.616,502,4.616,503,4.616,504,4.506,505,4.616]],["title/injectables/FileService.html",[169,0.757,177,1.835]],["body/injectables/FileService.html",[0,0.026,3,0.14,4,0.12,5,0.157,7,0.29,16,0.488,17,0.018,18,0.753,21,1.036,33,0.488,35,1.546,36,0.16,38,0.012,39,0.012,46,1.309,47,2.222,48,2.5,54,2.353,59,1.267,60,1.148,61,0.983,62,1.425,63,1.911,84,0.681,106,1,107,1.983,114,1.579,129,1.437,135,2.134,142,1.935,169,1.031,170,1.397,172,3.256,173,3.256,175,3.473,176,3.256,177,2.5,181,2.747,186,3.256,187,3.473,189,2.421,192,2.205,198,1.546,506,3.168,507,3.682,508,3.682,509,4.345,510,3.682,511,5.051,512,3.682,513,3.682,514,3.682,515,3.682,516,3.682,517,3.682,518,3.682,519,3.168]],["title/injectables/FileUpload.html",[169,0.757,194,2.074]],["body/injectables/FileUpload.html",[0,0.027,3,0.144,4,0.124,5,0.141,7,0.3,8,1.006,16,0.462,17,0.018,18,0.803,21,1.052,33,0.462,36,0.165,38,0.012,39,0.012,46,1.34,47,2.122,49,3.098,54,2.496,59,1.056,60,0.957,61,0.82,62,1.279,63,1.792,82,3.784,84,0.705,106,1.036,107,1.779,114,1.192,115,2.02,129,1.671,169,1.056,170,1.447,181,2.787,194,3.286,198,2.466,213,2.944,327,2.668,444,2.135,470,3.524,520,3.281,521,5.872,522,3.784,523,5.174,524,4.451,525,3.814,526,3.281,527,3.281,528,3.814,529,4.404,530,3.281,531,3.814,532,3.814,533,3.814,534,3.814,535,3.814,536,3.814,537,3.814]],["title/interfaces/IAlbum.html",[91,2.389,317,0.96]],["body/interfaces/IAlbum.html",[3,0.166,4,0.143,5,0.12,7,0.345,8,1.103,9,3.985,10,3.985,11,3.985,12,1.17,13,5.112,14,3.985,15,3.985,16,0.573,17,0.018,18,0.854,29,3.71,33,0.345,36,0.19,38,0.013,39,0.013,61,0.899,91,3.658,128,3.724,135,2.289,317,1.136,461,1.942,538,3.773,539,3.369]],["title/interfaces/IAuth.html",[315,2.074,317,0.96]],["body/interfaces/IAuth.html",[3,0.19,4,0.163,5,0.137,7,0.395,8,1.202,12,1.229,16,0.527,17,0.018,18,0.855,36,0.268,38,0.015,39,0.015,315,3.459,317,1.601,320,3.094,321,3.014,364,3.236,367,2.638,461,2.222,540,3.856]],["title/interfaces/IAuthCredentials.html",[317,0.96,364,2.389]],["body/interfaces/IAuthCredentials.html",[3,0.195,4,0.167,5,0.14,7,0.405,8,1.219,12,0.904,16,0.494,17,0.018,18,0.848,36,0.272,38,0.015,39,0.015,315,2.877,317,1.625,320,2.276,321,3.034,364,4.042,367,3.703,461,2.276,540,3.949]],["title/interfaces/IFile.html",[135,1.275,317,0.96]],["body/interfaces/IFile.html",[3,0.174,4,0.149,5,0.125,7,0.361,8,1.136,12,1.19,16,0.55,17,0.018,18,0.861,36,0.279,38,0.014,39,0.014,63,1.305,135,2.211,181,2.031,189,2.842,213,3.165,317,1.665,461,2.031,470,3.788,471,4.362,522,2.957,541,3.209,542,2.957,543,3.209,544,2.957]],["title/interfaces/IFileUploader.html",[317,0.96,544,2.389]],["body/interfaces/IFileUploader.html",[3,0.19,4,0.163,5,0.137,7,0.395,8,1.202,12,0.883,16,0.395,17,0.018,18,0.819,36,0.29,38,0.015,39,0.015,63,1.428,135,2.126,181,2.222,189,2.108,213,2.347,317,1.735,461,2.222,470,2.81,471,3.236,522,4.505,541,3.511,542,3.236,543,3.511,544,3.984,545,5.317]],["title/interfaces/IMusic.html",[317,0.96,546,2.389]],["body/interfaces/IMusic.html",[1,3.2,3,0.134,4,0.115,5,0.174,7,0.277,8,0.953,9,3.647,10,3.647,11,3.647,12,1.071,14,3.647,15,3.647,16,0.589,17,0.018,18,0.861,29,3.817,33,0.277,36,0.153,38,0.012,39,0.012,61,0.965,128,3.409,135,2.338,211,5.24,317,0.913,461,1.561,539,2.708,546,3.159,547,3.033,548,4.679,549,4.679,550,4.679,551,4.679,552,4.679,553,4.679,554,4.679,555,3.941,556,2.961]],["title/interfaces/IPlaylist.html",[317,0.96,557,2.389]],["body/interfaces/IPlaylist.html",[3,0.186,4,0.159,5,0.134,7,0.386,8,1.184,12,1.219,16,0.546,17,0.018,18,0.842,33,0.386,36,0.213,38,0.014,39,0.014,60,1.282,61,0.966,128,3.88,135,2.384,317,1.271,461,2.171,539,3.768,557,3.927,558,4.219,559,4.849]],["title/interfaces/IUploadedFile.html",[317,0.96,542,2.389]],["body/interfaces/IUploadedFile.html",[3,0.19,4,0.163,5,0.137,7,0.395,8,1.202,12,0.883,16,0.395,17,0.018,18,0.838,36,0.29,38,0.015,39,0.015,63,1.428,135,2.126,181,2.222,189,2.108,213,2.347,317,1.735,461,2.222,470,2.81,471,3.236,522,3.236,541,3.511,542,3.984,543,4.889,544,3.236]],["title/interfaces/IUser.html",[317,0.96,373,2.219]],["body/interfaces/IUser.html",[3,0.135,4,0.116,5,0.192,7,0.28,8,0.959,12,1.075,16,0.584,17,0.018,18,0.871,33,0.28,36,0.154,38,0.012,39,0.012,61,1.191,317,0.922,320,2.708,321,2.568,328,4.277,367,3.213,373,2.955,461,1.576,556,3.492,560,3.062,561,4.277,562,4.277,563,4.277,564,4.698,565,4.277,566,4.277,567,4.277,568,4.277,569,4.698,570,3.062]],["title/injectables/JwtAuthGuard.html",[95,2.074,169,0.757]],["body/injectables/JwtAuthGuard.html",[0,0.039,3,0.208,4,0.179,5,0.15,17,0.018,33,0.514,36,0.239,38,0.015,39,0.015,84,1.018,95,3.656,169,1.334,170,2.087,222,3.294,348,3.294,571,4.732,572,4.226,573,4.732,574,5.501]],["title/injectables/JwtStrategy.html",[169,0.757,343,2.389]],["body/injectables/JwtStrategy.html",[0,0.032,3,0.17,4,0.146,5,0.122,7,0.352,12,0.787,16,0.352,17,0.018,21,0.961,24,2.506,33,0.528,36,0.194,38,0.014,39,0.014,46,1.49,47,1.987,59,0.914,60,0.828,61,0.71,62,1.107,84,0.828,106,1.216,129,1.808,169,1.174,170,1.698,222,2.681,235,3.132,291,3.44,315,3.753,320,1.982,321,1.88,324,3.44,343,3.707,348,2.681,372,3.852,384,3.852,575,3.852,576,4.948,577,4.478,578,5.752,579,4.478,580,4.478,581,3.852,582,3.44,583,3.852,584,3.852,585,3.852,586,4.478,587,4.478,588,4.478,589,4.478,590,4.478,591,4.478,592,4.478]],["title/injectables/LocalAuthGuard.html",[169,0.757,295,2.592]],["body/injectables/LocalAuthGuard.html",[0,0.039,3,0.208,4,0.179,5,0.15,17,0.018,33,0.514,36,0.239,38,0.015,39,0.015,84,1.018,169,1.334,170,2.087,222,3.294,295,4.569,348,3.294,572,4.226,573,4.732,593,4.732,594,5.501]],["title/injectables/LocalStrategy.html",[169,0.757,344,2.389]],["body/injectables/LocalStrategy.html",[0,0.029,3,0.156,4,0.134,5,0.112,7,0.323,8,0.799,16,0.428,17,0.018,18,0.777,21,0.908,33,0.511,36,0.178,38,0.013,39,0.013,46,1.409,47,1.906,59,1.11,60,1.006,61,0.862,62,1.015,63,1.547,77,2.299,84,0.76,103,2.299,106,1.115,107,1.413,114,1.284,115,1.413,129,1.169,169,1.11,170,1.558,222,2.46,235,2.873,248,2.873,290,3.534,292,3.156,293,3.881,294,3.156,296,4.177,313,4.678,319,3.017,320,1.819,321,2.283,327,2.873,344,3.505,348,2.46,367,3.546,444,2.299,576,4.678,581,4.678,582,4.177,584,3.534,585,3.534,595,3.534,596,4.108,597,4.108,598,5.438,599,4.108,600,4.108,601,4.108,602,4.108,603,4.108,604,4.108]],["title/classes/Music.html",[0,0.027,605,2.389]],["body/classes/Music.html",[0,0.02,1,2.598,2,1.008,3,0.106,4,0.091,5,0.076,7,0.22,8,0.806,9,2.961,10,2.961,11,2.961,12,0.869,14,2.961,15,2.961,16,0.562,17,0.018,18,0.816,19,3.139,20,4.737,21,1.194,23,4.87,24,3.968,27,3.187,29,3.421,33,0.22,34,2.672,35,1.173,36,0.121,37,4.87,38,0.01,39,0.01,127,3.241,128,2.767,548,3.798,549,3.798,550,3.798,551,3.798,552,3.798,553,3.798,554,3.798,555,2.9,556,2.178,605,2.672,606,2.403,607,2.793,608,2.793,609,2.793,610,2.793,611,2.793,612,2.793,613,2.793,614,2.793,615,2.793,616,2.793,617,2.793,618,2.793,619,2.793,620,2.793,621,2.793,622,2.403]],["title/controllers/MusicController.html",[40,1.641,623,2.592]],["body/controllers/MusicController.html",[0,0.021,3,0.109,4,0.093,5,0.174,7,0.226,12,1.178,16,0.436,17,0.018,18,0.751,19,2.616,21,0.987,33,0.516,36,0.124,38,0.01,39,0.01,40,1.27,42,1.27,44,1.849,46,1.095,47,2.244,48,2.486,49,3.007,50,2.912,51,2.957,52,2.639,53,2.203,54,2.425,57,2.203,59,1.132,60,1.025,61,0.878,62,1.461,63,1.938,64,2.006,65,2.006,67,2.006,69,2.006,70,2.006,72,2.203,74,2.006,76,2.532,77,2.811,78,2.006,79,2.006,80,1.849,81,2.006,82,2.725,83,3.248,84,0.531,85,2.006,86,2.006,87,1.849,88,2.006,89,2.006,95,1.605,96,2.006,97,1.849,98,2.006,99,1.849,100,1.718,101,1.507,103,1.605,104,1.605,105,3.876,106,1.505,107,2.126,109,2.006,110,2.006,111,2.006,113,3.248,114,1.322,115,1.454,118,2.006,119,2.006,123,2.006,124,2.006,546,1.849,605,3.572,623,2.957,624,2.467,625,2.868,626,5.022,627,4.229,628,2.868,629,2.868,630,2.868,631,2.868,632,2.868,633,2.467,634,2.467,635,3.007,636,2.467,637,2.868,638,2.868,639,2.868,640,2.868,641,2.868,642,4.228,643,2.868,644,2.868,645,2.868]],["title/classes/MusicDTO.html",[0,0.027,627,2.389]],["body/classes/MusicDTO.html",[0,0.022,1,2.718,2,1.09,3,0.114,4,0.098,5,0.155,7,0.238,8,0.853,9,3.098,10,3.098,11,3.098,12,1.142,14,3.098,15,3.098,16,0.576,17,0.018,18,0.835,21,1.223,29,3.498,33,0.346,36,0.131,38,0.01,39,0.01,59,0.616,60,0.558,61,0.82,127,3.263,128,2.895,129,0.859,130,2.829,132,2.829,133,1.946,135,1.779,142,1.586,143,2.829,144,1.808,145,1.946,146,1.946,548,3.974,549,3.974,550,3.974,551,3.974,552,3.974,553,3.974,554,3.974,555,3.07,556,2.307,627,3.889,646,2.597,647,4.39,648,3.019,649,3.019,650,3.019,651,3.019,652,3.019,653,3.019,654,3.019,655,3.019,656,3.019,657,3.019,658,3.019,659,3.019,660,3.019,661,3.019,662,3.019]],["title/modules/MusicModule.html",[147,1.275,263,2.389]],["body/modules/MusicModule.html",[0,0.031,3,0.164,4,0.141,5,0.118,17,0.018,33,0.554,36,0.187,38,0.013,39,0.013,42,2.489,84,0.799,147,1.934,149,1.913,150,2.629,155,3.288,156,3.481,157,2.954,158,2.271,159,2.271,161,3.147,162,3.147,163,3.147,167,2.588,168,3.023,263,4.807,623,4.371,635,4.493,636,3.718,663,3.718,664,3.718,665,3.718,666,4.322,667,4.322,668,4.322,669,4.8,670,4.322]],["title/injectables/MusicService.html",[169,0.757,635,2.219]],["body/injectables/MusicService.html",[0,0.018,3,0.095,4,0.081,5,0.068,7,0.197,12,1.074,16,0.439,17,0.018,18,0.761,21,0.981,33,0.518,35,1.051,36,0.109,38,0.009,39,0.009,46,0.989,47,2.191,48,1.889,50,2.72,52,2.431,54,2.317,59,1.138,60,1.031,61,0.883,62,1.378,63,1.873,84,0.463,101,1.315,106,1.406,107,2.463,114,1.91,115,1.313,127,2.942,129,1.086,135,1.592,142,1.315,169,0.779,170,0.949,172,2.46,173,2.46,175,2.897,176,2.982,177,2.562,181,2.601,183,2.67,186,2.46,187,2.897,189,1.603,190,1.75,192,1.499,194,1.401,195,1.75,196,1.75,198,1.603,203,3.977,207,2.67,208,2.67,209,2.67,214,1.75,546,2.46,605,4.429,627,4.16,633,2.153,634,2.153,635,2.286,671,2.153,672,2.503,673,2.503,674,3.817,675,3.817,676,2.503,677,2.503,678,2.503,679,2.503,680,2.503,681,2.503,682,1.499,683,1.922,684,2.503,685,4.627,686,2.503,687,5.177,688,3.817,689,4.627,690,3.817,691,2.503,692,2.503,693,4.627,694,3.817,695,3.817,696,2.503,697,2.503,698,2.503]],["title/classes/Playlist.html",[0,0.027,699,2.389]],["body/classes/Playlist.html",[0,0.035,2,1.742,3,0.183,4,0.157,5,0.132,7,0.38,8,1.172,12,1.157,16,0.518,17,0.018,18,0.811,19,2.913,20,4.573,21,1.099,27,4.241,33,0.38,34,3.887,35,2.026,36,0.209,38,0.014,39,0.014,60,1.217,559,4.602,622,4.151,699,3.887,700,4.151,701,4.825,702,4.825,703,4.825]],["title/controllers/PlaylistController.html",[40,1.641,704,2.592]],["body/controllers/PlaylistController.html",[0,0.021,3,0.108,4,0.093,5,0.174,7,0.225,12,1.177,16,0.436,17,0.018,18,0.751,19,2.614,21,0.986,33,0.516,36,0.124,38,0.01,39,0.01,40,1.267,42,1.267,44,1.845,46,1.094,47,2.243,48,2.483,49,3.004,50,2.909,51,2.953,52,2.636,53,2.199,54,2.424,59,1.131,60,1.024,61,0.877,62,1.46,63,1.938,64,2.002,65,2.002,67,2.002,69,2.002,70,2.002,72,2.199,74,2.002,76,2.528,77,2.807,78,2.002,79,2.002,80,1.845,81,2.002,82,2.721,83,3.243,84,0.53,85,2.002,86,2.002,87,1.845,88,2.002,89,2.002,95,1.602,96,2.002,97,1.845,98,2.002,99,1.845,100,1.714,101,1.504,103,1.602,104,1.602,105,4.13,106,1.503,107,2.125,109,2.002,110,2.002,111,2.002,113,3.243,114,1.32,115,1.452,118,2.002,119,2.002,123,2.002,124,2.002,557,1.845,699,3.569,704,2.953,705,2.463,706,2.863,707,5.016,708,4.227,709,2.863,710,2.863,711,2.863,712,2.863,713,2.863,714,2.863,715,2.463,716,2.463,717,3.004,718,2.463,719,2.863,720,2.863,721,2.863,722,2.863,723,2.863,724,4.222,725,2.863,726,2.863,727,2.863]],["title/classes/PlaylistDTO.html",[0,0.027,708,2.389]],["body/classes/PlaylistDTO.html",[0,0.031,2,1.538,3,0.161,4,0.139,5,0.116,7,0.335,8,1.083,12,1.255,16,0.538,17,0.018,18,0.821,21,1.141,33,0.438,36,0.185,38,0.013,39,0.013,59,0.87,60,1.217,61,0.983,127,3.144,128,3.473,129,1.212,130,3.59,132,3.59,133,2.746,135,2.134,142,2.238,143,3.59,144,2.551,145,2.746,146,2.746,559,4.34,708,4.401,728,3.665,729,5.57,730,4.26,731,4.26,732,4.26]],["title/modules/PlaylistModule.html",[147,1.275,264,2.389]],["body/modules/PlaylistModule.html",[0,0.031,3,0.164,4,0.141,5,0.118,17,0.018,33,0.554,36,0.187,38,0.013,39,0.013,42,2.489,84,0.799,147,1.934,149,1.913,150,2.629,155,3.288,156,3.481,157,2.954,158,2.271,159,2.271,161,3.147,162,3.147,163,3.147,167,2.588,168,3.023,264,4.807,704,4.371,717,4.493,718,3.718,733,3.718,734,3.718,735,3.718,736,4.322,737,4.322,738,4.322,739,4.8,740,4.322]],["title/injectables/PlaylistService.html",[169,0.757,717,2.219]],["body/injectables/PlaylistService.html",[0,0.018,3,0.093,4,0.08,5,0.067,7,0.194,12,1.068,16,0.435,17,0.018,18,0.758,21,0.975,33,0.516,35,1.034,36,0.107,38,0.009,39,0.009,46,0.976,47,2.184,48,2.267,50,2.697,52,2.406,54,2.304,59,1.13,60,1.023,61,0.877,62,1.368,63,1.865,84,0.455,101,1.293,106,1.394,107,2.456,114,1.899,115,1.296,127,2.933,129,1.072,135,1.575,142,1.293,169,0.77,170,0.934,172,2.429,173,2.429,175,2.872,176,2.952,177,2.54,181,2.584,183,2.636,186,2.429,187,2.872,189,1.583,190,1.722,192,1.474,194,1.378,195,1.722,196,1.722,198,1.583,207,2.636,208,2.636,209,2.636,212,3.943,213,2.4,214,1.722,557,2.429,682,1.474,683,1.891,699,4.46,708,4.14,715,2.117,716,2.117,717,2.257,741,2.117,742,2.461,743,2.461,744,3.769,745,2.461,746,2.461,747,2.461,748,2.461,749,2.461,750,2.461,751,2.461,752,2.461,753,4.58,754,2.461,755,5.132,756,3.769,757,4.58,758,3.769,759,2.461,760,2.461,761,4.58,762,3.769,763,3.769,764,2.461,765,2.461,766,2.461]],["title/injectables/S3Service.html",[169,0.757,529,2.592]],["body/injectables/S3Service.html",[0,0.02,3,0.107,4,0.092,5,0.16,7,0.222,8,0.813,16,0.433,17,0.018,18,0.748,21,1.027,33,0.433,36,0.122,38,0.01,39,0.01,46,1.083,47,2.086,49,2.98,54,2.611,59,1.016,60,0.921,61,0.789,62,1.23,63,1.859,77,1.581,84,0.522,87,3.208,104,2.786,106,1.594,107,2.115,114,1.556,115,1.438,127,2.09,129,1.416,169,0.854,170,1.071,181,1.851,187,1.581,189,2.09,198,2.802,213,2.572,225,3.597,248,1.976,307,2.43,311,2.43,381,1.976,444,1.581,470,3.079,482,2.43,519,3.597,522,3.546,524,3.597,526,2.43,527,2.43,529,2.924,530,2.43,543,2.924,767,2.43,768,4.282,769,4.181,770,4.181,771,2.825,772,2.825,773,4.181,774,2.825,775,4.181,776,5.501,777,2.825,778,2.43,779,2.43,780,2.17,781,2.825,782,4.977,783,2.825,784,2.825,785,2.43,786,2.825,787,2.43,788,2.825,789,4.181,790,2.825,791,4.181,792,2.825,793,2.825,794,2.825,795,2.825,796,2.825,797,2.825,798,4.181,799,4.181,800,4.181,801,2.825,802,2.825,803,2.825,804,2.825,805,2.825,806,2.825,807,2.825,808,2.825,809,2.825,810,2.825,811,2.825,812,2.825]],["title/classes/StandardError.html",[0,0.027,682,2.219]],["body/classes/StandardError.html",[0,0.035,2,1.753,3,0.184,4,0.158,5,0.132,7,0.382,8,1.177,16,0.477,17,0.018,18,0.74,21,1.011,29,3.735,36,0.211,38,0.014,39,0.014,59,0.992,60,0.898,61,0.77,129,1.382,198,2.771,222,3.626,235,3.397,246,5.307,248,4.235,444,2.718,465,6.115,682,3.626,813,4.178,814,6.056,815,6.056,816,4.857,817,4.857]],["title/classes/User.html",[0,0.027,319,1.835]],["body/classes/User.html",[0,0.018,2,0.904,3,0.095,4,0.081,5,0.172,7,0.197,8,0.742,12,0.814,16,0.567,17,0.018,18,0.835,19,3.15,20,4.553,21,1.188,23,4.958,24,4.12,27,2.982,33,0.3,34,2.46,35,1.051,36,0.109,37,5.383,38,0.009,39,0.009,61,1.147,319,1.889,320,2.049,321,1.943,328,3.237,367,2.431,556,3.086,561,3.237,562,3.237,563,3.237,564,3.555,565,3.237,566,3.237,567,3.237,568,3.237,569,3.555,818,2.153,819,4.627,820,4.627,821,5.874,822,5.177,823,2.503,824,2.503,825,2.503,826,2.503,827,2.503,828,2.503,829,2.503,830,2.503,831,2.503,832,2.503,833,6.299,834,2.503,835,2.503,836,2.503,837,2.503,838,2.503,839,2.503,840,2.503,841,2.503,842,3.817,843,3.817,844,2.503,845,5.874]],["title/controllers/UserController.html",[40,1.641,846,2.592]],["body/controllers/UserController.html",[0,0.013,3,0.067,4,0.058,5,0.048,7,0.14,12,0.982,16,0.498,17,0.018,18,0.823,19,2.844,21,1.073,33,0.455,36,0.077,38,0.007,39,0.007,40,0.787,42,0.787,44,1.146,46,0.754,47,2.319,48,1.831,49,2.215,50,2.247,51,2.037,52,1.943,54,2.029,57,1.366,59,1.292,60,1.17,61,1.003,62,1.588,63,2.032,64,1.244,65,1.244,67,1.244,69,1.244,70,1.244,74,1.244,76,1.744,77,2.07,78,1.244,79,1.244,80,1.146,81,1.244,82,2.384,84,0.329,85,1.244,86,1.244,87,1.146,88,1.244,89,1.244,95,0.995,96,1.244,97,1.146,98,1.244,99,1.146,100,1.065,101,0.934,103,0.995,104,0.995,105,4.425,106,1.718,107,2.24,109,1.244,110,2.037,111,1.244,114,1.156,115,1.002,118,1.244,119,1.244,123,1.244,124,1.244,181,2.243,319,2.116,320,1.637,321,1.553,361,2.07,373,1.065,374,1.366,375,1.53,509,1.53,561,2.587,562,2.587,563,2.587,565,2.037,566,2.587,567,2.587,568,2.587,846,2.037,847,1.53,848,1.778,849,2.912,850,2.912,851,2.912,852,2.912,853,2.912,854,2.912,855,2.912,856,3.698,857,2.912,858,3.698,859,3.598,860,1.778,861,1.778,862,1.778,863,1.778,864,1.778,865,1.778,866,1.778,867,1.778,868,1.778,869,2.912,870,1.778,871,1.778,872,1.778,873,1.778,874,1.778,875,1.778,876,1.778,877,1.778,878,1.778,879,1.778,880,1.778,881,1.778,882,1.778,883,1.778,884,1.778,885,1.778,886,1.778,887,1.778,888,1.778,889,1.778,890,1.778,891,1.778,892,1.778,893,1.778,894,1.53,895,1.53,896,1.366,897,1.778,898,1.778,899,1.778,900,1.778,901,1.778,902,1.778,903,1.778,904,1.778,905,1.778,906,1.778,907,1.778,908,1.778,909,1.778,910,1.778,911,1.778,912,1.778,913,1.778,914,1.778,915,1.778,916,1.778,917,1.778,918,1.778,919,1.778,920,1.778,921,1.778,922,1.778,923,1.778,924,1.778,925,1.778,926,1.778,927,1.778,928,1.778,929,2.912,930,1.778,931,1.778,932,2.912,933,1.778,934,1.778,935,1.778,936,1.778]],["title/classes/UserDTO.html",[0,0.027,859,2.389]],["body/classes/UserDTO.html",[0,0.027,2,0.907,3,0.095,4,0.082,5,0.167,7,0.198,8,0.744,12,1.076,16,0.556,17,0.018,18,0.834,19,2.053,21,1.204,33,0.439,36,0.109,38,0.009,39,0.009,46,0.992,47,1.45,59,0.513,60,0.464,61,1.128,62,1.146,63,1.089,84,0.464,106,1.259,107,0.864,115,1.316,127,2.713,129,1.089,130,1.618,132,2.989,133,1.618,143,2.467,144,1.504,145,1.618,146,2.467,224,2.16,320,2.053,321,1.947,328,3.243,367,2.436,370,1.618,371,2.16,380,5.669,381,3.243,556,3.091,561,3.243,562,3.243,563,3.243,564,3.562,565,3.243,566,3.243,567,3.243,568,3.243,569,3.562,570,2.16,859,3.791,937,2.16,938,4.461,939,5.186,940,4.461,941,3.827,942,2.511,943,2.511,944,2.511,945,2.511,946,2.511,947,4.637,948,2.511,949,2.511,950,2.511,951,2.511,952,4.637,953,2.511,954,3.827,955,3.827,956,2.511,957,2.511,958,2.511,959,2.511,960,2.511,961,2.511,962,2.511,963,2.511,964,2.16,965,4.637,966,4.637,967,4.637,968,2.511,969,3.827,970,3.827,971,3.827,972,2.511,973,2.511,974,2.511]],["title/modules/UserModule.html",[147,1.275,265,2.219]],["body/modules/UserModule.html",[0,0.031,3,0.164,4,0.141,5,0.118,17,0.018,33,0.554,36,0.187,38,0.013,39,0.013,42,2.489,84,0.799,147,1.934,149,1.913,150,2.629,155,3.288,156,3.481,157,2.954,158,2.271,159,2.271,161,3.147,162,3.147,163,3.147,167,2.588,168,3.023,265,4.466,361,4.199,846,4.371,895,3.718,975,3.718,976,4.322,977,3.718,978,3.718,979,4.322,980,4.322,981,4.8,982,4.322]],["title/injectables/UserService.html",[169,0.757,361,2.074]],["body/injectables/UserService.html",[0,0.016,3,0.085,4,0.073,5,0.061,7,0.176,8,0.68,12,1.032,16,0.442,17,0.018,18,0.741,21,0.98,24,1.958,33,0.512,35,0.939,36,0.097,38,0.008,39,0.008,46,0.907,47,2.143,48,1.732,50,2.562,52,2.265,54,2.225,59,1.081,60,0.979,61,0.839,62,1.308,63,1.817,84,0.414,101,1.175,106,1.324,107,2.448,114,1.834,115,1.93,127,2.878,129,0.996,135,1.483,142,1.175,169,0.714,170,0.848,172,2.255,173,2.779,175,2.729,176,2.779,177,2.414,181,2.485,183,2.448,186,1.441,187,2.962,189,1.81,190,1.564,192,1.339,194,1.252,195,1.564,196,1.564,198,2.223,203,2.688,207,2.448,208,2.448,209,2.448,212,2.688,213,1.636,214,1.564,319,3.393,321,0.939,327,2.448,361,1.958,373,1.339,374,1.718,383,3.01,444,1.252,448,3.926,451,1.924,453,3.01,457,1.924,458,1.924,459,3.709,555,3.015,682,1.339,683,1.718,859,4.115,894,1.924,938,4.553,940,1.924,983,1.924,984,3.499,985,3.499,986,2.236,987,2.236,988,2.236,989,2.236,990,2.236,991,2.236,992,2.236,993,2.236,994,2.236,995,4.311,996,2.236,997,5.613,998,3.499,999,3.499,1000,3.499,1001,2.236,1002,3.499,1003,3.499,1004,2.236,1005,2.236,1006,4.311,1007,3.499,1008,3.499,1009,2.236,1010,2.236,1011,2.236]],["title/coverage.html",[1012,3.898]],["body/coverage.html",[0,0.05,1,1.361,5,0.107,6,2.228,16,0.204,17,0.018,38,0.009,39,0.009,40,2.505,41,1.811,43,2.228,54,0.982,56,1.669,91,1.669,93,1.551,95,1.449,115,0.891,126,2.228,135,0.891,165,1.989,169,1.413,171,2.228,177,1.282,194,1.449,220,1.989,221,2.228,276,1.811,283,1.811,284,2.228,293,1.449,295,1.811,302,2.228,315,1.449,317,1.721,319,1.282,343,1.669,344,1.669,358,2.228,361,1.449,364,1.669,370,1.669,373,1.551,387,2.228,446,1.989,448,1.811,449,2.228,460,1.989,462,2.228,469,2.228,477,2.228,504,1.989,506,2.228,520,2.228,529,1.811,538,2.228,540,3.009,541,3.305,542,1.669,544,1.669,545,4.065,546,1.669,547,2.228,557,1.669,558,2.228,560,2.228,571,2.228,572,3.009,575,2.228,593,2.228,595,2.228,605,1.669,606,2.228,623,1.811,624,2.228,627,1.669,635,1.551,646,2.228,669,1.989,671,2.228,682,1.551,699,1.669,700,2.228,704,1.811,705,2.228,708,1.669,717,1.551,728,2.228,739,1.989,741,2.228,767,2.228,780,1.989,813,2.228,818,2.228,846,1.811,847,2.228,859,1.669,896,1.989,937,2.228,981,1.989,983,2.228,1012,1.989,1013,2.59,1014,2.59,1015,2.59,1016,2.228,1017,6.366,1018,7.734,1019,6.92,1020,2.228,1021,2.228,1022,3.917,1023,6.182,1024,3.917,1025,5.658,1026,4.725,1027,2.228,1028,5.268,1029,2.59,1030,4.725,1031,5.658,1032,2.59,1033,2.228,1034,4.725,1035,2.228,1036,2.228,1037,2.59,1038,2.59,1039,2.228,1040,2.59,1041,2.228,1042,2.228,1043,2.228,1044,2.59,1045,3.37,1046,2.228,1047,2.59,1048,2.59]],["title/dependencies.html",[150,2.086,1049,3.088]],["body/dependencies.html",[0,0.042,17,0.018,35,1.963,38,0.014,39,0.014,84,0.865,99,3.013,100,2.799,144,2.799,150,2.186,234,4.021,296,3.591,314,3.269,348,2.799,556,2.456,582,4.981,583,4.021,778,4.021,779,4.021,964,4.021,1050,6.814,1051,4.674,1052,4.674,1053,4.674,1054,4.674,1055,4.674,1056,4.674,1057,4.674,1058,4.674,1059,4.674,1060,4.674,1061,4.674,1062,4.674,1063,4.674,1064,4.674,1065,4.674,1066,4.674,1067,4.021,1068,4.674,1069,4.674,1070,4.674,1071,4.674,1072,4.674,1073,4.674,1074,4.674,1075,4.674,1076,4.674,1077,4.674]],["title/miscellaneous/functions.html",[1078,2.16,1079,3.838]],["body/miscellaneous/functions.html",[7,0.41,16,0.498,17,0.017,18,0.763,38,0.015,39,0.015,59,1.291,60,1.17,61,1.002,62,1.563,556,3.811,896,4.859,1042,4.484,1043,5.858,1045,4.484,1046,5.441,1078,3.646,1079,4.484,1080,5.213,1081,6.325,1082,5.213,1083,5.213]],["title/index.html",[7,0.243,1084,3.088,1085,3.088]],["body/index.html",[4,0.143,17,0.018,38,0.013,39,0.013,175,2.462,559,3.076,1012,3.379,1086,4.399,1087,4.399,1088,5.686,1089,4.399,1090,4.399,1091,4.399,1092,4.399,1093,4.399,1094,4.399,1095,6.302,1096,4.399,1097,4.399,1098,4.399,1099,7.19,1100,4.399,1101,4.399,1102,4.399,1103,7.066,1104,4.399,1105,4.399,1106,5.686,1107,4.399,1108,4.399,1109,4.399,1110,4.399,1111,5.686,1112,5.686,1113,4.399,1114,4.399,1115,4.399,1116,5.686,1117,5.686,1118,4.399,1119,4.399,1120,4.399,1121,4.399,1122,4.399,1123,3.784,1124,4.399,1125,4.399,1126,4.399,1127,4.399,1128,4.399,1129,4.399,1130,4.399,1131,4.399,1132,4.399,1133,4.399,1134,4.399,1135,4.399,1136,4.399,1137,4.399,1138,4.399,1139,4.399,1140,4.399,1141,4.399]],["title/modules.html",[149,2.246]],["body/modules.html",[17,0.015,38,0.015,39,0.015,148,3.348,149,2.3,155,2.429,156,2.571,259,3.633,262,3.348,263,3.348,264,3.348,265,3.111,1123,6.415,1142,7.457,1143,7.457,1144,7.526,1145,5.195,1146,5.195]],["title/overview.html",[1147,4.365]],["body/overview.html",[2,1.189,17,0.018,38,0.011,39,0.011,42,1.458,93,3.992,148,4.529,149,1.458,150,2.184,151,2.832,152,2.832,153,2.832,154,2.832,155,3.186,156,3.553,157,2.455,158,1.73,159,1.73,170,1.249,177,3.3,259,5.159,260,2.832,261,2.832,262,4.626,263,4.529,264,4.529,265,4.257,293,3.731,339,2.832,341,2.832,342,2.832,343,3.5,344,3.5,361,3.731,461,1.458,497,2.832,498,2.832,500,2.832,635,3.992,663,2.832,664,2.832,665,2.832,717,3.992,733,2.832,734,2.832,735,2.832,975,2.832,977,2.832,978,2.832,1147,2.832,1148,3.292,1149,3.292,1150,3.292,1151,3.292,1152,3.292]],["title/miscellaneous/variables.html",[1078,2.16,1153,3.838]],["body/miscellaneous/variables.html",[7,0.248,16,0.54,17,0.019,24,2.535,38,0.011,39,0.011,63,0.897,106,0.856,165,3.48,187,3.77,192,3.675,228,2.712,253,3.168,320,1.396,367,1.657,444,3.77,446,3.48,504,3.48,669,3.48,739,3.48,768,2.712,780,3.48,785,2.712,787,2.712,981,3.48,1016,2.712,1020,2.712,1021,4.561,1027,2.712,1033,2.712,1035,2.712,1036,2.712,1039,2.712,1041,2.712,1067,2.712,1078,2.205,1153,2.712,1154,3.153,1155,3.153,1156,3.153,1157,3.153,1158,3.153,1159,3.153,1160,3.153,1161,3.153,1162,6.39,1163,3.153,1164,6.39,1165,6.962,1166,3.153,1167,6.39,1168,3.153,1169,3.153,1170,3.153,1171,3.153,1172,3.153,1173,3.153,1174,3.153,1175,3.153,1176,4.53,1177,3.153,1178,3.153,1179,4.53,1180,3.153,1181,3.153,1182,3.153,1183,3.153,1184,4.53,1185,4.53,1186,3.153,1187,3.153,1188,3.153,1189,3.153,1190,3.153,1191,3.153,1192,3.153,1193,3.153,1194,3.153,1195,3.153,1196,3.153,1197,3.153,1198,3.153,1199,3.153,1200,3.153,1201,3.153,1202,3.153,1203,3.153,1204,3.153,1205,3.153,1206,3.153]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"classes/Album.html":{},"controllers/AlbumController.html":{},"classes/AlbumDTO.html":{},"modules/AlbumModule.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"modules/DatabaseModule.html":{},"classes/EmailUtils.html":{},"interfaces/ErrorProps.html":{},"classes/File.html":{},"classes/FileDTO.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"interfaces/IAlbum.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IMusic.html":{},"interfaces/IPlaylist.html":{},"interfaces/IUploadedFile.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Music.html":{},"controllers/MusicController.html":{},"classes/MusicDTO.html":{},"modules/MusicModule.html":{},"injectables/MusicService.html":{},"classes/Playlist.html":{},"controllers/PlaylistController.html":{},"classes/PlaylistDTO.html":{},"modules/PlaylistModule.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"classes/StandardError.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1018,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1057,"title":{},"body":{"dependencies.html":{}}}],["0.2.41",{"_index":1076,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":1062,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1056,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1019,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1029,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1032,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1038,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1024,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1026,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1030,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1037,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1031,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1025,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1023,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1028,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1022,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":330,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["1.0.0",{"_index":1064,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1152,"title":{},"body":{"overview.html":{}}}],["13",{"_index":1150,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1151,"title":{},"body":{"overview.html":{}}}],["2.1044.0",{"_index":1054,"title":{},"body":{"dependencies.html":{}}}],["2.27.0",{"_index":1059,"title":{},"body":{"dependencies.html":{}}}],["250",{"_index":833,"title":{},"body":{"classes/User.html":{}}}],["256",{"_index":420,"title":{},"body":{"classes/CryptographyService.html":{}}}],["3",{"_index":973,"title":{},"body":{"classes/UserDTO.html":{}}}],["3.0.2",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["32",{"_index":426,"title":{},"body":{"classes/CryptographyService.html":{}}}],["4.0.0",{"_index":1063,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1061,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1149,"title":{},"body":{"overview.html":{}}}],["500",{"_index":822,"title":{},"body":{"classes/User.html":{}}}],["6.2.12",{"_index":1077,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1148,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":1050,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":1051,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":1053,"title":{},"body":{"dependencies.html":{}}}],["8.7.1",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["86400s",{"_index":357,"title":{},"body":{"modules/AuthModule.html":{}}}],["accesskeyid",{"_index":785,"title":{},"body":{"injectables/S3Service.html":{},"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["acl",{"_index":804,"title":{},"body":{"injectables/S3Service.html":{}}}],["address",{"_index":561,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{}}}],["aes",{"_index":419,"title":{},"body":{"classes/CryptographyService.html":{}}}],["album",{"_index":1,"title":{"classes/Album.html":{}},"body":{"classes/Album.html":{},"controllers/AlbumController.html":{},"injectables/AlbumService.html":{},"interfaces/IMusic.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{},"coverage.html":{}}}],["album.controller",{"_index":164,"title":{},"body":{"modules/AlbumModule.html":{}}}],["album.id",{"_index":204,"title":{},"body":{"injectables/AlbumService.html":{}}}],["album.provider",{"_index":166,"title":{},"body":{"modules/AlbumModule.html":{}}}],["album.service",{"_index":94,"title":{},"body":{"controllers/AlbumController.html":{},"modules/AlbumModule.html":{}}}],["album_repository",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["albumaux",{"_index":201,"title":{},"body":{"injectables/AlbumService.html":{}}}],["albumaux.cover",{"_index":202,"title":{},"body":{"injectables/AlbumService.html":{}}}],["albumcontroller",{"_index":41,"title":{"controllers/AlbumController.html":{}},"body":{"controllers/AlbumController.html":{},"modules/AlbumModule.html":{},"coverage.html":{}}}],["albumcover",{"_index":211,"title":{},"body":{"injectables/AlbumService.html":{},"interfaces/IMusic.html":{}}}],["albumdto",{"_index":56,"title":{"classes/AlbumDTO.html":{}},"body":{"controllers/AlbumController.html":{},"classes/AlbumDTO.html":{},"injectables/AlbumService.html":{},"coverage.html":{}}}],["albumdto(createalbumdto",{"_index":116,"title":{},"body":{"controllers/AlbumController.html":{}}}],["albumdto(updatealbumdto",{"_index":121,"title":{},"body":{"controllers/AlbumController.html":{}}}],["albumid",{"_index":548,"title":{},"body":{"interfaces/IMusic.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{}}}],["albummodule",{"_index":148,"title":{"modules/AlbumModule.html":{}},"body":{"modules/AlbumModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["albumproviders",{"_index":165,"title":{},"body":{"modules/AlbumModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["albumrepository",{"_index":179,"title":{},"body":{"injectables/AlbumService.html":{}}}],["albums",{"_index":199,"title":{},"body":{"injectables/AlbumService.html":{}}}],["albumservice",{"_index":93,"title":{"injectables/AlbumService.html":{}},"body":{"controllers/AlbumController.html":{},"modules/AlbumModule.html":{},"injectables/AlbumService.html":{},"coverage.html":{},"overview.html":{}}}],["alg",{"_index":388,"title":{},"body":{"classes/CryptographyService.html":{}}}],["allexceptionsfilter",{"_index":220,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["already",{"_index":1002,"title":{},"body":{"injectables/UserService.html":{}}}],["amazing",{"_index":1124,"title":{},"body":{"index.html":{}}}],["app",{"_index":1101,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1094,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":259,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argumentshost",{"_index":229,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["array.isarray(files",{"_index":790,"title":{},"body":{"injectables/S3Service.html":{}}}],["arraybuffer",{"_index":484,"title":{},"body":{"classes/FileDTO.html":{}}}],["artist",{"_index":9,"title":{},"body":{"classes/Album.html":{},"classes/AlbumDTO.html":{},"interfaces/IAlbum.html":{},"interfaces/IMusic.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{}}}],["async",{"_index":47,"title":{},"body":{"controllers/AlbumController.html":{},"injectables/AlbumService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"classes/EmailUtils.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MusicController.html":{},"injectables/MusicService.html":{},"controllers/PlaylistController.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["auth.controller",{"_index":351,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":97,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/AuthController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["auth.guard.ts",{"_index":572,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["authcontroller",{"_index":283,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":573,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":574,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":594,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmiddleware",{"_index":276,"title":{"injectables/AuthMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["authmodule",{"_index":262,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1134,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":293,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1146,"title":{},"body":{"modules.html":{}}}],["await",{"_index":107,"title":{},"body":{"controllers/AlbumController.html":{},"injectables/AlbumService.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"classes/EmailUtils.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"injectables/LocalStrategy.html":{},"controllers/MusicController.html":{},"injectables/MusicService.html":{},"controllers/PlaylistController.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["aws",{"_index":778,"title":{},"body":{"injectables/S3Service.html":{},"dependencies.html":{}}}],["backers",{"_index":1125,"title":{},"body":{"index.html":{}}}],["baseexceptionfilter",{"_index":223,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["birthdate",{"_index":869,"title":{},"body":{"controllers/UserController.html":{}}}],["body",{"_index":77,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":555,"title":{},"body":{"interfaces/IMusic.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":1043,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["br",{"_index":955,"title":{},"body":{"classes/UserDTO.html":{}}}],["browse",{"_index":1144,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1142,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":799,"title":{},"body":{"injectables/S3Service.html":{}}}],["bucketname",{"_index":768,"title":{},"body":{"injectables/S3Service.html":{},"miscellaneous/variables.html":{}}}],["buffer",{"_index":399,"title":{},"body":{"classes/CryptographyService.html":{},"classes/FileDTO.html":{}}}],["buffer.concat",{"_index":433,"title":{},"body":{"classes/CryptographyService.html":{}}}],["buffer.from",{"_index":417,"title":{},"body":{"classes/CryptographyService.html":{}}}],["buffer.from(text",{"_index":439,"title":{},"body":{"classes/CryptographyService.html":{}}}],["building",{"_index":1089,"title":{},"body":{"index.html":{}}}],["called",{"_index":601,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["catch",{"_index":225,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/S3Service.html":{}}}],["catch(exception",{"_index":227,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["checkemailalreadyexists",{"_index":450,"title":{},"body":{"classes/EmailUtils.html":{}}}],["checkemailalreadyexists(userid",{"_index":454,"title":{},"body":{"classes/EmailUtils.html":{}}}],["cipher",{"_index":389,"title":{},"body":{"classes/CryptographyService.html":{}}}],["cipherkey",{"_index":401,"title":{},"body":{"classes/CryptographyService.html":{}}}],["city",{"_index":562,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{}}}],["class",{"_index":0,"title":{"classes/Album.html":{},"classes/AlbumDTO.html":{},"classes/AllExceptionsFilter.html":{},"classes/CryptographyService.html":{},"classes/EmailUtils.html":{},"classes/File.html":{},"classes/FileDTO.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{},"classes/Playlist.html":{},"classes/PlaylistDTO.html":{},"classes/StandardError.html":{},"classes/User.html":{},"classes/UserDTO.html":{}},"body":{"classes/Album.html":{},"controllers/AlbumController.html":{},"classes/AlbumDTO.html":{},"modules/AlbumModule.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"modules/DatabaseModule.html":{},"classes/EmailUtils.html":{},"classes/File.html":{},"classes/FileDTO.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Music.html":{},"controllers/MusicController.html":{},"classes/MusicDTO.html":{},"modules/MusicModule.html":{},"injectables/MusicService.html":{},"classes/Playlist.html":{},"controllers/PlaylistController.html":{},"classes/PlaylistDTO.html":{},"modules/PlaylistModule.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"classes/StandardError.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Album.html":{},"classes/AlbumDTO.html":{},"classes/AllExceptionsFilter.html":{},"classes/CryptographyService.html":{},"classes/EmailUtils.html":{},"classes/File.html":{},"classes/FileDTO.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{},"classes/Playlist.html":{},"classes/PlaylistDTO.html":{},"classes/StandardError.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"overview.html":{}}}],["cli",{"_index":1181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["client",{"_index":87,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{}}}],["clientgrpc",{"_index":86,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["cluster_albummodule",{"_index":151,"title":{},"body":{"modules/AlbumModule.html":{},"overview.html":{}}}],["cluster_albummodule_exports",{"_index":154,"title":{},"body":{"modules/AlbumModule.html":{},"overview.html":{}}}],["cluster_albummodule_imports",{"_index":153,"title":{},"body":{"modules/AlbumModule.html":{},"overview.html":{}}}],["cluster_albummodule_providers",{"_index":152,"title":{},"body":{"modules/AlbumModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":339,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":341,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":340,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":342,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_filemodule",{"_index":497,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_filemodule_exports",{"_index":498,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_filemodule_imports",{"_index":499,"title":{},"body":{"modules/FileModule.html":{}}}],["cluster_filemodule_providers",{"_index":500,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_musicmodule",{"_index":663,"title":{},"body":{"modules/MusicModule.html":{},"overview.html":{}}}],["cluster_musicmodule_exports",{"_index":664,"title":{},"body":{"modules/MusicModule.html":{},"overview.html":{}}}],["cluster_musicmodule_imports",{"_index":666,"title":{},"body":{"modules/MusicModule.html":{}}}],["cluster_musicmodule_providers",{"_index":665,"title":{},"body":{"modules/MusicModule.html":{},"overview.html":{}}}],["cluster_playlistmodule",{"_index":733,"title":{},"body":{"modules/PlaylistModule.html":{},"overview.html":{}}}],["cluster_playlistmodule_exports",{"_index":734,"title":{},"body":{"modules/PlaylistModule.html":{},"overview.html":{}}}],["cluster_playlistmodule_imports",{"_index":736,"title":{},"body":{"modules/PlaylistModule.html":{}}}],["cluster_playlistmodule_providers",{"_index":735,"title":{},"body":{"modules/PlaylistModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":975,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":977,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":976,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":978,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":463,"title":{},"body":{"interfaces/ErrorProps.html":{}}}],["column",{"_index":20,"title":{},"body":{"classes/Album.html":{},"classes/File.html":{},"classes/Music.html":{},"classes/Playlist.html":{},"classes/User.html":{}}}],["column({length",{"_index":821,"title":{},"body":{"classes/User.html":{}}}],["column({nullable",{"_index":23,"title":{},"body":{"classes/Album.html":{},"classes/Music.html":{},"classes/User.html":{}}}],["companyid",{"_index":819,"title":{},"body":{"classes/User.html":{}}}],["companyname",{"_index":820,"title":{},"body":{"classes/User.html":{}}}],["configure",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["connection",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.getrepository(album",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.getrepository(file",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.getrepository(music",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.getrepository(playlist",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.getrepository(user",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connectionoptions",{"_index":1021,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["console.log(error",{"_index":806,"title":{},"body":{"injectables/S3Service.html":{}}}],["const",{"_index":114,"title":{},"body":{"controllers/AlbumController.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"classes/EmailUtils.html":{},"classes/FileDTO.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"injectables/LocalStrategy.html":{},"controllers/MusicController.html":{},"injectables/MusicService.html":{},"controllers/PlaylistController.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":129,"title":{},"body":{"classes/AlbumDTO.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"classes/EmailUtils.html":{},"classes/FileDTO.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MusicDTO.html":{},"injectables/MusicService.html":{},"classes/PlaylistDTO.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"classes/StandardError.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["constructor(albumrepository",{"_index":174,"title":{},"body":{"injectables/AlbumService.html":{}}}],["constructor(authservice",{"_index":596,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(filerepository",{"_index":507,"title":{},"body":{"injectables/FileService.html":{}}}],["constructor(musicrepository",{"_index":672,"title":{},"body":{"injectables/MusicService.html":{}}}],["constructor(playlistrepository",{"_index":742,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["constructor(private",{"_index":103,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/AuthController.html":{},"classes/EmailUtils.html":{},"injectables/LocalStrategy.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["constructor(props",{"_index":130,"title":{},"body":{"classes/AlbumDTO.html":{},"classes/FileDTO.html":{},"classes/MusicDTO.html":{},"classes/PlaylistDTO.html":{},"classes/UserDTO.html":{}}}],["constructor(statuscode",{"_index":814,"title":{},"body":{"classes/StandardError.html":{}}}],["constructor(userrepository",{"_index":451,"title":{},"body":{"classes/EmailUtils.html":{},"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["consumer",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(authmiddleware).forroutes('private/users",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["contenttype",{"_index":801,"title":{},"body":{"injectables/S3Service.html":{}}}],["controller",{"_index":40,"title":{"controllers/AlbumController.html":{},"controllers/AuthController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AlbumController.html":{},"controllers/AuthController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('private/users",{"_index":898,"title":{},"body":{"controllers/UserController.html":{}}}],["controller('public/albums",{"_index":102,"title":{},"body":{"controllers/AlbumController.html":{}}}],["controller('public/auth",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('public/musics",{"_index":637,"title":{},"body":{"controllers/MusicController.html":{}}}],["controller('public/playlists",{"_index":719,"title":{},"body":{"controllers/PlaylistController.html":{}}}],["controllers",{"_index":42,"title":{},"body":{"controllers/AlbumController.html":{},"modules/AlbumModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/MusicController.html":{},"modules/MusicModule.html":{},"controllers/PlaylistController.html":{},"modules/PlaylistModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["country",{"_index":563,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{}}}],["cover",{"_index":128,"title":{},"body":{"classes/AlbumDTO.html":{},"interfaces/IAlbum.html":{},"interfaces/IMusic.html":{},"interfaces/IPlaylist.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{},"classes/PlaylistDTO.html":{}}}],["coverage",{"_index":1012,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":48,"title":{},"body":{"controllers/AlbumController.html":{},"injectables/AlbumService.html":{},"injectables/FileService.html":{},"controllers/MusicController.html":{},"injectables/MusicService.html":{},"controllers/PlaylistController.html":{},"injectables/PlaylistService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(album",{"_index":180,"title":{},"body":{"injectables/AlbumService.html":{}}}],["create(file",{"_index":53,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{}}}],["create(files",{"_index":509,"title":{},"body":{"injectables/FileService.html":{},"controllers/UserController.html":{}}}],["create(music",{"_index":675,"title":{},"body":{"injectables/MusicService.html":{}}}],["create(playlist",{"_index":745,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["create(user",{"_index":985,"title":{},"body":{"injectables/UserService.html":{}}}],["createalbumdto",{"_index":55,"title":{},"body":{"controllers/AlbumController.html":{}}}],["createcipheriv",{"_index":410,"title":{},"body":{"classes/CryptographyService.html":{}}}],["createcipheriv('aes",{"_index":428,"title":{},"body":{"classes/CryptographyService.html":{}}}],["createconnection(connectionoptions",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdat",{"_index":564,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"classes/UserDTO.html":{}}}],["createdecipheriv",{"_index":411,"title":{},"body":{"classes/CryptographyService.html":{}}}],["createdecipheriv('aes",{"_index":430,"title":{},"body":{"classes/CryptographyService.html":{}}}],["createmusicdto",{"_index":626,"title":{},"body":{"controllers/MusicController.html":{}}}],["createplaylistdto",{"_index":707,"title":{},"body":{"controllers/PlaylistController.html":{}}}],["createuserdto",{"_index":858,"title":{},"body":{"controllers/UserController.html":{}}}],["credentials",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{}}}],["crypto",{"_index":413,"title":{},"body":{"classes/CryptographyService.html":{}}}],["cryptographyservice",{"_index":370,"title":{"classes/CryptographyService.html":{}},"body":{"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"classes/UserDTO.html":{},"coverage.html":{}}}],["cryptographyservice.decrypt",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["cryptographyservice.encrypt(this.password",{"_index":968,"title":{},"body":{"classes/UserDTO.html":{}}}],["ctr",{"_index":421,"title":{},"body":{"classes/CryptographyService.html":{}}}],["ctx",{"_index":238,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":241,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["data/connection/database.module",{"_index":167,"title":{},"body":{"modules/AlbumModule.html":{},"modules/AppModule.html":{},"modules/FileModule.html":{},"modules/MusicModule.html":{},"modules/PlaylistModule.html":{},"modules/UserModule.html":{}}}],["data/entities/album.entity",{"_index":193,"title":{},"body":{"injectables/AlbumService.html":{}}}],["data/entities/file.entity",{"_index":570,"title":{},"body":{"interfaces/IUser.html":{},"classes/UserDTO.html":{}}}],["data/entities/music.entity",{"_index":681,"title":{},"body":{"injectables/MusicService.html":{}}}],["data/entities/playlist.entity",{"_index":751,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["data/entities/user.entity",{"_index":457,"title":{},"body":{"classes/EmailUtils.html":{},"injectables/UserService.html":{}}}],["database",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database.providers",{"_index":447,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database_connection",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":155,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AlbumModule.html":{},"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/FileModule.html":{},"modules/MusicModule.html":{},"modules/PlaylistModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":446,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":556,"title":{},"body":{"interfaces/IMusic.html":{},"interfaces/IUser.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["date(birthdate",{"_index":915,"title":{},"body":{"controllers/UserController.html":{}}}],["dateofbirth",{"_index":565,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{}}}],["decipher",{"_index":390,"title":{},"body":{"classes/CryptographyService.html":{}}}],["decorators",{"_index":19,"title":{},"body":{"classes/Album.html":{},"controllers/AlbumController.html":{},"controllers/AuthController.html":{},"classes/File.html":{},"classes/Music.html":{},"controllers/MusicController.html":{},"classes/Playlist.html":{},"controllers/PlaylistController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{}}}],["decriptedpassword",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["decrypt",{"_index":392,"title":{},"body":{"classes/CryptographyService.html":{}}}],["decrypt(text",{"_index":403,"title":{},"body":{"classes/CryptographyService.html":{}}}],["decryptedtext",{"_index":440,"title":{},"body":{"classes/CryptographyService.html":{}}}],["decryptedtext.tostring('hex",{"_index":443,"title":{},"body":{"classes/CryptographyService.html":{}}}],["default",{"_index":444,"title":{},"body":{"classes/CryptographyService.html":{},"injectables/FileUpload.html":{},"injectables/LocalStrategy.html":{},"injectables/S3Service.html":{},"classes/StandardError.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultfilesacl",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultregion",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":21,"title":{},"body":{"classes/Album.html":{},"controllers/AlbumController.html":{},"classes/AlbumDTO.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"classes/EmailUtils.html":{},"classes/File.html":{},"classes/FileDTO.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Music.html":{},"controllers/MusicController.html":{},"classes/MusicDTO.html":{},"injectables/MusicService.html":{},"classes/Playlist.html":{},"controllers/PlaylistController.html":{},"classes/PlaylistDTO.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"classes/StandardError.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":49,"title":{},"body":{"controllers/AlbumController.html":{},"injectables/FileUpload.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{}}}],["delete(':id",{"_index":123,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["delete(@param('id",{"_index":124,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["delete(id",{"_index":64,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["delete(keys",{"_index":524,"title":{},"body":{"injectables/FileUpload.html":{},"injectables/S3Service.html":{}}}],["deleteobjects",{"_index":810,"title":{},"body":{"injectables/S3Service.html":{}}}],["dependencies",{"_index":150,"title":{"dependencies.html":{}},"body":{"modules/AlbumModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/MusicModule.html":{},"modules/PlaylistModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":559,"title":{},"body":{"interfaces/IPlaylist.html":{},"classes/Playlist.html":{},"classes/PlaylistDTO.html":{},"index.html":{}}}],["destroy",{"_index":172,"title":{},"body":{"injectables/AlbumService.html":{},"injectables/FileService.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/UserService.html":{}}}],["destroy(files",{"_index":511,"title":{},"body":{"injectables/FileService.html":{}}}],["destroy(id",{"_index":183,"title":{},"body":{"injectables/AlbumService.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/UserService.html":{}}}],["dev",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":1102,"title":{},"body":{"index.html":{}}}],["dist/data/entities/*.js",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":1013,"title":{},"body":{"coverage.html":{}}}],["domain/modules/album/album.module",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["domain/modules/auth/auth.module",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["domain/modules/file/dto/file.dto",{"_index":530,"title":{},"body":{"injectables/FileUpload.html":{},"injectables/S3Service.html":{}}}],["domain/modules/file/file.module",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["domain/modules/music/music.module",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["domain/modules/playlist/playlist.module",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["domain/modules/user/user.module",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["dto/album.dto",{"_index":90,"title":{},"body":{"controllers/AlbumController.html":{},"injectables/AlbumService.html":{}}}],["dto/file.dto",{"_index":514,"title":{},"body":{"injectables/FileService.html":{}}}],["dto/music.dto",{"_index":633,"title":{},"body":{"controllers/MusicController.html":{},"injectables/MusicService.html":{}}}],["dto/playlist.dto",{"_index":715,"title":{},"body":{"controllers/PlaylistController.html":{},"injectables/PlaylistService.html":{}}}],["dto/user.dto",{"_index":894,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["duration",{"_index":10,"title":{},"body":{"classes/Album.html":{},"classes/AlbumDTO.html":{},"interfaces/IAlbum.html":{},"interfaces/IMusic.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{}}}],["e2e",{"_index":1113,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1090,"title":{},"body":{"index.html":{}}}],["email",{"_index":321,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/EmailUtils.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["emailutils",{"_index":448,"title":{"classes/EmailUtils.html":{}},"body":{"classes/EmailUtils.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["emailutils(this.userrepository",{"_index":994,"title":{},"body":{"injectables/UserService.html":{}}}],["encodesensitivedata",{"_index":938,"title":{},"body":{"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["encoding",{"_index":478,"title":{},"body":{"classes/FileDTO.html":{}}}],["encrypt",{"_index":393,"title":{},"body":{"classes/CryptographyService.html":{}}}],["encrypt(text",{"_index":406,"title":{},"body":{"classes/CryptographyService.html":{}}}],["encryptedtext",{"_index":432,"title":{},"body":{"classes/CryptographyService.html":{}}}],["encryptedtext.tostring('hex",{"_index":436,"title":{},"body":{"classes/CryptographyService.html":{}}}],["encryptedtextbuffer",{"_index":438,"title":{},"body":{"classes/CryptographyService.html":{}}}],["encryptpassword",{"_index":939,"title":{},"body":{"classes/UserDTO.html":{}}}],["entities",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":34,"title":{},"body":{"classes/Album.html":{},"classes/File.html":{},"classes/Music.html":{},"classes/Playlist.html":{},"classes/User.html":{}}}],["entity.{ts,js",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":248,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/LocalStrategy.html":{},"injectables/S3Service.html":{},"classes/StandardError.html":{}}}],["error('email",{"_index":1005,"title":{},"body":{"injectables/UserService.html":{}}}],["error('not",{"_index":534,"title":{},"body":{"injectables/FileUpload.html":{}}}],["errorprops",{"_index":460,"title":{"interfaces/ErrorProps.html":{}},"body":{"interfaces/ErrorProps.html":{},"coverage.html":{}}}],["exception",{"_index":231,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.message",{"_index":249,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.message.error",{"_index":250,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.status",{"_index":244,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.statuscode",{"_index":245,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exists",{"_index":1003,"title":{},"body":{"injectables/UserService.html":{}}}],["expects",{"_index":600,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["experiencing",{"_index":256,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["expiresin",{"_index":356,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/Album.html":{},"controllers/AlbumController.html":{},"classes/AlbumDTO.html":{},"modules/AlbumModule.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"modules/DatabaseModule.html":{},"classes/EmailUtils.html":{},"classes/File.html":{},"classes/FileDTO.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"interfaces/IAlbum.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IMusic.html":{},"interfaces/IPlaylist.html":{},"interfaces/IUploadedFile.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Music.html":{},"controllers/MusicController.html":{},"classes/MusicDTO.html":{},"modules/MusicModule.html":{},"injectables/MusicService.html":{},"classes/Playlist.html":{},"controllers/PlaylistController.html":{},"classes/PlaylistDTO.html":{},"modules/PlaylistModule.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"classes/StandardError.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":163,"title":{},"body":{"modules/AlbumModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/FileModule.html":{},"modules/MusicModule.html":{},"modules/PlaylistModule.html":{},"modules/UserModule.html":{}}}],["express",{"_index":100,"title":{},"body":{"controllers/AlbumController.html":{},"injectables/AuthMiddleware.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["extends",{"_index":222,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/StandardError.html":{}}}],["extra",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":580,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":587,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":253,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/EmailUtils.html":{},"miscellaneous/variables.html":{}}}],["favourite",{"_index":549,"title":{},"body":{"interfaces/IMusic.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{}}}],["favouritecount",{"_index":550,"title":{},"body":{"interfaces/IMusic.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{}}}],["fieldname",{"_index":479,"title":{},"body":{"classes/FileDTO.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"classes/Album.html":{},"controllers/AlbumController.html":{},"classes/AlbumDTO.html":{},"modules/AlbumModule.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"modules/DatabaseModule.html":{},"classes/EmailUtils.html":{},"interfaces/ErrorProps.html":{},"classes/File.html":{},"classes/FileDTO.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"interfaces/IAlbum.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IMusic.html":{},"interfaces/IPlaylist.html":{},"interfaces/IUploadedFile.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Music.html":{},"controllers/MusicController.html":{},"classes/MusicDTO.html":{},"modules/MusicModule.html":{},"injectables/MusicService.html":{},"classes/Playlist.html":{},"controllers/PlaylistController.html":{},"classes/PlaylistDTO.html":{},"modules/PlaylistModule.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"classes/StandardError.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["file.buffer",{"_index":803,"title":{},"body":{"injectables/S3Service.html":{}}}],["file.entity",{"_index":844,"title":{},"body":{"classes/User.html":{}}}],["file.interface",{"_index":539,"title":{},"body":{"interfaces/IAlbum.html":{},"interfaces/IMusic.html":{},"interfaces/IPlaylist.html":{}}}],["file.key",{"_index":519,"title":{},"body":{"injectables/FileService.html":{},"injectables/S3Service.html":{}}}],["file.mimetype",{"_index":802,"title":{},"body":{"injectables/S3Service.html":{}}}],["file.provider",{"_index":505,"title":{},"body":{"modules/FileModule.html":{}}}],["file.service",{"_index":503,"title":{},"body":{"modules/FileModule.html":{}}}],["file.url",{"_index":807,"title":{},"body":{"injectables/S3Service.html":{}}}],["file/dto/file.dto",{"_index":101,"title":{},"body":{"controllers/AlbumController.html":{},"injectables/AlbumService.html":{},"controllers/MusicController.html":{},"injectables/MusicService.html":{},"controllers/PlaylistController.html":{},"injectables/PlaylistService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["file/file.module",{"_index":168,"title":{},"body":{"modules/AlbumModule.html":{},"modules/MusicModule.html":{},"modules/PlaylistModule.html":{},"modules/UserModule.html":{}}}],["file/file.service",{"_index":196,"title":{},"body":{"injectables/AlbumService.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/UserService.html":{}}}],["file_repository",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filedto",{"_index":54,"title":{"classes/FileDTO.html":{}},"body":{"controllers/AlbumController.html":{},"injectables/AlbumService.html":{},"classes/FileDTO.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"controllers/MusicController.html":{},"injectables/MusicService.html":{},"controllers/PlaylistController.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filemodule",{"_index":156,"title":{"modules/FileModule.html":{}},"body":{"modules/AlbumModule.html":{},"modules/AppModule.html":{},"modules/FileModule.html":{},"modules/MusicModule.html":{},"modules/PlaylistModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["fileproviders",{"_index":504,"title":{},"body":{"modules/FileModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filerepository",{"_index":176,"title":{},"body":{"injectables/AlbumService.html":{},"injectables/FileService.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/UserService.html":{}}}],["files",{"_index":181,"title":{},"body":{"injectables/AlbumService.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IUploadedFile.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["files.length",{"_index":214,"title":{},"body":{"injectables/AlbumService.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/UserService.html":{}}}],["files.map(async",{"_index":793,"title":{},"body":{"injectables/S3Service.html":{}}}],["fileservice",{"_index":177,"title":{"injectables/FileService.html":{}},"body":{"injectables/AlbumService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["filesinterceptor",{"_index":98,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["filespaths",{"_index":207,"title":{},"body":{"injectables/AlbumService.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/UserService.html":{}}}],["fileupload",{"_index":194,"title":{"injectables/FileUpload.html":{}},"body":{"injectables/AlbumService.html":{},"injectables/FileUpload.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["fileupload.delete([albumcover.key",{"_index":215,"title":{},"body":{"injectables/AlbumService.html":{}}}],["fileupload.delete([musicfile.key",{"_index":694,"title":{},"body":{"injectables/MusicService.html":{}}}],["fileupload.delete([playlistfile.key",{"_index":762,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["fileupload.delete([useravatar.key",{"_index":1007,"title":{},"body":{"injectables/UserService.html":{}}}],["fileupload.upload(files",{"_index":208,"title":{},"body":{"injectables/AlbumService.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/UserService.html":{}}}],["fileuploaded",{"_index":798,"title":{},"body":{"injectables/S3Service.html":{}}}],["fileuploaded.key",{"_index":809,"title":{},"body":{"injectables/S3Service.html":{}}}],["fileuploaded.location",{"_index":808,"title":{},"body":{"injectables/S3Service.html":{}}}],["findall",{"_index":50,"title":{},"body":{"controllers/AlbumController.html":{},"injectables/AlbumService.html":{},"controllers/MusicController.html":{},"injectables/MusicService.html":{},"controllers/PlaylistController.html":{},"injectables/PlaylistService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyaddress",{"_index":849,"title":{},"body":{"controllers/UserController.html":{}}}],["findbyaddress(@param('address",{"_index":921,"title":{},"body":{"controllers/UserController.html":{}}}],["findbyaddress(address",{"_index":863,"title":{},"body":{"controllers/UserController.html":{}}}],["findbybirthdate",{"_index":850,"title":{},"body":{"controllers/UserController.html":{}}}],["findbybirthdate(@param('birthdate",{"_index":913,"title":{},"body":{"controllers/UserController.html":{}}}],["findbybirthdate(birthdate",{"_index":866,"title":{},"body":{"controllers/UserController.html":{}}}],["findbycity",{"_index":851,"title":{},"body":{"controllers/UserController.html":{}}}],["findbycity(@param('city",{"_index":924,"title":{},"body":{"controllers/UserController.html":{}}}],["findbycity(city",{"_index":870,"title":{},"body":{"controllers/UserController.html":{}}}],["findbycountry",{"_index":852,"title":{},"body":{"controllers/UserController.html":{}}}],["findbycountry(@param('country",{"_index":927,"title":{},"body":{"controllers/UserController.html":{}}}],["findbycountry(country",{"_index":873,"title":{},"body":{"controllers/UserController.html":{}}}],["findbyemail",{"_index":853,"title":{},"body":{"controllers/UserController.html":{}}}],["findbyemail(@param('email",{"_index":902,"title":{},"body":{"controllers/UserController.html":{}}}],["findbyemail(email",{"_index":876,"title":{},"body":{"controllers/UserController.html":{}}}],["findbyfirstname",{"_index":854,"title":{},"body":{"controllers/UserController.html":{}}}],["findbyfirstname(@param('firstname",{"_index":907,"title":{},"body":{"controllers/UserController.html":{}}}],["findbyfirstname(firstname",{"_index":879,"title":{},"body":{"controllers/UserController.html":{}}}],["findbyid",{"_index":51,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["findbyid(@param('id",{"_index":111,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["findbyid(id",{"_index":69,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["findbykey",{"_index":173,"title":{},"body":{"injectables/AlbumService.html":{},"injectables/FileService.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/UserService.html":{}}}],["findbykey(key",{"_index":186,"title":{},"body":{"injectables/AlbumService.html":{},"injectables/FileService.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/UserService.html":{}}}],["findbylastname",{"_index":855,"title":{},"body":{"controllers/UserController.html":{}}}],["findbylastname(@param('lastname",{"_index":910,"title":{},"body":{"controllers/UserController.html":{}}}],["findbylastname(lastname",{"_index":883,"title":{},"body":{"controllers/UserController.html":{}}}],["findbyphonenumber",{"_index":856,"title":{},"body":{"controllers/UserController.html":{}}}],["findbyphonenumber(phonenumber",{"_index":886,"title":{},"body":{"controllers/UserController.html":{}}}],["findbyusername",{"_index":857,"title":{},"body":{"controllers/UserController.html":{}}}],["findbyusername(@param('username",{"_index":904,"title":{},"body":{"controllers/UserController.html":{}}}],["findbyusername(username",{"_index":889,"title":{},"body":{"controllers/UserController.html":{}}}],["firstname",{"_index":566,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{}}}],["fns",{"_index":1058,"title":{},"body":{"dependencies.html":{}}}],["framework",{"_index":1088,"title":{},"body":{"index.html":{}}}],["function",{"_index":545,"title":{},"body":{"interfaces/IFileUploader.html":{},"coverage.html":{}}}],["functions",{"_index":1079,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatefilekey",{"_index":482,"title":{},"body":{"classes/FileDTO.html":{},"injectables/S3Service.html":{}}}],["genre",{"_index":11,"title":{},"body":{"classes/Album.html":{},"classes/AlbumDTO.html":{},"interfaces/IAlbum.html":{},"interfaces/IMusic.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{}}}],["get('/address/:address",{"_index":920,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/birthdate/:birthdate",{"_index":912,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/city/:city",{"_index":923,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/country/:country",{"_index":926,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/email/:email",{"_index":901,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/firstname/:firstname",{"_index":906,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/lastname/:lastname",{"_index":909,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/name/:username",{"_index":903,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/phonenumber/:phonenumber",{"_index":917,"title":{},"body":{"controllers/UserController.html":{}}}],["get(':id",{"_index":109,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["getdatefromstring",{"_index":1046,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdatefromstring(date",{"_index":1082,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getformateddatefromdate",{"_index":896,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getformateddatefromdate(date",{"_index":1083,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getformateddatefromdate(new",{"_index":914,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":1084,"title":{"index.html":{}},"body":{}}],["global",{"_index":502,"title":{},"body":{"modules/FileModule.html":{}}}],["graph",{"_index":1145,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1120,"title":{},"body":{"index.html":{}}}],["grpcmethod",{"_index":85,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["grpcmethod('userservice",{"_index":110,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["helmet",{"_index":1060,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":1131,"title":{},"body":{"index.html":{}}}],["hidesensitivedata",{"_index":940,"title":{},"body":{"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["host",{"_index":228,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":239,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["https://nestjs.com",{"_index":1138,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":233,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":254,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ialbum",{"_index":91,"title":{"interfaces/IAlbum.html":{}},"body":{"controllers/AlbumController.html":{},"injectables/AlbumService.html":{},"interfaces/IAlbum.html":{},"coverage.html":{}}}],["iauth",{"_index":315,"title":{"interfaces/IAuth.html":{}},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["iauthcredentials",{"_index":364,"title":{"interfaces/IAuthCredentials.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"coverage.html":{}}}],["id",{"_index":12,"title":{},"body":{"classes/Album.html":{},"controllers/AlbumController.html":{},"classes/AlbumDTO.html":{},"injectables/AlbumService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/File.html":{},"classes/FileDTO.html":{},"interfaces/IAlbum.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IMusic.html":{},"interfaces/IPlaylist.html":{},"interfaces/IUploadedFile.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/Music.html":{},"controllers/MusicController.html":{},"classes/MusicDTO.html":{},"injectables/MusicService.html":{},"classes/Playlist.html":{},"controllers/PlaylistController.html":{},"classes/PlaylistDTO.html":{},"injectables/PlaylistService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["id).encryptpassword",{"_index":934,"title":{},"body":{"controllers/UserController.html":{}}}],["identifier",{"_index":1014,"title":{},"body":{"coverage.html":{}}}],["ifile",{"_index":135,"title":{"interfaces/IFile.html":{}},"body":{"classes/AlbumDTO.html":{},"injectables/AlbumService.html":{},"injectables/FileService.html":{},"interfaces/IAlbum.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IMusic.html":{},"interfaces/IPlaylist.html":{},"interfaces/IUploadedFile.html":{},"classes/MusicDTO.html":{},"injectables/MusicService.html":{},"classes/PlaylistDTO.html":{},"injectables/PlaylistService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["ifileuploader",{"_index":544,"title":{"interfaces/IFileUploader.html":{}},"body":{"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IUploadedFile.html":{},"coverage.html":{}}}],["ignore",{"_index":334,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["ignoreexpiration",{"_index":588,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{}}}],["import",{"_index":33,"title":{},"body":{"classes/Album.html":{},"controllers/AlbumController.html":{},"classes/AlbumDTO.html":{},"modules/AlbumModule.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"modules/DatabaseModule.html":{},"classes/EmailUtils.html":{},"classes/File.html":{},"classes/FileDTO.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"interfaces/IAlbum.html":{},"interfaces/IMusic.html":{},"interfaces/IPlaylist.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Music.html":{},"controllers/MusicController.html":{},"classes/MusicDTO.html":{},"modules/MusicModule.html":{},"injectables/MusicService.html":{},"classes/Playlist.html":{},"controllers/PlaylistController.html":{},"classes/PlaylistDTO.html":{},"modules/PlaylistModule.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":162,"title":{},"body":{"modules/AlbumModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/MusicModule.html":{},"modules/PlaylistModule.html":{},"modules/UserModule.html":{}}}],["imusic",{"_index":546,"title":{"interfaces/IMusic.html":{}},"body":{"interfaces/IMusic.html":{},"controllers/MusicController.html":{},"injectables/MusicService.html":{},"coverage.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/Album.html":{},"controllers/AlbumController.html":{},"classes/AlbumDTO.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"classes/EmailUtils.html":{},"interfaces/ErrorProps.html":{},"classes/File.html":{},"classes/FileDTO.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"interfaces/IAlbum.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IMusic.html":{},"interfaces/IPlaylist.html":{},"interfaces/IUploadedFile.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Music.html":{},"controllers/MusicController.html":{},"classes/MusicDTO.html":{},"injectables/MusicService.html":{},"classes/Playlist.html":{},"controllers/PlaylistController.html":{},"classes/PlaylistDTO.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"classes/StandardError.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Album.html":{},"controllers/AlbumController.html":{},"classes/AlbumDTO.html":{},"modules/AlbumModule.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"modules/DatabaseModule.html":{},"classes/EmailUtils.html":{},"interfaces/ErrorProps.html":{},"classes/File.html":{},"classes/FileDTO.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"interfaces/IAlbum.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IMusic.html":{},"interfaces/IPlaylist.html":{},"interfaces/IUploadedFile.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Music.html":{},"controllers/MusicController.html":{},"classes/MusicDTO.html":{},"modules/MusicModule.html":{},"injectables/MusicService.html":{},"classes/Playlist.html":{},"controllers/PlaylistController.html":{},"classes/PlaylistDTO.html":{},"modules/PlaylistModule.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"classes/StandardError.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["infra/criptography.service",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserDTO.html":{}}}],["infra/jwt/jwt",{"_index":96,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["infra/jwt/jwt.strategy",{"_index":352,"title":{},"body":{"modules/AuthModule.html":{}}}],["infra/s3/s3.service",{"_index":531,"title":{},"body":{"injectables/FileUpload.html":{}}}],["inject",{"_index":192,"title":{},"body":{"injectables/AlbumService.html":{},"injectables/FileService.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["inject('album_repository",{"_index":197,"title":{},"body":{"injectables/AlbumService.html":{}}}],["inject('file_repository",{"_index":515,"title":{},"body":{"injectables/FileService.html":{}}}],["inject('music_repository",{"_index":684,"title":{},"body":{"injectables/MusicService.html":{}}}],["inject('playlist_repository",{"_index":752,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["inject('user_repository",{"_index":992,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":169,"title":{"injectables/AlbumService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"injectables/UserService.html":{}},"body":{"injectables/AlbumService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":170,"title":{},"body":{"injectables/AlbumService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":1098,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1100,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":247,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["interface",{"_index":317,"title":{"interfaces/ErrorProps.html":{},"interfaces/IAlbum.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IMusic.html":{},"interfaces/IPlaylist.html":{},"interfaces/IUploadedFile.html":{},"interfaces/IUser.html":{}},"body":{"injectables/AuthMiddleware.html":{},"interfaces/ErrorProps.html":{},"interfaces/IAlbum.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IMusic.html":{},"interfaces/IPlaylist.html":{},"interfaces/IUploadedFile.html":{},"interfaces/IUser.html":{},"coverage.html":{}}}],["interfaces",{"_index":461,"title":{},"body":{"interfaces/ErrorProps.html":{},"interfaces/IAlbum.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IMusic.html":{},"interfaces/IPlaylist.html":{},"interfaces/IUploadedFile.html":{},"interfaces/IUser.html":{},"overview.html":{}}}],["interfaces/auth.interface",{"_index":316,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["iplaylist",{"_index":557,"title":{"interfaces/IPlaylist.html":{}},"body":{"interfaces/IPlaylist.html":{},"controllers/PlaylistController.html":{},"injectables/PlaylistService.html":{},"coverage.html":{}}}],["isemail",{"_index":947,"title":{},"body":{"classes/UserDTO.html":{}}}],["ismobilephone",{"_index":963,"title":{},"body":{"classes/UserDTO.html":{}}}],["ismobilephone('pt",{"_index":954,"title":{},"body":{"classes/UserDTO.html":{}}}],["isnotempty",{"_index":952,"title":{},"body":{"classes/UserDTO.html":{}}}],["iuploadedfile",{"_index":542,"title":{"interfaces/IUploadedFile.html":{}},"body":{"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IUploadedFile.html":{},"coverage.html":{}}}],["iuser",{"_index":373,"title":{"interfaces/IUser.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["iuserrequest",{"_index":318,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["iv",{"_index":391,"title":{},"body":{"classes/CryptographyService.html":{}}}],["join",{"_index":1127,"title":{},"body":{"index.html":{}}}],["join(__dirname",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joincolumn",{"_index":843,"title":{},"body":{"classes/User.html":{}}}],["jwt",{"_index":583,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":95,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AlbumController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":586,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":354,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":303,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":343,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1135,"title":{},"body":{"index.html":{}}}],["key",{"_index":189,"title":{},"body":{"injectables/AlbumService.html":{},"classes/CryptographyService.html":{},"classes/File.html":{},"classes/FileDTO.html":{},"injectables/FileService.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IUploadedFile.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"injectables/UserService.html":{}}}],["keys",{"_index":526,"title":{},"body":{"injectables/FileUpload.html":{},"injectables/S3Service.html":{}}}],["keys.map((key",{"_index":812,"title":{},"body":{"injectables/S3Service.html":{}}}],["lastname",{"_index":567,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{}}}],["lastplayed",{"_index":551,"title":{},"body":{"interfaces/IMusic.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{}}}],["length",{"_index":845,"title":{},"body":{"classes/User.html":{}}}],["license",{"_index":1141,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1117,"title":{},"body":{"index.html":{}}}],["literal",{"_index":467,"title":{},"body":{"interfaces/ErrorProps.html":{}}}],["local",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":350,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":295,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":344,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":224,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/UserDTO.html":{}}}],["logger('allexceptionsfilter",{"_index":237,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["login",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(credentials",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["main/interfaces/album.interface",{"_index":92,"title":{},"body":{"controllers/AlbumController.html":{},"injectables/AlbumService.html":{}}}],["main/interfaces/auth.interface",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["main/interfaces/file.interface",{"_index":142,"title":{},"body":{"classes/AlbumDTO.html":{},"injectables/AlbumService.html":{},"injectables/FileService.html":{},"classes/MusicDTO.html":{},"injectables/MusicService.html":{},"classes/PlaylistDTO.html":{},"injectables/PlaylistService.html":{},"injectables/UserService.html":{}}}],["main/interfaces/music.interface",{"_index":634,"title":{},"body":{"controllers/MusicController.html":{},"injectables/MusicService.html":{}}}],["main/interfaces/playlist.interface",{"_index":716,"title":{},"body":{"controllers/PlaylistController.html":{},"injectables/PlaylistService.html":{}}}],["main/interfaces/user.interface",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["main/middlewares/auth.middleware",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["main/utils/date.utils",{"_index":897,"title":{},"body":{"controllers/UserController.html":{}}}],["main/utils/email.utils",{"_index":991,"title":{},"body":{"injectables/UserService.html":{}}}],["main/utils/error.utils",{"_index":683,"title":{},"body":{"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/UserService.html":{}}}],["main/utils/file.utils",{"_index":195,"title":{},"body":{"injectables/AlbumService.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/UserService.html":{}}}],["matching",{"_index":39,"title":{},"body":{"classes/Album.html":{},"controllers/AlbumController.html":{},"classes/AlbumDTO.html":{},"modules/AlbumModule.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"modules/DatabaseModule.html":{},"classes/EmailUtils.html":{},"interfaces/ErrorProps.html":{},"classes/File.html":{},"classes/FileDTO.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"interfaces/IAlbum.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IMusic.html":{},"interfaces/IPlaylist.html":{},"interfaces/IUploadedFile.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Music.html":{},"controllers/MusicController.html":{},"classes/MusicDTO.html":{},"modules/MusicModule.html":{},"injectables/MusicService.html":{},"classes/Playlist.html":{},"controllers/PlaylistController.html":{},"classes/PlaylistDTO.html":{},"modules/PlaylistModule.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"classes/StandardError.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":246,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ErrorProps.html":{},"classes/StandardError.html":{}}}],["meta",{"_index":464,"title":{},"body":{"interfaces/ErrorProps.html":{}}}],["metadata",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":46,"title":{},"body":{"controllers/AlbumController.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"classes/EmailUtils.html":{},"classes/FileDTO.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MusicController.html":{},"injectables/MusicService.html":{},"controllers/PlaylistController.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["middlewareconsumer",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["migration.{ts,js",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrations",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationsdir",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mimetype",{"_index":480,"title":{},"body":{"classes/FileDTO.html":{}}}],["miscellaneous",{"_index":1078,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":602,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["mit",{"_index":1116,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1106,"title":{},"body":{"index.html":{}}}],["module",{"_index":147,"title":{"modules/AlbumModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/FileModule.html":{},"modules/MusicModule.html":{},"modules/PlaylistModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AlbumModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/FileModule.html":{},"modules/MusicModule.html":{},"modules/PlaylistModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":149,"title":{"modules.html":{}},"body":{"modules/AlbumModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/FileModule.html":{},"modules/MusicModule.html":{},"modules/PlaylistModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1130,"title":{},"body":{"index.html":{}}}],["music",{"_index":605,"title":{"classes/Music.html":{}},"body":{"classes/Music.html":{},"controllers/MusicController.html":{},"injectables/MusicService.html":{},"coverage.html":{}}}],["music.controller",{"_index":668,"title":{},"body":{"modules/MusicModule.html":{}}}],["music.id",{"_index":689,"title":{},"body":{"injectables/MusicService.html":{}}}],["music.provider",{"_index":670,"title":{},"body":{"modules/MusicModule.html":{}}}],["music.service",{"_index":636,"title":{},"body":{"controllers/MusicController.html":{},"modules/MusicModule.html":{}}}],["music_repository",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["musicaux",{"_index":687,"title":{},"body":{"injectables/MusicService.html":{}}}],["musicaux.file",{"_index":688,"title":{},"body":{"injectables/MusicService.html":{}}}],["musiccontroller",{"_index":623,"title":{"controllers/MusicController.html":{}},"body":{"controllers/MusicController.html":{},"modules/MusicModule.html":{},"coverage.html":{}}}],["musicdto",{"_index":627,"title":{"classes/MusicDTO.html":{}},"body":{"controllers/MusicController.html":{},"classes/MusicDTO.html":{},"injectables/MusicService.html":{},"coverage.html":{}}}],["musicdto(createmusicdto",{"_index":640,"title":{},"body":{"controllers/MusicController.html":{}}}],["musicdto(music",{"_index":643,"title":{},"body":{"controllers/MusicController.html":{}}}],["musicfile",{"_index":693,"title":{},"body":{"injectables/MusicService.html":{}}}],["musicmodule",{"_index":263,"title":{"modules/MusicModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MusicModule.html":{},"modules.html":{},"overview.html":{}}}],["musicproviders",{"_index":669,"title":{},"body":{"modules/MusicModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["musicrepository",{"_index":674,"title":{},"body":{"injectables/MusicService.html":{}}}],["musics",{"_index":685,"title":{},"body":{"injectables/MusicService.html":{}}}],["musicservice",{"_index":635,"title":{"injectables/MusicService.html":{}},"body":{"controllers/MusicController.html":{},"modules/MusicModule.html":{},"injectables/MusicService.html":{},"coverage.html":{},"overview.html":{}}}],["myśliwiec",{"_index":1136,"title":{},"body":{"index.html":{}}}],["name",{"_index":60,"title":{},"body":{"controllers/AlbumController.html":{},"classes/AlbumDTO.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"classes/EmailUtils.html":{},"classes/FileDTO.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"interfaces/IPlaylist.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MusicController.html":{},"classes/MusicDTO.html":{},"injectables/MusicService.html":{},"classes/Playlist.html":{},"controllers/PlaylistController.html":{},"classes/PlaylistDTO.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"classes/StandardError.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":1095,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1140,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":84,"title":{},"body":{"controllers/AlbumController.html":{},"modules/AlbumModule.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MusicController.html":{},"modules/MusicModule.html":{},"injectables/MusicService.html":{},"controllers/PlaylistController.html":{},"modules/PlaylistModule.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":234,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":314,"title":{},"body":{"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":89,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["nestjs/passport",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":99,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":1052,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":312,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nestmodule",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":115,"title":{},"body":{"controllers/AlbumController.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"classes/CryptographyService.html":{},"injectables/FileUpload.html":{},"injectables/LocalStrategy.html":{},"controllers/MusicController.html":{},"injectables/MusicService.html":{},"controllers/PlaylistController.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newfile",{"_index":794,"title":{},"body":{"injectables/S3Service.html":{}}}],["next",{"_index":308,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nextfunction",{"_index":309,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["node.js",{"_index":1087,"title":{},"body":{"index.html":{}}}],["npm",{"_index":1099,"title":{},"body":{"index.html":{}}}],["null",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserDTO.html":{}}}],["nullable",{"_index":37,"title":{},"body":{"classes/Album.html":{},"classes/Music.html":{},"classes/User.html":{}}}],["number",{"_index":29,"title":{},"body":{"classes/Album.html":{},"classes/AlbumDTO.html":{},"interfaces/ErrorProps.html":{},"interfaces/IAlbum.html":{},"interfaces/IMusic.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{},"classes/StandardError.html":{}}}],["number(process.env.db_port",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["numberofsongs",{"_index":13,"title":{},"body":{"classes/Album.html":{},"classes/AlbumDTO.html":{},"interfaces/IAlbum.html":{}}}],["object",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.assign(album",{"_index":205,"title":{},"body":{"injectables/AlbumService.html":{}}}],["object.assign(music",{"_index":690,"title":{},"body":{"injectables/MusicService.html":{}}}],["object.assign(playlist",{"_index":758,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["object.assign(this",{"_index":145,"title":{},"body":{"classes/AlbumDTO.html":{},"classes/FileDTO.html":{},"classes/MusicDTO.html":{},"classes/PlaylistDTO.html":{},"classes/UserDTO.html":{}}}],["object.assign(user",{"_index":999,"title":{},"body":{"injectables/UserService.html":{}}}],["objects",{"_index":811,"title":{},"body":{"injectables/S3Service.html":{}}}],["omit",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"classes/FileDTO.html":{},"injectables/S3Service.html":{},"classes/UserDTO.html":{}}}],["onetoone",{"_index":842,"title":{},"body":{"classes/User.html":{}}}],["onetoone(undefined)@joincolumn",{"_index":831,"title":{},"body":{"classes/User.html":{}}}],["open",{"_index":1118,"title":{},"body":{"index.html":{}}}],["optional",{"_index":61,"title":{},"body":{"controllers/AlbumController.html":{},"classes/AlbumDTO.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"classes/EmailUtils.html":{},"classes/FileDTO.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"interfaces/IAlbum.html":{},"interfaces/IMusic.html":{},"interfaces/IPlaylist.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MusicController.html":{},"classes/MusicDTO.html":{},"injectables/MusicService.html":{},"controllers/PlaylistController.html":{},"classes/PlaylistDTO.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"classes/StandardError.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["originalname",{"_index":481,"title":{},"body":{"classes/FileDTO.html":{}}}],["ou",{"_index":535,"title":{},"body":{"injectables/FileUpload.html":{}}}],["out",{"_index":159,"title":{},"body":{"modules/AlbumModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/MusicModule.html":{},"modules/PlaylistModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":1147,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownerid",{"_index":213,"title":{},"body":{"injectables/AlbumService.html":{},"classes/File.html":{},"classes/FileDTO.html":{},"injectables/FileUpload.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IUploadedFile.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"injectables/UserService.html":{}}}],["ownertype",{"_index":470,"title":{},"body":{"classes/File.html":{},"classes/FileDTO.html":{},"injectables/FileUpload.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IUploadedFile.html":{},"injectables/S3Service.html":{}}}],["package",{"_index":1049,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":79,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":119,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["param('phonenumber",{"_index":918,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":59,"title":{},"body":{"controllers/AlbumController.html":{},"classes/AlbumDTO.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"classes/EmailUtils.html":{},"classes/FileDTO.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MusicController.html":{},"classes/MusicDTO.html":{},"injectables/MusicService.html":{},"controllers/PlaylistController.html":{},"classes/PlaylistDTO.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"classes/StandardError.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["passport",{"_index":582,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":584,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":585,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"interfaces/IUser.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":543,"title":{},"body":{"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IUploadedFile.html":{},"injectables/S3Service.html":{}}}],["paths",{"_index":791,"title":{},"body":{"injectables/S3Service.html":{}}}],["payload",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":592,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":590,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":591,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pg",{"_index":1065,"title":{},"body":{"dependencies.html":{}}}],["phonenumber",{"_index":568,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{}}}],["playcount",{"_index":552,"title":{},"body":{"interfaces/IMusic.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{}}}],["playlist",{"_index":699,"title":{"classes/Playlist.html":{}},"body":{"classes/Playlist.html":{},"controllers/PlaylistController.html":{},"injectables/PlaylistService.html":{},"coverage.html":{}}}],["playlist.controller",{"_index":738,"title":{},"body":{"modules/PlaylistModule.html":{}}}],["playlist.id",{"_index":757,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["playlist.provider",{"_index":740,"title":{},"body":{"modules/PlaylistModule.html":{}}}],["playlist.service",{"_index":718,"title":{},"body":{"controllers/PlaylistController.html":{},"modules/PlaylistModule.html":{}}}],["playlist_repository",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["playlistaux",{"_index":755,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["playlistaux.cover",{"_index":756,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["playlistcontroller",{"_index":704,"title":{"controllers/PlaylistController.html":{}},"body":{"controllers/PlaylistController.html":{},"modules/PlaylistModule.html":{},"coverage.html":{}}}],["playlistdto",{"_index":708,"title":{"classes/PlaylistDTO.html":{}},"body":{"controllers/PlaylistController.html":{},"classes/PlaylistDTO.html":{},"injectables/PlaylistService.html":{},"coverage.html":{}}}],["playlistdto(createplaylistdto",{"_index":722,"title":{},"body":{"controllers/PlaylistController.html":{}}}],["playlistdto(playlist",{"_index":725,"title":{},"body":{"controllers/PlaylistController.html":{}}}],["playlistfile",{"_index":761,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["playlistid",{"_index":553,"title":{},"body":{"interfaces/IMusic.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{}}}],["playlistmodule",{"_index":264,"title":{"modules/PlaylistModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PlaylistModule.html":{},"modules.html":{},"overview.html":{}}}],["playlistproviders",{"_index":739,"title":{},"body":{"modules/PlaylistModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playlistrepository",{"_index":744,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["playlists",{"_index":753,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["playlistservice",{"_index":717,"title":{"injectables/PlaylistService.html":{}},"body":{"controllers/PlaylistController.html":{},"modules/PlaylistModule.html":{},"injectables/PlaylistService.html":{},"coverage.html":{},"overview.html":{}}}],["please",{"_index":1128,"title":{},"body":{"index.html":{}}}],["port",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":76,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["post('/login",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@useinterceptors(undefined",{"_index":57,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/UserController.html":{}}}],["postgres",{"_index":1067,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":44,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/AuthController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["primarycolumn",{"_index":27,"title":{},"body":{"classes/Album.html":{},"classes/File.html":{},"classes/Music.html":{},"classes/Playlist.html":{},"classes/User.html":{}}}],["primarygeneratedcolumn",{"_index":622,"title":{},"body":{"classes/Music.html":{},"classes/Playlist.html":{}}}],["private",{"_index":198,"title":{},"body":{"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"classes/StandardError.html":{},"injectables/UserService.html":{}}}],["private/users",{"_index":848,"title":{},"body":{"controllers/UserController.html":{}}}],["problems",{"_index":258,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["process.env.enviorement",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.jwt_secret",{"_index":324,"title":{},"body":{"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["prod",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1108,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1086,"title":{},"body":{"index.html":{}}}],["project",{"_index":1119,"title":{},"body":{"index.html":{}}}],["promise",{"_index":63,"title":{},"body":{"controllers/AlbumController.html":{},"injectables/AlbumService.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"classes/EmailUtils.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IUploadedFile.html":{},"injectables/LocalStrategy.html":{},"controllers/MusicController.html":{},"injectables/MusicService.html":{},"controllers/PlaylistController.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":792,"title":{},"body":{"injectables/S3Service.html":{}}}],["promisify",{"_index":414,"title":{},"body":{"classes/CryptographyService.html":{}}}],["promisify(scrypt",{"_index":423,"title":{},"body":{"classes/CryptographyService.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/Album.html":{},"classes/AlbumDTO.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{},"classes/CryptographyService.html":{},"interfaces/ErrorProps.html":{},"classes/File.html":{},"classes/FileDTO.html":{},"injectables/FileUpload.html":{},"interfaces/IAlbum.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IMusic.html":{},"interfaces/IPlaylist.html":{},"interfaces/IUploadedFile.html":{},"interfaces/IUser.html":{},"injectables/LocalStrategy.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{},"classes/Playlist.html":{},"classes/PlaylistDTO.html":{},"injectables/S3Service.html":{},"classes/StandardError.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["props",{"_index":132,"title":{},"body":{"classes/AlbumDTO.html":{},"classes/FileDTO.html":{},"classes/MusicDTO.html":{},"classes/PlaylistDTO.html":{},"classes/UserDTO.html":{}}}],["provide",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":161,"title":{},"body":{"modules/AlbumModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/FileModule.html":{},"modules/MusicModule.html":{},"modules/PlaylistModule.html":{},"modules/UserModule.html":{}}}],["public",{"_index":127,"title":{},"body":{"classes/AlbumDTO.html":{},"injectables/AlbumService.html":{},"classes/EmailUtils.html":{},"classes/FileDTO.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{},"injectables/MusicService.html":{},"classes/PlaylistDTO.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["public/albums",{"_index":45,"title":{},"body":{"controllers/AlbumController.html":{}}}],["public/auth",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/musics",{"_index":625,"title":{},"body":{"controllers/MusicController.html":{}}}],["public/playlists",{"_index":706,"title":{},"body":{"controllers/PlaylistController.html":{}}}],["put",{"_index":78,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["put(':id",{"_index":118,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["rating",{"_index":554,"title":{},"body":{"interfaces/IMusic.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{}}}],["read",{"_index":1129,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":104,"title":{},"body":{"controllers/AlbumController.html":{},"classes/AllExceptionsFilter.html":{},"classes/CryptographyService.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{}}}],["reflect",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["region",{"_index":783,"title":{},"body":{"injectables/S3Service.html":{}}}],["rejectunauthorized",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repository",{"_index":175,"title":{},"body":{"injectables/AlbumService.html":{},"classes/EmailUtils.html":{},"injectables/FileService.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["req",{"_index":311,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/S3Service.html":{}}}],["req.headers.authorization",{"_index":326,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req.headers.authorization.split",{"_index":329,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req.method",{"_index":325,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req.user",{"_index":335,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["request",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/LocalStrategy.html":{}}}],["require('dotenv').config",{"_index":353,"title":{},"body":{"modules/AuthModule.html":{}}}],["res",{"_index":307,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/S3Service.html":{}}}],["reset",{"_index":158,"title":{},"body":{"modules/AlbumModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/MusicModule.html":{},"modules/PlaylistModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":240,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthMiddleware.html":{}}}],["response.status(status).json",{"_index":251,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["result",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":38,"title":{},"body":{"classes/Album.html":{},"controllers/AlbumController.html":{},"classes/AlbumDTO.html":{},"modules/AlbumModule.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"modules/DatabaseModule.html":{},"classes/EmailUtils.html":{},"interfaces/ErrorProps.html":{},"classes/File.html":{},"classes/FileDTO.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"interfaces/IAlbum.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IMusic.html":{},"interfaces/IPlaylist.html":{},"interfaces/IUploadedFile.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Music.html":{},"controllers/MusicController.html":{},"classes/MusicDTO.html":{},"modules/MusicModule.html":{},"injectables/MusicService.html":{},"classes/Playlist.html":{},"controllers/PlaylistController.html":{},"classes/PlaylistDTO.html":{},"modules/PlaylistModule.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"classes/StandardError.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":106,"title":{},"body":{"controllers/AlbumController.html":{},"injectables/AlbumService.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"classes/EmailUtils.html":{},"classes/FileDTO.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MusicController.html":{},"injectables/MusicService.html":{},"controllers/PlaylistController.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":62,"title":{},"body":{"controllers/AlbumController.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"classes/EmailUtils.html":{},"classes/FileDTO.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MusicController.html":{},"injectables/MusicService.html":{},"controllers/PlaylistController.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":1103,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["s3",{"_index":776,"title":{},"body":{"injectables/S3Service.html":{}}}],["s3.config",{"_index":781,"title":{},"body":{"injectables/S3Service.html":{}}}],["s3config",{"_index":780,"title":{},"body":{"injectables/S3Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["s3config.accesskeyid",{"_index":786,"title":{},"body":{"injectables/S3Service.html":{}}}],["s3config.bucketname",{"_index":775,"title":{},"body":{"injectables/S3Service.html":{}}}],["s3config.defaultfilesacl",{"_index":805,"title":{},"body":{"injectables/S3Service.html":{}}}],["s3config.defaultregion",{"_index":784,"title":{},"body":{"injectables/S3Service.html":{}}}],["s3config.secretaccesskey",{"_index":788,"title":{},"body":{"injectables/S3Service.html":{}}}],["s3service",{"_index":529,"title":{"injectables/S3Service.html":{}},"body":{"injectables/FileUpload.html":{},"injectables/S3Service.html":{},"coverage.html":{}}}],["salt",{"_index":425,"title":{},"body":{"classes/CryptographyService.html":{}}}],["scalable",{"_index":1091,"title":{},"body":{"index.html":{}}}],["scrypt",{"_index":412,"title":{},"body":{"classes/CryptographyService.html":{}}}],["sdk",{"_index":779,"title":{},"body":{"injectables/S3Service.html":{},"dependencies.html":{}}}],["secret",{"_index":323,"title":{},"body":{"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{}}}],["secretaccesskey",{"_index":787,"title":{},"body":{"injectables/S3Service.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":589,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":1092,"title":{},"body":{"index.html":{}}}],["setcipherconfigurations",{"_index":394,"title":{},"body":{"classes/CryptographyService.html":{}}}],["setdecipherconfigurations",{"_index":395,"title":{},"body":{"classes/CryptographyService.html":{}}}],["side",{"_index":1093,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":355,"title":{},"body":{"modules/AuthModule.html":{}}}],["sorry",{"_index":255,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Album.html":{},"controllers/AlbumController.html":{},"classes/AlbumDTO.html":{},"modules/AlbumModule.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"modules/DatabaseModule.html":{},"classes/EmailUtils.html":{},"interfaces/ErrorProps.html":{},"classes/File.html":{},"classes/FileDTO.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"interfaces/IAlbum.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IMusic.html":{},"interfaces/IPlaylist.html":{},"interfaces/IUploadedFile.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Music.html":{},"controllers/MusicController.html":{},"classes/MusicDTO.html":{},"modules/MusicModule.html":{},"injectables/MusicService.html":{},"classes/Playlist.html":{},"controllers/PlaylistController.html":{},"classes/PlaylistDTO.html":{},"modules/PlaylistModule.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"classes/StandardError.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":1122,"title":{},"body":{"index.html":{}}}],["src/.../album.provider.ts",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.providers.ts",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../date.utils.ts",{"_index":1081,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../file.provider.ts",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1080,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../music.provider.ts",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ormconfig.ts",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../playlist.provider.ts",{"_index":1159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../s3.config.ts",{"_index":1160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.provider.ts",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:23",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["src/data/connection/database.module.ts",{"_index":445,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/data/connection/database.providers.ts",{"_index":1016,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/data/connection/ormconfig.ts",{"_index":1020,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/data/entities/album.entity.ts",{"_index":6,"title":{},"body":{"classes/Album.html":{},"coverage.html":{}}}],["src/data/entities/album.entity.ts:12",{"_index":22,"title":{},"body":{"classes/Album.html":{}}}],["src/data/entities/album.entity.ts:15",{"_index":32,"title":{},"body":{"classes/Album.html":{}}}],["src/data/entities/album.entity.ts:18",{"_index":26,"title":{},"body":{"classes/Album.html":{}}}],["src/data/entities/album.entity.ts:23",{"_index":30,"title":{},"body":{"classes/Album.html":{}}}],["src/data/entities/album.entity.ts:28",{"_index":25,"title":{},"body":{"classes/Album.html":{}}}],["src/data/entities/album.entity.ts:6",{"_index":28,"title":{},"body":{"classes/Album.html":{}}}],["src/data/entities/album.entity.ts:9",{"_index":31,"title":{},"body":{"classes/Album.html":{}}}],["src/data/entities/file.entity.ts",{"_index":469,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/data/entities/file.entity.ts:12",{"_index":475,"title":{},"body":{"classes/File.html":{}}}],["src/data/entities/file.entity.ts:15",{"_index":473,"title":{},"body":{"classes/File.html":{}}}],["src/data/entities/file.entity.ts:18",{"_index":476,"title":{},"body":{"classes/File.html":{}}}],["src/data/entities/file.entity.ts:6",{"_index":472,"title":{},"body":{"classes/File.html":{}}}],["src/data/entities/file.entity.ts:9",{"_index":474,"title":{},"body":{"classes/File.html":{}}}],["src/data/entities/music.entity.ts",{"_index":606,"title":{},"body":{"classes/Music.html":{},"coverage.html":{}}}],["src/data/entities/music.entity.ts:12",{"_index":609,"title":{},"body":{"classes/Music.html":{}}}],["src/data/entities/music.entity.ts:15",{"_index":607,"title":{},"body":{"classes/Music.html":{}}}],["src/data/entities/music.entity.ts:18",{"_index":614,"title":{},"body":{"classes/Music.html":{}}}],["src/data/entities/music.entity.ts:21",{"_index":621,"title":{},"body":{"classes/Music.html":{}}}],["src/data/entities/music.entity.ts:26",{"_index":619,"title":{},"body":{"classes/Music.html":{}}}],["src/data/entities/music.entity.ts:29",{"_index":611,"title":{},"body":{"classes/Music.html":{}}}],["src/data/entities/music.entity.ts:34",{"_index":610,"title":{},"body":{"classes/Music.html":{}}}],["src/data/entities/music.entity.ts:39",{"_index":617,"title":{},"body":{"classes/Music.html":{}}}],["src/data/entities/music.entity.ts:44",{"_index":612,"title":{},"body":{"classes/Music.html":{}}}],["src/data/entities/music.entity.ts:49",{"_index":613,"title":{},"body":{"classes/Music.html":{}}}],["src/data/entities/music.entity.ts:54",{"_index":616,"title":{},"body":{"classes/Music.html":{}}}],["src/data/entities/music.entity.ts:59",{"_index":618,"title":{},"body":{"classes/Music.html":{}}}],["src/data/entities/music.entity.ts:6",{"_index":615,"title":{},"body":{"classes/Music.html":{}}}],["src/data/entities/music.entity.ts:61",{"_index":608,"title":{},"body":{"classes/Music.html":{}}}],["src/data/entities/music.entity.ts:9",{"_index":620,"title":{},"body":{"classes/Music.html":{}}}],["src/data/entities/playlist.entity.ts",{"_index":700,"title":{},"body":{"classes/Playlist.html":{},"coverage.html":{}}}],["src/data/entities/playlist.entity.ts:12",{"_index":701,"title":{},"body":{"classes/Playlist.html":{}}}],["src/data/entities/playlist.entity.ts:6",{"_index":702,"title":{},"body":{"classes/Playlist.html":{}}}],["src/data/entities/playlist.entity.ts:9",{"_index":703,"title":{},"body":{"classes/Playlist.html":{}}}],["src/data/entities/user.entity.ts",{"_index":818,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/data/entities/user.entity.ts:10",{"_index":841,"title":{},"body":{"classes/User.html":{}}}],["src/data/entities/user.entity.ts:13",{"_index":837,"title":{},"body":{"classes/User.html":{}}}],["src/data/entities/user.entity.ts:16",{"_index":830,"title":{},"body":{"classes/User.html":{}}}],["src/data/entities/user.entity.ts:19",{"_index":834,"title":{},"body":{"classes/User.html":{}}}],["src/data/entities/user.entity.ts:22",{"_index":836,"title":{},"body":{"classes/User.html":{}}}],["src/data/entities/user.entity.ts:25",{"_index":829,"title":{},"body":{"classes/User.html":{}}}],["src/data/entities/user.entity.ts:28",{"_index":838,"title":{},"body":{"classes/User.html":{}}}],["src/data/entities/user.entity.ts:31",{"_index":823,"title":{},"body":{"classes/User.html":{}}}],["src/data/entities/user.entity.ts:34",{"_index":824,"title":{},"body":{"classes/User.html":{}}}],["src/data/entities/user.entity.ts:37",{"_index":827,"title":{},"body":{"classes/User.html":{}}}],["src/data/entities/user.entity.ts:40",{"_index":839,"title":{},"body":{"classes/User.html":{}}}],["src/data/entities/user.entity.ts:43",{"_index":825,"title":{},"body":{"classes/User.html":{}}}],["src/data/entities/user.entity.ts:46",{"_index":826,"title":{},"body":{"classes/User.html":{}}}],["src/data/entities/user.entity.ts:49",{"_index":828,"title":{},"body":{"classes/User.html":{}}}],["src/data/entities/user.entity.ts:52",{"_index":840,"title":{},"body":{"classes/User.html":{}}}],["src/data/entities/user.entity.ts:56",{"_index":832,"title":{},"body":{"classes/User.html":{}}}],["src/data/entities/user.entity.ts:7",{"_index":835,"title":{},"body":{"classes/User.html":{}}}],["src/domain/modules/album/album.controller.ts",{"_index":43,"title":{},"body":{"controllers/AlbumController.html":{},"coverage.html":{}}}],["src/domain/modules/album/album.controller.ts:33",{"_index":68,"title":{},"body":{"controllers/AlbumController.html":{}}}],["src/domain/modules/album/album.controller.ts:40",{"_index":71,"title":{},"body":{"controllers/AlbumController.html":{}}}],["src/domain/modules/album/album.controller.ts:46",{"_index":58,"title":{},"body":{"controllers/AlbumController.html":{}}}],["src/domain/modules/album/album.controller.ts:57",{"_index":75,"title":{},"body":{"controllers/AlbumController.html":{}}}],["src/domain/modules/album/album.controller.ts:68",{"_index":66,"title":{},"body":{"controllers/AlbumController.html":{}}}],["src/domain/modules/album/album.module.ts",{"_index":160,"title":{},"body":{"modules/AlbumModule.html":{}}}],["src/domain/modules/album/album.provider.ts",{"_index":1027,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/domain/modules/album/album.service.ts",{"_index":171,"title":{},"body":{"injectables/AlbumService.html":{},"coverage.html":{}}}],["src/domain/modules/album/album.service.ts:12",{"_index":178,"title":{},"body":{"injectables/AlbumService.html":{}}}],["src/domain/modules/album/album.service.ts:19",{"_index":185,"title":{},"body":{"injectables/AlbumService.html":{}}}],["src/domain/modules/album/album.service.ts:32",{"_index":188,"title":{},"body":{"injectables/AlbumService.html":{}}}],["src/domain/modules/album/album.service.ts:49",{"_index":182,"title":{},"body":{"injectables/AlbumService.html":{}}}],["src/domain/modules/album/album.service.ts:57",{"_index":191,"title":{},"body":{"injectables/AlbumService.html":{}}}],["src/domain/modules/album/album.service.ts:82",{"_index":184,"title":{},"body":{"injectables/AlbumService.html":{}}}],["src/domain/modules/album/dto/album.dto.ts",{"_index":126,"title":{},"body":{"classes/AlbumDTO.html":{},"coverage.html":{}}}],["src/domain/modules/album/dto/album.dto.ts:10",{"_index":139,"title":{},"body":{"classes/AlbumDTO.html":{}}}],["src/domain/modules/album/dto/album.dto.ts:11",{"_index":136,"title":{},"body":{"classes/AlbumDTO.html":{}}}],["src/domain/modules/album/dto/album.dto.ts:12",{"_index":131,"title":{},"body":{"classes/AlbumDTO.html":{}}}],["src/domain/modules/album/dto/album.dto.ts:5",{"_index":138,"title":{},"body":{"classes/AlbumDTO.html":{}}}],["src/domain/modules/album/dto/album.dto.ts:6",{"_index":140,"title":{},"body":{"classes/AlbumDTO.html":{}}}],["src/domain/modules/album/dto/album.dto.ts:7",{"_index":134,"title":{},"body":{"classes/AlbumDTO.html":{}}}],["src/domain/modules/album/dto/album.dto.ts:8",{"_index":141,"title":{},"body":{"classes/AlbumDTO.html":{}}}],["src/domain/modules/album/dto/album.dto.ts:9",{"_index":137,"title":{},"body":{"classes/AlbumDTO.html":{}}}],["src/domain/modules/auth/auth.controller.ts",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/domain/modules/auth/auth.controller.ts:11",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/domain/modules/auth/auth.module.ts",{"_index":345,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/domain/modules/auth/auth.service.ts",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/domain/modules/auth/auth.service.ts:12",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/domain/modules/auth/auth.service.ts:18",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/domain/modules/auth/auth.service.ts:37",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/domain/modules/auth/local",{"_index":593,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/domain/modules/auth/local.strategy.ts",{"_index":595,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/domain/modules/auth/local.strategy.ts:14",{"_index":599,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/domain/modules/auth/local.strategy.ts:7",{"_index":597,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/domain/modules/file/dto/file.dto.ts",{"_index":477,"title":{},"body":{"classes/FileDTO.html":{},"coverage.html":{}}}],["src/domain/modules/file/dto/file.dto.ts:10",{"_index":490,"title":{},"body":{"classes/FileDTO.html":{}}}],["src/domain/modules/file/dto/file.dto.ts:11",{"_index":485,"title":{},"body":{"classes/FileDTO.html":{}}}],["src/domain/modules/file/dto/file.dto.ts:12",{"_index":489,"title":{},"body":{"classes/FileDTO.html":{}}}],["src/domain/modules/file/dto/file.dto.ts:13",{"_index":483,"title":{},"body":{"classes/FileDTO.html":{}}}],["src/domain/modules/file/dto/file.dto.ts:23",{"_index":494,"title":{},"body":{"classes/FileDTO.html":{}}}],["src/domain/modules/file/dto/file.dto.ts:4",{"_index":488,"title":{},"body":{"classes/FileDTO.html":{}}}],["src/domain/modules/file/dto/file.dto.ts:5",{"_index":492,"title":{},"body":{"classes/FileDTO.html":{}}}],["src/domain/modules/file/dto/file.dto.ts:6",{"_index":493,"title":{},"body":{"classes/FileDTO.html":{}}}],["src/domain/modules/file/dto/file.dto.ts:7",{"_index":487,"title":{},"body":{"classes/FileDTO.html":{}}}],["src/domain/modules/file/dto/file.dto.ts:8",{"_index":491,"title":{},"body":{"classes/FileDTO.html":{}}}],["src/domain/modules/file/dto/file.dto.ts:9",{"_index":486,"title":{},"body":{"classes/FileDTO.html":{}}}],["src/domain/modules/file/file.module.ts",{"_index":501,"title":{},"body":{"modules/FileModule.html":{}}}],["src/domain/modules/file/file.provider.ts",{"_index":1033,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/domain/modules/file/file.service.ts",{"_index":506,"title":{},"body":{"injectables/FileService.html":{},"coverage.html":{}}}],["src/domain/modules/file/file.service.ts:13",{"_index":513,"title":{},"body":{"injectables/FileService.html":{}}}],["src/domain/modules/file/file.service.ts:19",{"_index":510,"title":{},"body":{"injectables/FileService.html":{}}}],["src/domain/modules/file/file.service.ts:25",{"_index":512,"title":{},"body":{"injectables/FileService.html":{}}}],["src/domain/modules/file/file.service.ts:7",{"_index":508,"title":{},"body":{"injectables/FileService.html":{}}}],["src/domain/modules/music/dto/music.dto.ts",{"_index":646,"title":{},"body":{"classes/MusicDTO.html":{},"coverage.html":{}}}],["src/domain/modules/music/dto/music.dto.ts:10",{"_index":662,"title":{},"body":{"classes/MusicDTO.html":{}}}],["src/domain/modules/music/dto/music.dto.ts:11",{"_index":660,"title":{},"body":{"classes/MusicDTO.html":{}}}],["src/domain/modules/music/dto/music.dto.ts:12",{"_index":652,"title":{},"body":{"classes/MusicDTO.html":{}}}],["src/domain/modules/music/dto/music.dto.ts:13",{"_index":651,"title":{},"body":{"classes/MusicDTO.html":{}}}],["src/domain/modules/music/dto/music.dto.ts:14",{"_index":658,"title":{},"body":{"classes/MusicDTO.html":{}}}],["src/domain/modules/music/dto/music.dto.ts:15",{"_index":653,"title":{},"body":{"classes/MusicDTO.html":{}}}],["src/domain/modules/music/dto/music.dto.ts:16",{"_index":654,"title":{},"body":{"classes/MusicDTO.html":{}}}],["src/domain/modules/music/dto/music.dto.ts:17",{"_index":657,"title":{},"body":{"classes/MusicDTO.html":{}}}],["src/domain/modules/music/dto/music.dto.ts:18",{"_index":659,"title":{},"body":{"classes/MusicDTO.html":{}}}],["src/domain/modules/music/dto/music.dto.ts:19",{"_index":649,"title":{},"body":{"classes/MusicDTO.html":{}}}],["src/domain/modules/music/dto/music.dto.ts:20",{"_index":647,"title":{},"body":{"classes/MusicDTO.html":{}}}],["src/domain/modules/music/dto/music.dto.ts:5",{"_index":656,"title":{},"body":{"classes/MusicDTO.html":{}}}],["src/domain/modules/music/dto/music.dto.ts:6",{"_index":661,"title":{},"body":{"classes/MusicDTO.html":{}}}],["src/domain/modules/music/dto/music.dto.ts:7",{"_index":650,"title":{},"body":{"classes/MusicDTO.html":{}}}],["src/domain/modules/music/dto/music.dto.ts:8",{"_index":648,"title":{},"body":{"classes/MusicDTO.html":{}}}],["src/domain/modules/music/dto/music.dto.ts:9",{"_index":655,"title":{},"body":{"classes/MusicDTO.html":{}}}],["src/domain/modules/music/music.controller.ts",{"_index":624,"title":{},"body":{"controllers/MusicController.html":{},"coverage.html":{}}}],["src/domain/modules/music/music.controller.ts:33",{"_index":630,"title":{},"body":{"controllers/MusicController.html":{}}}],["src/domain/modules/music/music.controller.ts:40",{"_index":631,"title":{},"body":{"controllers/MusicController.html":{}}}],["src/domain/modules/music/music.controller.ts:46",{"_index":628,"title":{},"body":{"controllers/MusicController.html":{}}}],["src/domain/modules/music/music.controller.ts:57",{"_index":632,"title":{},"body":{"controllers/MusicController.html":{}}}],["src/domain/modules/music/music.controller.ts:68",{"_index":629,"title":{},"body":{"controllers/MusicController.html":{}}}],["src/domain/modules/music/music.module.ts",{"_index":667,"title":{},"body":{"modules/MusicModule.html":{}}}],["src/domain/modules/music/music.provider.ts",{"_index":1035,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/domain/modules/music/music.service.ts",{"_index":671,"title":{},"body":{"injectables/MusicService.html":{},"coverage.html":{}}}],["src/domain/modules/music/music.service.ts:13",{"_index":673,"title":{},"body":{"injectables/MusicService.html":{}}}],["src/domain/modules/music/music.service.ts:20",{"_index":678,"title":{},"body":{"injectables/MusicService.html":{}}}],["src/domain/modules/music/music.service.ts:33",{"_index":679,"title":{},"body":{"injectables/MusicService.html":{}}}],["src/domain/modules/music/music.service.ts:50",{"_index":676,"title":{},"body":{"injectables/MusicService.html":{}}}],["src/domain/modules/music/music.service.ts:58",{"_index":680,"title":{},"body":{"injectables/MusicService.html":{}}}],["src/domain/modules/music/music.service.ts:80",{"_index":677,"title":{},"body":{"injectables/MusicService.html":{}}}],["src/domain/modules/playlist/dto/playlist.dto.ts",{"_index":728,"title":{},"body":{"classes/PlaylistDTO.html":{},"coverage.html":{}}}],["src/domain/modules/playlist/dto/playlist.dto.ts:5",{"_index":731,"title":{},"body":{"classes/PlaylistDTO.html":{}}}],["src/domain/modules/playlist/dto/playlist.dto.ts:6",{"_index":732,"title":{},"body":{"classes/PlaylistDTO.html":{}}}],["src/domain/modules/playlist/dto/playlist.dto.ts:7",{"_index":730,"title":{},"body":{"classes/PlaylistDTO.html":{}}}],["src/domain/modules/playlist/dto/playlist.dto.ts:8",{"_index":729,"title":{},"body":{"classes/PlaylistDTO.html":{}}}],["src/domain/modules/playlist/playlist.controller.ts",{"_index":705,"title":{},"body":{"controllers/PlaylistController.html":{},"coverage.html":{}}}],["src/domain/modules/playlist/playlist.controller.ts:33",{"_index":712,"title":{},"body":{"controllers/PlaylistController.html":{}}}],["src/domain/modules/playlist/playlist.controller.ts:40",{"_index":713,"title":{},"body":{"controllers/PlaylistController.html":{}}}],["src/domain/modules/playlist/playlist.controller.ts:47",{"_index":710,"title":{},"body":{"controllers/PlaylistController.html":{}}}],["src/domain/modules/playlist/playlist.controller.ts:58",{"_index":714,"title":{},"body":{"controllers/PlaylistController.html":{}}}],["src/domain/modules/playlist/playlist.controller.ts:69",{"_index":711,"title":{},"body":{"controllers/PlaylistController.html":{}}}],["src/domain/modules/playlist/playlist.module.ts",{"_index":737,"title":{},"body":{"modules/PlaylistModule.html":{}}}],["src/domain/modules/playlist/playlist.provider.ts",{"_index":1036,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/domain/modules/playlist/playlist.service.ts",{"_index":741,"title":{},"body":{"injectables/PlaylistService.html":{},"coverage.html":{}}}],["src/domain/modules/playlist/playlist.service.ts:13",{"_index":743,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["src/domain/modules/playlist/playlist.service.ts:20",{"_index":748,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["src/domain/modules/playlist/playlist.service.ts:36",{"_index":749,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["src/domain/modules/playlist/playlist.service.ts:56",{"_index":746,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["src/domain/modules/playlist/playlist.service.ts:67",{"_index":750,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["src/domain/modules/playlist/playlist.service.ts:92",{"_index":747,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["src/domain/modules/user/dto/user.dto.ts",{"_index":937,"title":{},"body":{"classes/UserDTO.html":{},"coverage.html":{}}}],["src/domain/modules/user/dto/user.dto.ts:12",{"_index":953,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/domain/modules/user/dto/user.dto.ts:15",{"_index":948,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/domain/modules/user/dto/user.dto.ts:17",{"_index":949,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/domain/modules/user/dto/user.dto.ts:19",{"_index":951,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/domain/modules/user/dto/user.dto.ts:21",{"_index":946,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/domain/modules/user/dto/user.dto.ts:24",{"_index":956,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/domain/modules/user/dto/user.dto.ts:26",{"_index":942,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/domain/modules/user/dto/user.dto.ts:28",{"_index":943,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/domain/modules/user/dto/user.dto.ts:30",{"_index":944,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/domain/modules/user/dto/user.dto.ts:32",{"_index":957,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/domain/modules/user/dto/user.dto.ts:34",{"_index":945,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/domain/modules/user/dto/user.dto.ts:36",{"_index":958,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/domain/modules/user/dto/user.dto.ts:38",{"_index":941,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/domain/modules/user/dto/user.dto.ts:56",{"_index":961,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/domain/modules/user/dto/user.dto.ts:62",{"_index":962,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/domain/modules/user/dto/user.dto.ts:73",{"_index":960,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/domain/modules/user/dto/user.dto.ts:8",{"_index":950,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/domain/modules/user/dto/user.dto.ts:9",{"_index":959,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/domain/modules/user/user.controller.ts",{"_index":847,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/domain/modules/user/user.controller.ts:104",{"_index":860,"title":{},"body":{"controllers/UserController.html":{}}}],["src/domain/modules/user/user.controller.ts:115",{"_index":893,"title":{},"body":{"controllers/UserController.html":{}}}],["src/domain/modules/user/user.controller.ts:126",{"_index":861,"title":{},"body":{"controllers/UserController.html":{}}}],["src/domain/modules/user/user.controller.ts:33",{"_index":862,"title":{},"body":{"controllers/UserController.html":{}}}],["src/domain/modules/user/user.controller.ts:40",{"_index":882,"title":{},"body":{"controllers/UserController.html":{}}}],["src/domain/modules/user/user.controller.ts:47",{"_index":878,"title":{},"body":{"controllers/UserController.html":{}}}],["src/domain/modules/user/user.controller.ts:53",{"_index":891,"title":{},"body":{"controllers/UserController.html":{}}}],["src/domain/modules/user/user.controller.ts:59",{"_index":881,"title":{},"body":{"controllers/UserController.html":{}}}],["src/domain/modules/user/user.controller.ts:65",{"_index":885,"title":{},"body":{"controllers/UserController.html":{}}}],["src/domain/modules/user/user.controller.ts:71",{"_index":868,"title":{},"body":{"controllers/UserController.html":{}}}],["src/domain/modules/user/user.controller.ts:78",{"_index":888,"title":{},"body":{"controllers/UserController.html":{}}}],["src/domain/modules/user/user.controller.ts:86",{"_index":865,"title":{},"body":{"controllers/UserController.html":{}}}],["src/domain/modules/user/user.controller.ts:92",{"_index":872,"title":{},"body":{"controllers/UserController.html":{}}}],["src/domain/modules/user/user.controller.ts:98",{"_index":875,"title":{},"body":{"controllers/UserController.html":{}}}],["src/domain/modules/user/user.module.ts",{"_index":979,"title":{},"body":{"modules/UserModule.html":{}}}],["src/domain/modules/user/user.provider.ts",{"_index":1039,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/domain/modules/user/user.service.ts",{"_index":983,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/domain/modules/user/user.service.ts:102",{"_index":987,"title":{},"body":{"injectables/UserService.html":{}}}],["src/domain/modules/user/user.service.ts:15",{"_index":984,"title":{},"body":{"injectables/UserService.html":{}}}],["src/domain/modules/user/user.service.ts:25",{"_index":988,"title":{},"body":{"injectables/UserService.html":{}}}],["src/domain/modules/user/user.service.ts:38",{"_index":989,"title":{},"body":{"injectables/UserService.html":{}}}],["src/domain/modules/user/user.service.ts:63",{"_index":986,"title":{},"body":{"injectables/UserService.html":{}}}],["src/domain/modules/user/user.service.ts:74",{"_index":990,"title":{},"body":{"injectables/UserService.html":{}}}],["src/infra/criptography.service.ts",{"_index":387,"title":{},"body":{"classes/CryptographyService.html":{},"coverage.html":{}}}],["src/infra/criptography.service.ts:12",{"_index":397,"title":{},"body":{"classes/CryptographyService.html":{}}}],["src/infra/criptography.service.ts:13",{"_index":400,"title":{},"body":{"classes/CryptographyService.html":{}}}],["src/infra/criptography.service.ts:14",{"_index":402,"title":{},"body":{"classes/CryptographyService.html":{}}}],["src/infra/criptography.service.ts:15",{"_index":398,"title":{},"body":{"classes/CryptographyService.html":{}}}],["src/infra/criptography.service.ts:16",{"_index":396,"title":{},"body":{"classes/CryptographyService.html":{}}}],["src/infra/criptography.service.ts:23",{"_index":408,"title":{},"body":{"classes/CryptographyService.html":{}}}],["src/infra/criptography.service.ts:32",{"_index":409,"title":{},"body":{"classes/CryptographyService.html":{}}}],["src/infra/criptography.service.ts:41",{"_index":407,"title":{},"body":{"classes/CryptographyService.html":{}}}],["src/infra/criptography.service.ts:51",{"_index":404,"title":{},"body":{"classes/CryptographyService.html":{}}}],["src/infra/jwt/jwt",{"_index":571,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/infra/jwt/jwt.strategy.ts",{"_index":575,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/infra/jwt/jwt.strategy.ts:16",{"_index":579,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/infra/jwt/jwt.strategy.ts:7",{"_index":577,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/infra/s3/s3.config.ts",{"_index":1041,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infra/s3/s3.service.ts",{"_index":767,"title":{},"body":{"injectables/S3Service.html":{},"coverage.html":{}}}],["src/infra/s3/s3.service.ts:10",{"_index":770,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/infra/s3/s3.service.ts:20",{"_index":772,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/infra/s3/s3.service.ts:50",{"_index":774,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/infra/s3/s3.service.ts:73",{"_index":771,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/infra/s3/s3.service.ts:8",{"_index":777,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/main.ts",{"_index":1042,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/main/filters/exception.filter.ts",{"_index":221,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/main/filters/exception.filter.ts:14",{"_index":230,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/main/filters/exception.filter.ts:6",{"_index":226,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/main/interfaces/album.interface.ts",{"_index":538,"title":{},"body":{"interfaces/IAlbum.html":{},"coverage.html":{}}}],["src/main/interfaces/auth.interface.ts",{"_index":540,"title":{},"body":{"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"coverage.html":{}}}],["src/main/interfaces/error.interface.ts",{"_index":462,"title":{},"body":{"interfaces/ErrorProps.html":{},"coverage.html":{}}}],["src/main/interfaces/file.interface.ts",{"_index":541,"title":{},"body":{"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IUploadedFile.html":{},"coverage.html":{}}}],["src/main/interfaces/music.interface.ts",{"_index":547,"title":{},"body":{"interfaces/IMusic.html":{},"coverage.html":{}}}],["src/main/interfaces/playlist.interface.ts",{"_index":558,"title":{},"body":{"interfaces/IPlaylist.html":{},"coverage.html":{}}}],["src/main/interfaces/user.interface.ts",{"_index":560,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/main/middlewares/auth.middleware.ts",{"_index":302,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/main/middlewares/auth.middleware.ts:20",{"_index":305,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/main/middlewares/auth.middleware.ts:28",{"_index":310,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/main/utils/date.utils.ts",{"_index":1045,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/main/utils/email.utils.ts",{"_index":449,"title":{},"body":{"classes/EmailUtils.html":{},"coverage.html":{}}}],["src/main/utils/email.utils.ts:4",{"_index":452,"title":{},"body":{"classes/EmailUtils.html":{}}}],["src/main/utils/email.utils.ts:7",{"_index":455,"title":{},"body":{"classes/EmailUtils.html":{}}}],["src/main/utils/error.utils.ts",{"_index":813,"title":{},"body":{"classes/StandardError.html":{},"coverage.html":{}}}],["src/main/utils/error.utils.ts:2",{"_index":815,"title":{},"body":{"classes/StandardError.html":{}}}],["src/main/utils/file.utils.ts",{"_index":520,"title":{},"body":{"injectables/FileUpload.html":{},"coverage.html":{}}}],["src/main/utils/file.utils.ts:13",{"_index":528,"title":{},"body":{"injectables/FileUpload.html":{}}}],["src/main/utils/file.utils.ts:31",{"_index":525,"title":{},"body":{"injectables/FileUpload.html":{}}}],["src/main/utils/file.utils.ts:7",{"_index":523,"title":{},"body":{"injectables/FileUpload.html":{}}}],["ssl",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["standarderror",{"_index":682,"title":{"classes/StandardError.html":{}},"body":{"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"classes/StandardError.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["standarderror(202",{"_index":1001,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":1104,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1107,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1109,"title":{},"body":{"index.html":{}}}],["started",{"_index":1085,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1097,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1015,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":243,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["statuscode",{"_index":465,"title":{},"body":{"interfaces/ErrorProps.html":{},"classes/StandardError.html":{}}}],["stay",{"_index":1132,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":581,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":18,"title":{},"body":{"classes/Album.html":{},"controllers/AlbumController.html":{},"classes/AlbumDTO.html":{},"injectables/AlbumService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"classes/EmailUtils.html":{},"interfaces/ErrorProps.html":{},"classes/File.html":{},"classes/FileDTO.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"interfaces/IAlbum.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IMusic.html":{},"interfaces/IPlaylist.html":{},"interfaces/IUploadedFile.html":{},"interfaces/IUser.html":{},"injectables/LocalStrategy.html":{},"classes/Music.html":{},"controllers/MusicController.html":{},"classes/MusicDTO.html":{},"injectables/MusicService.html":{},"classes/Playlist.html":{},"controllers/PlaylistController.html":{},"classes/PlaylistDTO.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"classes/StandardError.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["string(process.env.aws_access_key",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.aws_s3_bucket",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.aws_secret_access",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.db_host",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.db_name",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.db_password",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.db_username",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.default_files_acl",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.default_region",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.secret",{"_index":424,"title":{},"body":{"classes/CryptographyService.html":{}}}],["success",{"_index":252,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["super",{"_index":235,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/StandardError.html":{}}}],["support",{"_index":1123,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1143,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1047,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":468,"title":{},"body":{"interfaces/ErrorProps.html":{}}}],["technical",{"_index":257,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["test",{"_index":1112,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1115,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1114,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1111,"title":{},"body":{"index.html":{}}}],["text",{"_index":405,"title":{},"body":{"classes/CryptographyService.html":{}}}],["thanks",{"_index":1121,"title":{},"body":{"index.html":{}}}],["this.albumrepository.delete(id",{"_index":219,"title":{},"body":{"injectables/AlbumService.html":{}}}],["this.albumrepository.find",{"_index":200,"title":{},"body":{"injectables/AlbumService.html":{}}}],["this.albumrepository.findone",{"_index":206,"title":{},"body":{"injectables/AlbumService.html":{}}}],["this.albumrepository.findone(id",{"_index":218,"title":{},"body":{"injectables/AlbumService.html":{}}}],["this.albumrepository.save",{"_index":217,"title":{},"body":{"injectables/AlbumService.html":{}}}],["this.albumrepository.save(album",{"_index":210,"title":{},"body":{"injectables/AlbumService.html":{}}}],["this.albumservice.create(album",{"_index":117,"title":{},"body":{"controllers/AlbumController.html":{}}}],["this.albumservice.destroy(id",{"_index":125,"title":{},"body":{"controllers/AlbumController.html":{}}}],["this.albumservice.findall",{"_index":108,"title":{},"body":{"controllers/AlbumController.html":{}}}],["this.albumservice.findbykey('id",{"_index":112,"title":{},"body":{"controllers/AlbumController.html":{}}}],["this.albumservice.update(id",{"_index":122,"title":{},"body":{"controllers/AlbumController.html":{}}}],["this.alg",{"_index":418,"title":{},"body":{"classes/CryptographyService.html":{}}}],["this.authservice.login(credentials",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":604,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.bucketname",{"_index":800,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.cipher",{"_index":427,"title":{},"body":{"classes/CryptographyService.html":{}}}],["this.cipher.final",{"_index":435,"title":{},"body":{"classes/CryptographyService.html":{}}}],["this.cipher.update(text",{"_index":434,"title":{},"body":{"classes/CryptographyService.html":{}}}],["this.client",{"_index":782,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.createdat",{"_index":965,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.dateofbirth",{"_index":970,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.decipher",{"_index":429,"title":{},"body":{"classes/CryptographyService.html":{}}}],["this.decipher.final",{"_index":442,"title":{},"body":{"classes/CryptographyService.html":{}}}],["this.decipher.update(encryptedtextbuffer",{"_index":441,"title":{},"body":{"classes/CryptographyService.html":{}}}],["this.emailutils",{"_index":993,"title":{},"body":{"injectables/UserService.html":{}}}],["this.emailutils.checkemailalreadyexists(user.id",{"_index":1000,"title":{},"body":{"injectables/UserService.html":{}}}],["this.filerepository.create(filespaths",{"_index":209,"title":{},"body":{"injectables/AlbumService.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/UserService.html":{}}}],["this.filerepository.delete",{"_index":518,"title":{},"body":{"injectables/FileService.html":{}}}],["this.filerepository.destroy([albumcover",{"_index":216,"title":{},"body":{"injectables/AlbumService.html":{}}}],["this.filerepository.destroy([musicfile",{"_index":695,"title":{},"body":{"injectables/MusicService.html":{}}}],["this.filerepository.destroy([playlistfile",{"_index":763,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["this.filerepository.destroy([useravatar",{"_index":1008,"title":{},"body":{"injectables/UserService.html":{}}}],["this.filerepository.findbykey",{"_index":212,"title":{},"body":{"injectables/AlbumService.html":{},"injectables/PlaylistService.html":{},"injectables/UserService.html":{}}}],["this.filerepository.findbykey('ownerid",{"_index":203,"title":{},"body":{"injectables/AlbumService.html":{},"injectables/MusicService.html":{},"injectables/UserService.html":{}}}],["this.filerepository.findone",{"_index":516,"title":{},"body":{"injectables/FileService.html":{}}}],["this.filerepository.save(file",{"_index":517,"title":{},"body":{"injectables/FileService.html":{}}}],["this.id",{"_index":146,"title":{},"body":{"classes/AlbumDTO.html":{},"classes/FileDTO.html":{},"classes/MusicDTO.html":{},"classes/PlaylistDTO.html":{},"classes/UserDTO.html":{}}}],["this.id}.${name",{"_index":496,"title":{},"body":{"classes/FileDTO.html":{}}}],["this.iv",{"_index":416,"title":{},"body":{"classes/CryptographyService.html":{}}}],["this.jwtservice",{"_index":322,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["this.jwtservice.sign(payload",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":332,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["this.key",{"_index":422,"title":{},"body":{"classes/CryptographyService.html":{},"classes/FileDTO.html":{}}}],["this.logger",{"_index":236,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.logger.error(exception",{"_index":242,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.message",{"_index":817,"title":{},"body":{"classes/StandardError.html":{}}}],["this.musicrepository.delete(id",{"_index":698,"title":{},"body":{"injectables/MusicService.html":{}}}],["this.musicrepository.find",{"_index":686,"title":{},"body":{"injectables/MusicService.html":{}}}],["this.musicrepository.findone",{"_index":691,"title":{},"body":{"injectables/MusicService.html":{}}}],["this.musicrepository.findone(id",{"_index":697,"title":{},"body":{"injectables/MusicService.html":{}}}],["this.musicrepository.save",{"_index":696,"title":{},"body":{"injectables/MusicService.html":{}}}],["this.musicrepository.save(music",{"_index":692,"title":{},"body":{"injectables/MusicService.html":{}}}],["this.musicservice.create(music",{"_index":641,"title":{},"body":{"controllers/MusicController.html":{}}}],["this.musicservice.destroy(id",{"_index":645,"title":{},"body":{"controllers/MusicController.html":{}}}],["this.musicservice.findall",{"_index":638,"title":{},"body":{"controllers/MusicController.html":{}}}],["this.musicservice.findbykey('id",{"_index":639,"title":{},"body":{"controllers/MusicController.html":{}}}],["this.musicservice.update(id",{"_index":644,"title":{},"body":{"controllers/MusicController.html":{}}}],["this.originalname.split('.')[0",{"_index":495,"title":{},"body":{"classes/FileDTO.html":{}}}],["this.password",{"_index":967,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.phonenumber",{"_index":971,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.phonenumber.substring(0",{"_index":972,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.phonenumber.substring(9",{"_index":974,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.playlistrepository.delete(id",{"_index":766,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["this.playlistrepository.find",{"_index":754,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["this.playlistrepository.findone",{"_index":759,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["this.playlistrepository.findone(id",{"_index":765,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["this.playlistrepository.save",{"_index":764,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["this.playlistrepository.save(playlist",{"_index":760,"title":{},"body":{"injectables/PlaylistService.html":{}}}],["this.playlistservice.create(playlist",{"_index":723,"title":{},"body":{"controllers/PlaylistController.html":{}}}],["this.playlistservice.destroy(id",{"_index":727,"title":{},"body":{"controllers/PlaylistController.html":{}}}],["this.playlistservice.findall",{"_index":720,"title":{},"body":{"controllers/PlaylistController.html":{}}}],["this.playlistservice.findbykey('id",{"_index":721,"title":{},"body":{"controllers/PlaylistController.html":{}}}],["this.playlistservice.update(id",{"_index":726,"title":{},"body":{"controllers/PlaylistController.html":{}}}],["this.setcipherconfigurations",{"_index":431,"title":{},"body":{"classes/CryptographyService.html":{}}}],["this.setdecipherconfigurations",{"_index":437,"title":{},"body":{"classes/CryptographyService.html":{}}}],["this.statuscode",{"_index":816,"title":{},"body":{"classes/StandardError.html":{}}}],["this.token",{"_index":969,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.updatedat",{"_index":966,"title":{},"body":{"classes/UserDTO.html":{}}}],["this.uploadfile(files",{"_index":796,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.uploadfile(newfile",{"_index":795,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.uploadservice",{"_index":532,"title":{},"body":{"injectables/FileUpload.html":{}}}],["this.uploadservice.delete(keys",{"_index":537,"title":{},"body":{"injectables/FileUpload.html":{}}}],["this.uploadservice.upload",{"_index":533,"title":{},"body":{"injectables/FileUpload.html":{}}}],["this.userrepository.delete(id",{"_index":1011,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find",{"_index":996,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":458,"title":{},"body":{"classes/EmailUtils.html":{},"injectables/UserService.html":{}}}],["this.userrepository.findone(id",{"_index":1010,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save",{"_index":1009,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(user",{"_index":1004,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(user",{"_index":931,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.destroy(id",{"_index":936,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":899,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbykey('address",{"_index":922,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbykey('city",{"_index":925,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbykey('country",{"_index":928,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbykey('dateofbirth",{"_index":916,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbykey('email",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["this.userservice.findbykey('firstname",{"_index":908,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbykey('id",{"_index":900,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbykey('lastname",{"_index":911,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbykey('phonenumber",{"_index":919,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbykey('username",{"_index":905,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":935,"title":{},"body":{"controllers/UserController.html":{}}}],["this.validateuser",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":327,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/FileUpload.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["title",{"_index":14,"title":{},"body":{"classes/Album.html":{},"classes/AlbumDTO.html":{},"interfaces/IAlbum.html":{},"interfaces/IMusic.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{}}}],["token",{"_index":328,"title":{},"body":{"injectables/AuthMiddleware.html":{},"interfaces/IUser.html":{},"classes/User.html":{},"classes/UserDTO.html":{}}}],["touch",{"_index":1133,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":1055,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":88,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["true",{"_index":24,"title":{},"body":{"classes/Album.html":{},"classes/EmailUtils.html":{},"injectables/JwtStrategy.html":{},"classes/Music.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":789,"title":{},"body":{"injectables/S3Service.html":{}}}],["ts",{"_index":333,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["twitter",{"_index":1139,"title":{},"body":{"index.html":{}}}],["type",{"_index":16,"title":{},"body":{"classes/Album.html":{},"controllers/AlbumController.html":{},"classes/AlbumDTO.html":{},"injectables/AlbumService.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CryptographyService.html":{},"classes/EmailUtils.html":{},"interfaces/ErrorProps.html":{},"classes/File.html":{},"classes/FileDTO.html":{},"injectables/FileService.html":{},"injectables/FileUpload.html":{},"interfaces/IAlbum.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IMusic.html":{},"interfaces/IPlaylist.html":{},"interfaces/IUploadedFile.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Music.html":{},"controllers/MusicController.html":{},"classes/MusicDTO.html":{},"injectables/MusicService.html":{},"classes/Playlist.html":{},"controllers/PlaylistController.html":{},"classes/PlaylistDTO.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"classes/StandardError.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":35,"title":{},"body":{"classes/Album.html":{},"injectables/AlbumService.html":{},"classes/EmailUtils.html":{},"classes/File.html":{},"injectables/FileService.html":{},"classes/Music.html":{},"injectables/MusicService.html":{},"classes/Playlist.html":{},"injectables/PlaylistService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typescript",{"_index":1096,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":313,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":797,"title":{},"body":{"injectables/S3Service.html":{}}}],["unit",{"_index":1110,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["update",{"_index":52,"title":{},"body":{"controllers/AlbumController.html":{},"injectables/AlbumService.html":{},"controllers/MusicController.html":{},"injectables/MusicService.html":{},"controllers/PlaylistController.html":{},"injectables/PlaylistService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(file",{"_index":72,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{}}}],["update(files",{"_index":892,"title":{},"body":{"controllers/UserController.html":{}}}],["update(id",{"_index":190,"title":{},"body":{"injectables/AlbumService.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/UserService.html":{}}}],["updatealbum",{"_index":120,"title":{},"body":{"controllers/AlbumController.html":{}}}],["updatealbumdto",{"_index":73,"title":{},"body":{"controllers/AlbumController.html":{}}}],["updatedat",{"_index":569,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"classes/UserDTO.html":{}}}],["updatemusic",{"_index":642,"title":{},"body":{"controllers/MusicController.html":{}}}],["updateplaylist",{"_index":724,"title":{},"body":{"controllers/PlaylistController.html":{}}}],["updateuser",{"_index":932,"title":{},"body":{"controllers/UserController.html":{}}}],["upload",{"_index":522,"title":{},"body":{"injectables/FileUpload.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IUploadedFile.html":{},"injectables/S3Service.html":{}}}],["upload(files",{"_index":527,"title":{},"body":{"injectables/FileUpload.html":{},"injectables/S3Service.html":{}}}],["uploaded",{"_index":536,"title":{},"body":{"injectables/FileUpload.html":{}}}],["uploadedfile",{"_index":83,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{}}}],["uploadedfiles",{"_index":82,"title":{},"body":{"controllers/AlbumController.html":{},"injectables/FileUpload.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["uploadfile",{"_index":769,"title":{},"body":{"injectables/S3Service.html":{}}}],["uploadfile(file",{"_index":773,"title":{},"body":{"injectables/S3Service.html":{}}}],["uploadservice",{"_index":521,"title":{},"body":{"injectables/FileUpload.html":{}}}],["url",{"_index":471,"title":{},"body":{"classes/File.html":{},"classes/FileDTO.html":{},"interfaces/IFile.html":{},"interfaces/IFileUploader.html":{},"interfaces/IUploadedFile.html":{}}}],["use",{"_index":304,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["use(req",{"_index":306,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["usefactory",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":80,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/AuthController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":105,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@delete(':id",{"_index":65,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@get",{"_index":67,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@get('/address/:address",{"_index":864,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@get('/birthdate/:birthdate",{"_index":867,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@get('/city/:city",{"_index":871,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@get('/country/:country",{"_index":874,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@get('/email/:email",{"_index":877,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@get('/firstname/:firstname",{"_index":880,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@get('/lastname/:lastname",{"_index":884,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@get('/name/:username",{"_index":890,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@get('/phonenumber/:phonenumber",{"_index":887,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@get(':id",{"_index":70,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@post()@useinterceptors(undefined",{"_index":709,"title":{},"body":{"controllers/PlaylistController.html":{}}}],["useguards(jwtauthguard)@put(':id')@useinterceptors(undefined",{"_index":74,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["useguards(localauthguard",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('/login",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":81,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{},"controllers/UserController.html":{}}}],["useinterceptors(filesinterceptor('file",{"_index":113,"title":{},"body":{"controllers/AlbumController.html":{},"controllers/MusicController.html":{},"controllers/PlaylistController.html":{}}}],["useinterceptors(filesinterceptor('files",{"_index":929,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":319,"title":{"classes/User.html":{}},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/EmailUtils.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.controller",{"_index":980,"title":{},"body":{"modules/UserModule.html":{}}}],["user.email",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.id",{"_index":459,"title":{},"body":{"classes/EmailUtils.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.provider",{"_index":982,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":895,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":346,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/user.service",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_repository",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useraux",{"_index":997,"title":{},"body":{"injectables/UserService.html":{}}}],["useraux.file",{"_index":998,"title":{},"body":{"injectables/UserService.html":{}}}],["useravatar",{"_index":1006,"title":{},"body":{"injectables/UserService.html":{}}}],["usercontroller",{"_index":846,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdto",{"_index":859,"title":{"classes/UserDTO.html":{}},"body":{"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userdto(createuserdto).encryptpassword",{"_index":930,"title":{},"body":{"controllers/UserController.html":{}}}],["userdto(user",{"_index":933,"title":{},"body":{"controllers/UserController.html":{}}}],["userid",{"_index":456,"title":{},"body":{"classes/EmailUtils.html":{}}}],["usermodule",{"_index":265,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":320,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthCredentials.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"miscellaneous/variables.html":{}}}],["usernamefield",{"_index":603,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userproviders",{"_index":981,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":453,"title":{},"body":{"classes/EmailUtils.html":{},"injectables/UserService.html":{}}}],["users",{"_index":995,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":361,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["uservalidated",{"_index":331,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["uservalidated.email",{"_index":338,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["uservalidated.id",{"_index":336,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["uservalidated.username",{"_index":337,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["util",{"_index":415,"title":{},"body":{"classes/CryptographyService.html":{}}}],["uuid",{"_index":143,"title":{},"body":{"classes/AlbumDTO.html":{},"classes/FileDTO.html":{},"classes/MusicDTO.html":{},"classes/PlaylistDTO.html":{},"classes/UserDTO.html":{}}}],["uuidv4",{"_index":144,"title":{},"body":{"classes/AlbumDTO.html":{},"classes/FileDTO.html":{},"classes/MusicDTO.html":{},"classes/PlaylistDTO.html":{},"classes/UserDTO.html":{},"dependencies.html":{}}}],["validate",{"_index":576,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":598,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":578,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationerror",{"_index":466,"title":{},"body":{"interfaces/ErrorProps.html":{}}}],["validator",{"_index":964,"title":{},"body":{"classes/UserDTO.html":{},"dependencies.html":{}}}],["value",{"_index":187,"title":{},"body":{"injectables/AlbumService.html":{},"injectables/FileService.html":{},"injectables/MusicService.html":{},"injectables/PlaylistService.html":{},"injectables/S3Service.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1017,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1153,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":232,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{}}}],["watch",{"_index":1105,"title":{},"body":{"index.html":{}}}],["website",{"_index":1137,"title":{},"body":{"index.html":{}}}],["year",{"_index":15,"title":{},"body":{"classes/Album.html":{},"classes/AlbumDTO.html":{},"interfaces/IAlbum.html":{},"interfaces/IMusic.html":{},"classes/Music.html":{},"classes/MusicDTO.html":{}}}],["yes",{"_index":133,"title":{},"body":{"classes/AlbumDTO.html":{},"classes/FileDTO.html":{},"classes/MusicDTO.html":{},"classes/PlaylistDTO.html":{},"classes/UserDTO.html":{}}}],["you'd",{"_index":1126,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":157,"title":{},"body":{"modules/AlbumModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/MusicModule.html":{},"modules/PlaylistModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Album.html":{"url":"classes/Album.html","title":"class - Album","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Album\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/entities/album.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                artist\n                            \n                            \n                                duration\n                            \n                            \n                                genre\n                            \n                            \n                                id\n                            \n                            \n                                numberOfSongs\n                            \n                            \n                                title\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        artist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/album.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/album.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/album.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/album.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfSongs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/album.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/album.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/album.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryColumn } from 'typeorm';\n\n@Entity()\nexport class Album {\n  @PrimaryColumn()\n  id: string;\n\n  @Column()\n  title: string;\n\n  @Column()\n  artist: string;\n\n  @Column()\n  year: number;\n\n  @Column()\n  genre: string;\n\n  @Column({\n    nullable: true,\n  })\n  numberOfSongs: number;\n\n  @Column({\n    nullable: true,\n  })\n  duration: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AlbumController.html":{"url":"controllers/AlbumController.html","title":"controller - AlbumController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AlbumController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/modules/album/album.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                public/albums\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(file: FileDTO[], createAlbumDTO: AlbumDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/album/album.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            FileDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createAlbumDTO\n                                    \n                                                AlbumDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/album/album.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/album/album.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/album/album.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(file: FileDTO[], id: string, updateAlbumDTO: AlbumDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Put(':id')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/album/album.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            FileDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAlbumDTO\n                                    \n                                                AlbumDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n  UseGuards,\n  UseInterceptors,\n  UploadedFiles,\n  UploadedFile,\n} from '@nestjs/common';\n/*import {\n      GrpcMethod,\n      ClientGrpc,\n      Client,\n      Transport,\n    } from '@nestjs/microservices';*/\nimport { AlbumDTO } from './dto/album.dto';\nimport { IAlbum } from '../../../main/interfaces/album.interface';\nimport { AlbumService } from './album.service';\nimport { JwtAuthGuard } from '../../../infra/jwt/jwt-auth.guard';\nimport { FilesInterceptor } from '@nestjs/platform-express';\nimport { FileDTO } from '../file/dto/file.dto';\n\n@Controller('public/albums')\nexport class AlbumController {\n  constructor(private readonly albumService: AlbumService) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(): Promise {\n    return await this.albumService.findAll();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get(':id')\n  //@GrpcMethod('UserService')\n  async findById(@Param('id') id: string): Promise {\n    return await this.albumService.findByKey('id', id);\n  }\n\n  @Post()\n  @UseInterceptors(FilesInterceptor('file'))\n  async create(\n    @UploadedFiles() file: FileDTO[],\n    @Body() createAlbumDTO: AlbumDTO,\n  ): Promise {\n    const album: AlbumDTO = await new AlbumDTO(createAlbumDTO);\n    return this.albumService.create(album, file);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Put(':id')\n  @UseInterceptors(FilesInterceptor('file'))\n  async update(\n    @UploadedFile() file: FileDTO[],\n    @Param('id') id: string,\n    @Body() updateAlbumDTO: AlbumDTO,\n  ): Promise {\n    const updatealbum = await new AlbumDTO(updateAlbumDTO, id);\n    return await this.albumService.update(id, updatealbum, file);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  async delete(@Param('id') id: string): Promise {\n    await this.albumService.destroy(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlbumDTO.html":{"url":"classes/AlbumDTO.html","title":"class - AlbumDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlbumDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/modules/album/dto/album.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                artist\n                            \n                            \n                                    Public\n                                    Optional\n                                cover\n                            \n                            \n                                    Public\n                                duration\n                            \n                            \n                                    Public\n                                genre\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                numberOfSongs\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: AlbumDTO, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/domain/modules/album/dto/album.dto.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        AlbumDTO\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        artist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/album/dto/album.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        cover\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IFile\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/album/dto/album.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/album/dto/album.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/album/dto/album.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/album/dto/album.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        numberOfSongs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/album/dto/album.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/album/dto/album.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/album/dto/album.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IFile } from '../../../../main/interfaces/file.interface';\nimport { uuid } from 'uuidv4';\n\nexport class AlbumDTO {\n  public id: string;\n  public title: string;\n  public artist: string;\n  public year: number;\n  public genre: string;\n  public numberOfSongs: number;\n  public duration: string;\n  public cover?: IFile;\n\n  constructor(props: AlbumDTO, id?: string) {\n    Object.assign(this, props);\n\n    if (!id) this.id = uuid();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AlbumModule.html":{"url":"modules/AlbumModule.html","title":"module - AlbumModule","body":"\n                   \n\n\n\n\n    Modules\n    AlbumModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AlbumModule\n\n\n\ncluster_AlbumModule_providers\n\n\n\ncluster_AlbumModule_imports\n\n\n\ncluster_AlbumModule_exports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAlbumModule\n\nAlbumModule\n\nAlbumModule -->\n\nDatabaseModule->AlbumModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nAlbumModule -->\n\nFileModule->AlbumModule\n\n\n\n\n\nAlbumService \n\nAlbumService \n\nAlbumService  -->\n\nAlbumModule->AlbumService \n\n\n\n\n\nAlbumService\n\nAlbumService\n\nAlbumModule -->\n\nAlbumService->AlbumModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/domain/modules/album/album.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AlbumService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AlbumController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            FileModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AlbumService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AlbumController } from './album.controller';\nimport { AlbumService } from './album.service';\nimport { albumProviders } from './album.provider';\nimport { DatabaseModule } from '../../../data/connection/database.module';\nimport { FileModule } from '../file/file.module';\n\n@Module({\n  imports: [DatabaseModule, FileModule],\n  controllers: [AlbumController],\n  providers: [...albumProviders, AlbumService],\n  exports: [...albumProviders, AlbumService],\n})\nexport class AlbumModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlbumService.html":{"url":"injectables/AlbumService.html","title":"injectable - AlbumService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlbumService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/modules/album/album.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findByKey\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(albumRepository: Repository, fileRepository: FileService)\n                    \n                \n                        \n                            \n                                Defined in src/domain/modules/album/album.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        albumRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(album: AlbumDTO, files: FileDTO[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/album/album.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    album\n                                    \n                                                AlbumDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            FileDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/album/album.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/album/album.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByKey(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/album/album.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, album: AlbumDTO, files: FileDTO[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/album/album.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    album\n                                    \n                                                AlbumDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            FileDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Album } from '../../../data/entities/album.entity';\nimport { IAlbum } from '../../../main/interfaces/album.interface';\nimport FileUpload from '../../../main/utils/file.utils';\nimport { FileDTO } from '../file/dto/file.dto';\nimport { FileService } from '../file/file.service';\nimport { IFile } from '../../../main/interfaces/file.interface';\nimport { AlbumDTO } from './dto/album.dto';\n\n@Injectable()\nexport class AlbumService {\n  constructor(\n    @Inject('ALBUM_REPOSITORY')\n    private albumRepository: Repository,\n    private fileRepository: FileService,\n  ) {}\n\n  public async findAll(): Promise {\n    const albums = await this.albumRepository.find();\n\n    for (const album of albums) {\n      let albumAux = new AlbumDTO({ ...album });\n      albumAux.cover = await this.fileRepository.findByKey('ownerId', album.id);\n\n      Object.assign(album, albumAux);\n    }\n\n    return albums;\n  }\n\n  public async findByKey(key: string, value: string): Promise {\n    const album = new AlbumDTO(\n      await this.albumRepository.findOne({\n        where: { [key]: value },\n      }),\n    );\n\n    let albumAux: IAlbum;\n\n    if (album)\n      albumAux.cover = await this.fileRepository.findByKey('ownerId', album.id);\n\n    Object.assign(album, albumAux);\n\n    return album;\n  }\n\n  public async create(album: AlbumDTO, files: FileDTO[]): Promise {\n    const filesPaths = await FileUpload.upload(files, album.id, 'album');\n\n    await this.fileRepository.create(filesPaths);\n\n    return await this.albumRepository.save(album);\n  }\n\n  public async update(\n    id: string,\n    album: AlbumDTO,\n    files: FileDTO[],\n  ): Promise {\n    const albumCover: IFile = await this.fileRepository.findByKey(\n      'ownerId',\n      id,\n    );\n\n    if (files.length) {\n      if (albumCover) {\n        await FileUpload.delete([albumCover.key]);\n        await this.fileRepository.destroy([albumCover]);\n      }\n\n      const filesPaths = await FileUpload.upload(files, id, 'album');\n      await this.fileRepository.create(filesPaths);\n    }\n\n    await this.albumRepository.save({ ...album, id });\n\n    return await this.albumRepository.findOne(id);\n  }\n\n  public async destroy(id: string): Promise {\n    const albumCover: IFile = await this.fileRepository.findByKey(\n      'ownerId',\n      id,\n    );\n\n    await FileUpload.delete([albumCover.key]);\n\n    await this.fileRepository.destroy([albumCover]);\n\n    await this.albumRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/main/filters/exception.filter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/main/filters/exception.filter.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/main/filters/exception.filter.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/main/filters/exception.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Catch, ArgumentsHost, HttpStatus, Logger } from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\n\n@Catch()\nexport class AllExceptionsFilter extends BaseExceptionFilter {\n  private readonly logger: Logger;\n\n  constructor() {\n    super();\n\n    this.logger = new Logger('AllExceptionsFilter');\n  }\n\n  catch(exception: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    this.logger.error(exception);\n\n    let status = exception.status ? exception.status : exception.statusCode;\n\n    const message =\n      exception instanceof Error ? exception.message : exception.message.error;\n\n    response.status(status).json({\n      status,\n      success: false,\n      error: message,\n      message:\n        status === HttpStatus.INTERNAL_SERVER_ERROR\n          ? 'Sorry we are experiencing technical problems.'\n          : '',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAlbumModule\n\nAlbumModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAlbumModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nMusicModule\n\nMusicModule\n\nAppModule -->\n\nMusicModule->AppModule\n\n\n\n\n\nPlaylistModule\n\nPlaylistModule\n\nAppModule -->\n\nPlaylistModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AlbumModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            FileModule\n                        \n                        \n                            MusicModule\n                        \n                        \n                            PlaylistModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { AuthModule } from './domain/modules/auth/auth.module';\nimport { UserModule } from './domain/modules/user/user.module';\nimport { DatabaseModule } from './data/connection/database.module';\nimport { FileModule } from './domain/modules/file/file.module';\nimport { AuthMiddleware } from './main/middlewares/auth.middleware';\nimport { MusicModule } from './domain/modules/music/music.module';\nimport { AlbumModule } from './domain/modules/album/album.module';\nimport { PlaylistModule } from './domain/modules/playlist/playlist.module';\n\n@Module({\n  imports: [\n    DatabaseModule,\n    FileModule,\n    UserModule,\n    AuthModule,\n    AlbumModule,\n    MusicModule,\n    PlaylistModule,\n  ],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(AuthMiddleware).forRoutes('private/users');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                public/auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(credentials)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/auth/auth.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Request, Post, UseGuards, Body } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalAuthGuard } from './local-auth.guard';\n\n@Controller('public/auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @UseGuards(LocalAuthGuard)\n  @Post('/login')\n  async login(@Body() credentials) {\n    return this.authService.login(credentials);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/main/middlewares/auth.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                jwtService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/main/middlewares/auth.middleware.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/main/middlewares/auth.middleware.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jwtService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JwtService\n\n                    \n                \n                    \n                        \n                                Defined in src/main/middlewares/auth.middleware.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestMiddleware,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request, Response, NextFunction } from 'express';\nimport { IAuth } from '../interfaces/auth.interface';\n\n/*interface IUserRequest {\n  user: {\n    id: string;\n    username: string;\n    email: string;\n  };\n}*/\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  private jwtService: JwtService;\n\n  constructor() {\n    this.jwtService = new JwtService({\n      secret: process.env.JWT_SECRET,\n    });\n  }\n\n  use(req: Request, res: Response, next: NextFunction) {\n    if (req.method === 'POST') return next();\n\n    if (!req.headers.authorization) throw new UnauthorizedException();\n\n    const token = req.headers.authorization.split(' ')[1];\n\n    const userValidated: IAuth = this.jwtService.verify(token);\n\n    // @ts-ignore\n    req.user = {\n      id: userValidated.id,\n      username: userValidated.username,\n      email: userValidated.email,\n    };\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/domain/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UserModule } from '../user/user.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { LocalStrategy } from './local.strategy';\nimport { AuthController } from './auth.controller';\nimport { JwtStrategy } from '../../../infra/jwt/jwt.strategy';\n\nrequire('dotenv').config();\n\n@Module({\n  imports: [\n    UserModule,\n    PassportModule,\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '86400s' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/domain/modules/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: IAuthCredentials)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/auth/auth.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IAuthCredentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/auth/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserService } from '../user/user.service';\nimport { JwtService } from '@nestjs/jwt';\nimport CryptographyService from '../../../infra/criptography.service';\nimport {\n  IAuth,\n  IAuthCredentials,\n} from '../../../main/interfaces/auth.interface';\nimport { IUser } from '../../../main/interfaces/user.interface';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private userService: UserService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(\n    email: string,\n    password: string,\n  ): Promise> {\n    const user = await this.userService.findByKey('email', email, false);\n\n    const decriptedPassword: string = await CryptographyService.decrypt(\n      password,\n    );\n\n    if (user && user.password === decriptedPassword) {\n      const { password, ...result } = user;\n\n      return result;\n    }\n\n    return null;\n  }\n\n  async login(user: IAuthCredentials) {\n    const userValidated: Omit = await this.validateUser(\n      user.email,\n      user.password,\n    );\n\n    const payload: IAuth = {\n      id: userValidated.id,\n      username: userValidated.username,\n      email: userValidated.email,\n    };\n\n    return {\n      accessToken: this.jwtService.sign(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CryptographyService.html":{"url":"classes/CryptographyService.html","title":"class - CryptographyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CryptographyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/criptography.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                alg\n                            \n                            \n                                    Private\n                                cipher\n                            \n                            \n                                    Private\n                                decipher\n                            \n                            \n                                    Private\n                                    Readonly\n                                iv\n                            \n                            \n                                    Private\n                                key\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                decrypt\n                            \n                            \n                                    Async\n                                encrypt\n                            \n                            \n                                    Async\n                                setCipherConfigurations\n                            \n                            \n                                    Async\n                                setDecipherConfigurations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/infra/criptography.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        alg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/criptography.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cipher\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Cipher\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/criptography.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        decipher\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Decipher\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/criptography.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        iv\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Buffer\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/criptography.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CipherKey\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/criptography.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        decrypt\n                        \n                    \n                \n            \n            \n                \n                    \n                    decrypt(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/criptography.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        encrypt\n                        \n                    \n                \n            \n            \n                \n                    \n                    encrypt(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/criptography.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setCipherConfigurations\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCipherConfigurations()\n                \n            \n\n\n            \n                \n                    Defined in src/infra/criptography.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setDecipherConfigurations\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDecipherConfigurations()\n                \n            \n\n\n            \n                \n                    Defined in src/infra/criptography.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Cipher,\n  CipherKey,\n  createCipheriv,\n  createDecipheriv,\n  Decipher,\n  scrypt,\n} from 'crypto';\nimport { promisify } from 'util';\n\nclass CryptographyService {\n  private readonly alg: string;\n  private readonly iv: Buffer;\n  private key: CipherKey;\n  private cipher: Cipher;\n  private decipher: Decipher;\n\n  constructor() {\n    this.iv = Buffer.from('😳😳😳😳');\n    this.alg = 'aes-256-ctr';\n  }\n\n  async setCipherConfigurations(): Promise {\n    this.key = (await promisify(scrypt)(\n      String(process.env.SECRET),\n      'salt',\n      32,\n    )) as Buffer;\n    this.cipher = createCipheriv('aes-256-ctr', this.key, this.iv);\n  }\n\n  async setDecipherConfigurations(): Promise {\n    this.key = (await promisify(scrypt)(\n      String(process.env.SECRET),\n      'salt',\n      32,\n    )) as Buffer;\n    this.decipher = createDecipheriv('aes-256-ctr', this.key, this.iv);\n  }\n\n  async encrypt(text: string): Promise {\n    await this.setCipherConfigurations();\n    const encryptedText = Buffer.concat([\n      this.cipher.update(text),\n      this.cipher.final(),\n    ]);\n\n    return encryptedText.toString('hex');\n  }\n\n  async decrypt(text: string): Promise {\n    await this.setDecipherConfigurations();\n\n    const encryptedTextBuffer = Buffer.from(text);\n\n    const decryptedText = Buffer.concat([\n      this.decipher.update(encryptedTextBuffer),\n      this.decipher.final(),\n    ]);\n\n    return decryptedText.toString('hex');\n  }\n}\n\nexport default new CryptographyService();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/data/connection/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n  providers: [...databaseProviders],\n  exports: [...databaseProviders],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailUtils.html":{"url":"classes/EmailUtils.html","title":"class - EmailUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/main/utils/email.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                checkEmailAlreadyExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/main/utils/email.utils.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        checkEmailAlreadyExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEmailAlreadyExists(userId: string, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/main/utils/email.utils.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../../data/entities/user.entity';\nimport { Repository } from 'typeorm';\n\nexport class EmailUtils {\n  constructor(private userRepository: Repository) {}\n\n  public async checkEmailAlreadyExists(\n    userId: string,\n    email: string,\n  ): Promise {\n    const user = await this.userRepository.findOne({\n      where: { email },\n    });\n\n    if (user && user.id !== userId) return false;\n\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorProps.html":{"url":"interfaces/ErrorProps.html","title":"interface - ErrorProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ErrorProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/main/interfaces/error.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                                \n                                        \n                                            validationError\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validationError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validationError:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface ErrorProps {\n  statusCode: number;\n  message: string;\n  validationError: any;\n  code: string;\n  meta: { target: string[] };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/entities/file.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                key\n                            \n                            \n                                ownerId\n                            \n                            \n                                ownerType\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/file.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/file.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/file.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ownerType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/file.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/file.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryColumn } from 'typeorm';\n\n@Entity()\nexport class File {\n  @PrimaryColumn()\n  id: string;\n\n  @Column()\n  ownerId: string;\n\n  @Column()\n  ownerType: string;\n\n  @Column()\n  key: string;\n\n  @Column()\n  url: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileDTO.html":{"url":"classes/FileDTO.html","title":"class - FileDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/modules/file/dto/file.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                buffer\n                            \n                            \n                                encoding\n                            \n                            \n                                fieldname\n                            \n                            \n                                id\n                            \n                            \n                                key\n                            \n                            \n                                mimetype\n                            \n                            \n                                originalname\n                            \n                            \n                                ownerId\n                            \n                            \n                                ownerType\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                generateFileKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: Omit, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/domain/modules/file/dto/file.dto.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    Omit\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        buffer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ArrayBuffer\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/file/dto/file.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encoding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/file/dto/file.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fieldname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/file/dto/file.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/file/dto/file.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/file/dto/file.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mimetype\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/file/dto/file.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        originalname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/file/dto/file.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/file/dto/file.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ownerType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/file/dto/file.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/file/dto/file.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        generateFileKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateFileKey()\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/file/dto/file.dto.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FileDTO\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { uuid } from 'uuidv4';\n\nexport class FileDTO {\n  id: string;\n  ownerId: string;\n  ownerType: string;\n  fieldname: string;\n  originalname: string;\n  encoding: string;\n  mimetype: string;\n  buffer: ArrayBuffer;\n  key: string;\n  url: string;\n\n  constructor(props: Omit, id?: string) {\n    Object.assign(this, props);\n\n    if (!id) {\n      this.id = uuid();\n    }\n  }\n\n  public generateFileKey(): FileDTO {\n    const name = this.originalname.split('.')[0];\n    this.key = `${this.id}.${name}`;\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileModule.html":{"url":"modules/FileModule.html","title":"module - FileModule","body":"\n                   \n\n\n\n\n    Modules\n    FileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FileModule\n\n\n\ncluster_FileModule_exports\n\n\n\ncluster_FileModule_imports\n\n\n\ncluster_FileModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nFileModule\n\nFileModule\n\nFileModule -->\n\nDatabaseModule->FileModule\n\n\n\n\n\nFileService \n\nFileService \n\nFileService  -->\n\nFileModule->FileService \n\n\n\n\n\nFileService\n\nFileService\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/domain/modules/file/file.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { FileService } from './file.service';\nimport { fileProviders } from './file.provider';\nimport { DatabaseModule } from '../../../data/connection/database.module';\n\n@Module({\n  imports: [DatabaseModule],\n  providers: [...fileProviders, FileService],\n  exports: [FileService],\n})\nexport class FileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/modules/file/file.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                destroy\n                            \n                            \n                                    Async\n                                findByKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/domain/modules/file/file.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(files: FileDTO[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/file/file.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(files: IFile[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/file/file.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                                IFile[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByKey(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/file/file.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { FileDTO } from './dto/file.dto';\nimport { IFile } from '../../../main/interfaces/file.interface';\n\n@Injectable()\nexport class FileService {\n  constructor(\n    @Inject('FILE_REPOSITORY')\n    private fileRepository: Repository,\n  ) {}\n\n  async findByKey(key: string, value: string): Promise {\n    return await this.fileRepository.findOne({\n      where: { [key]: value },\n    });\n  }\n\n  async create(files: FileDTO[]): Promise {\n    for (const file of files) {\n      await this.fileRepository.save(file);\n    }\n  }\n\n  async destroy(files: IFile[]): Promise {\n    for (const file of files) {\n      await this.fileRepository.delete({\n        key: file.key,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileUpload.html":{"url":"injectables/FileUpload.html","title":"injectable - FileUpload","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileUpload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/main/utils/file.utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                uploadService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/main/utils/file.utils.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(keys: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/main/utils/file.utils.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        upload\n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(files: FileDTO[], ownerId: string, ownerType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/main/utils/file.utils.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ownerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ownerType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         S3Service\n\n                    \n                \n                    \n                        \n                                Defined in src/main/utils/file.utils.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FileDTO } from '../../domain/modules/file/dto/file.dto';\nimport { S3Service } from '../../infra/s3/s3.service';\n\n@Injectable()\nclass FileUpload {\n  private uploadService: S3Service;\n\n  constructor() {\n    this.uploadService = new S3Service();\n  }\n\n  async upload(\n    files: FileDTO[],\n    ownerId: string,\n    ownerType: string,\n  ): Promise {\n    const uploadedFiles = await this.uploadService.upload(\n      files,\n      ownerId,\n      ownerType,\n    );\n\n    if (!uploadedFiles) {\n      throw new Error('Not have file ou files for uploaded!');\n    }\n\n    return uploadedFiles as FileDTO[];\n  }\n\n  async delete(keys: string[]): Promise {\n    await this.uploadService.delete(keys);\n  }\n}\n\nexport default new FileUpload();\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAlbum.html":{"url":"interfaces/IAlbum.html","title":"interface - IAlbum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAlbum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/main/interfaces/album.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cover\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            genre\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            numberOfSongs\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cover:         IFile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IFile\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfSongs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfSongs:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFile } from './file.interface';\n\nexport interface IAlbum {\n  id: string;\n  title: string;\n  artist: string;\n  year: number;\n  genre: string;\n  numberOfSongs: number;\n  duration: string;\n  cover?: IFile;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuth.html":{"url":"interfaces/IAuth.html","title":"interface - IAuth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/main/interfaces/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAuth {\n  id: string;\n  username: string;\n  email: string;\n}\n\nexport interface IAuthCredentials {\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthCredentials.html":{"url":"interfaces/IAuthCredentials.html","title":"interface - IAuthCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/main/interfaces/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAuth {\n  id: string;\n  username: string;\n  email: string;\n}\n\nexport interface IAuthCredentials {\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFile.html":{"url":"interfaces/IFile.html","title":"interface - IFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/main/interfaces/file.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                                \n                                        \n                                            ownerType\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IFile {\n  id: string;\n  ownerId: string;\n  ownerType: string;\n  key: string;\n  url: string;\n}\n\nexport interface IUploadedFile {\n  path: string;\n}\n\nexport interface IFileUploader {\n  upload: (\n    files: IFile[],\n  ) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFileUploader.html":{"url":"interfaces/IFileUploader.html","title":"interface - IFileUploader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFileUploader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/main/interfaces/file.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            upload\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        upload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        upload:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IFile {\n  id: string;\n  ownerId: string;\n  ownerType: string;\n  key: string;\n  url: string;\n}\n\nexport interface IUploadedFile {\n  path: string;\n}\n\nexport interface IFileUploader {\n  upload: (\n    files: IFile[],\n  ) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMusic.html":{"url":"interfaces/IMusic.html","title":"interface - IMusic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMusic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/main/interfaces/music.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            albumCover\n                                        \n                                \n                                \n                                        \n                                            albumId\n                                        \n                                \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            cover\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            favourite\n                                        \n                                \n                                \n                                        \n                                            favouriteCount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            genre\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastPlayed\n                                        \n                                \n                                \n                                        \n                                            playCount\n                                        \n                                \n                                \n                                        \n                                            playlistId\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        albumCover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        albumCover:         IFile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IFile\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        albumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        albumId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cover:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        favourite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        favourite:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        favouriteCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        favouriteCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         IFile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IFile\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastPlayed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastPlayed:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playlistId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playlistId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFile } from './file.interface';\n\nexport interface IMusic {\n  id: string;\n  title: string;\n  artist: string;\n  album: string;\n  genre: string;\n  year: number;\n  rating: number;\n  duration: string;\n  cover: string;\n  playCount: number;\n  favourite: boolean;\n  favouriteCount: number;\n  lastPlayed: Date;\n  playlistId: string;\n  albumId: string;\n  file?: IFile;\n  albumCover?: IFile;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPlaylist.html":{"url":"interfaces/IPlaylist.html","title":"interface - IPlaylist","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPlaylist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/main/interfaces/playlist.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cover\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cover:         IFile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IFile\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFile } from './file.interface';\n\nexport interface IPlaylist {\n  id: string;\n  name: string;\n  description: string;\n  cover?: IFile;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUploadedFile.html":{"url":"interfaces/IUploadedFile.html","title":"interface - IUploadedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUploadedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/main/interfaces/file.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IFile {\n  id: string;\n  ownerId: string;\n  ownerType: string;\n  key: string;\n  url: string;\n}\n\nexport interface IUploadedFile {\n  path: string;\n}\n\nexport interface IFileUploader {\n  upload: (\n    files: IFile[],\n  ) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/main/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            city\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            country\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dateOfBirth\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateOfBirth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateOfBirth:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { File } from '../../data/entities/file.entity';\n\nexport interface IUser {\n  id: string;\n  username: string;\n  password: string;\n  email: string;\n  firstName?: string;\n  lastName?: string;\n  dateOfBirth?: string;\n  phoneNumber?: string;\n  address?: string;\n  city?: string;\n  country?: string;\n  token?: string;\n  createdAt: Date;\n  updatedAt: Date;\n  file?: File;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/jwt/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/jwt/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/infra/jwt/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: IAuth)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/jwt/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                IAuth\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { IAuth } from '../../main/interfaces/auth.interface';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: true,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: IAuth) {\n    return {\n      id: payload.id,\n      username: payload.username,\n      email: payload.email,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/modules/auth/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/modules/auth/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/domain/modules/auth/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/auth/local.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    //the passport-local strategy by default expects properties called\n    //username and password in the request body: 'Missing credentials error'\n    super({ usernameField: 'email' });\n  }\n\n  async validate(email: string, password: string): Promise {\n    const user = await this.authService.validateUser(email, password);\n\n    if (!user) throw new UnauthorizedException();\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Music.html":{"url":"classes/Music.html","title":"class - Music","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Music\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/entities/music.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                album\n                            \n                            \n                                    Public\n                                albumId\n                            \n                            \n                                    Public\n                                artist\n                            \n                            \n                                    Public\n                                cover\n                            \n                            \n                                    Public\n                                duration\n                            \n                            \n                                    Public\n                                favourite\n                            \n                            \n                                    Public\n                                favouriteCount\n                            \n                            \n                                    Public\n                                genre\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                lastPlayed\n                            \n                            \n                                    Public\n                                playCount\n                            \n                            \n                                    Public\n                                playlistId\n                            \n                            \n                                    Public\n                                rating\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        album\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/music.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        albumId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/entities/music.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        artist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/music.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cover\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/music.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/music.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        favourite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/music.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        favouriteCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/music.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/music.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/music.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lastPlayed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/music.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        playCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/music.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        playlistId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/music.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/music.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/music.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/music.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryColumn, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Music {\n  @PrimaryColumn()\n  public id: string;\n\n  @Column()\n  public title: string;\n\n  @Column()\n  public artist: string;\n\n  @Column()\n  public album: string;\n\n  @Column()\n  public genre: string;\n\n  @Column()\n  public year: number;\n\n  @Column({\n    nullable: true,\n  })\n  public rating: number;\n\n  @Column()\n  public duration: string;\n\n  @Column({\n    nullable: true,\n  })\n  public cover: string;\n\n  @Column({\n    nullable: true,\n  })\n  public playCount: number;\n\n  @Column({\n    nullable: true,\n  })\n  public favourite: boolean;\n\n  @Column({\n    nullable: true,\n  })\n  public favouriteCount: number;\n\n  @Column({\n    nullable: true,\n  })\n  public lastPlayed: Date;\n\n  @Column({\n    nullable: true,\n  })\n  public playlistId: string;\n\n  public albumId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MusicController.html":{"url":"controllers/MusicController.html","title":"controller - MusicController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MusicController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/modules/music/music.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                public/musics\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(file: FileDTO[], createMusicDTO: MusicDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/music/music.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            FileDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createMusicDTO\n                                    \n                                                MusicDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/music/music.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/music/music.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/music/music.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(file: FileDTO[], id: string, music: MusicDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Put(':id')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/music/music.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            FileDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    music\n                                    \n                                                MusicDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n  UseGuards,\n  UseInterceptors,\n  UploadedFiles,\n  UploadedFile,\n} from '@nestjs/common';\n/*import {\n    GrpcMethod,\n    ClientGrpc,\n    Client,\n    Transport,\n  } from '@nestjs/microservices';*/\nimport { MusicDTO } from './dto/music.dto';\nimport { IMusic } from '../../../main/interfaces/music.interface';\nimport { MusicService } from './music.service';\nimport { JwtAuthGuard } from '../../../infra/jwt/jwt-auth.guard';\nimport { FilesInterceptor } from '@nestjs/platform-express';\nimport { FileDTO } from '../file/dto/file.dto';\n\n@Controller('public/musics')\nexport class MusicController {\n  constructor(private readonly musicService: MusicService) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(): Promise {\n    return await this.musicService.findAll();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get(':id')\n  //@GrpcMethod('UserService')\n  async findById(@Param('id') id: string): Promise {\n    return await this.musicService.findByKey('id', id);\n  }\n\n  @Post()\n  @UseInterceptors(FilesInterceptor('file'))\n  async create(\n    @UploadedFiles() file: FileDTO[],\n    @Body() createMusicDTO: MusicDTO,\n  ): Promise {\n    const music: MusicDTO = await new MusicDTO(createMusicDTO);\n    return this.musicService.create(music, file);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Put(':id')\n  @UseInterceptors(FilesInterceptor('file'))\n  async update(\n    @UploadedFile() file: FileDTO[],\n    @Param('id') id: string,\n    @Body() music: MusicDTO,\n  ): Promise {\n    const updateMusic = await new MusicDTO(music, id);\n    return await this.musicService.update(id, updateMusic, file);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  async delete(@Param('id') id: string): Promise {\n    await this.musicService.destroy(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MusicDTO.html":{"url":"classes/MusicDTO.html","title":"class - MusicDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MusicDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/modules/music/dto/music.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                album\n                            \n                            \n                                    Public\n                                albumId\n                            \n                            \n                                    Public\n                                artist\n                            \n                            \n                                    Public\n                                cover\n                            \n                            \n                                    Public\n                                duration\n                            \n                            \n                                    Public\n                                favourite\n                            \n                            \n                                    Public\n                                favouriteCount\n                            \n                            \n                                    Public\n                                    Optional\n                                file\n                            \n                            \n                                    Public\n                                genre\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                lastPlayed\n                            \n                            \n                                    Public\n                                playCount\n                            \n                            \n                                    Public\n                                playlistId\n                            \n                            \n                                    Public\n                                rating\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: MusicDTO, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/domain/modules/music/dto/music.dto.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        MusicDTO\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        album\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/music/dto/music.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        albumId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/music/dto/music.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        artist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/music/dto/music.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cover\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/music/dto/music.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/music/dto/music.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        favourite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/music/dto/music.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        favouriteCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/music/dto/music.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IFile\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/music/dto/music.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/music/dto/music.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/music/dto/music.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lastPlayed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/music/dto/music.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        playCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/music/dto/music.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        playlistId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/music/dto/music.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/music/dto/music.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/music/dto/music.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/music/dto/music.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { uuid } from 'uuidv4';\nimport { IFile } from '../../../../main/interfaces/file.interface';\n\nexport class MusicDTO {\n  public id: string;\n  public title: string;\n  public artist: string;\n  public album: string;\n  public genre: string;\n  public year: number;\n  public rating: number;\n  public duration: string;\n  public cover: string;\n  public playCount: number;\n  public favourite: boolean;\n  public favouriteCount: number;\n  public lastPlayed: Date;\n  public playlistId: string;\n  public albumId: string;\n  public file?: IFile;\n\n  constructor(props: MusicDTO, id?: string) {\n    Object.assign(this, props);\n\n    if (!id) this.id = uuid();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MusicModule.html":{"url":"modules/MusicModule.html","title":"module - MusicModule","body":"\n                   \n\n\n\n\n    Modules\n    MusicModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MusicModule\n\n\n\ncluster_MusicModule_exports\n\n\n\ncluster_MusicModule_providers\n\n\n\ncluster_MusicModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nMusicModule\n\nMusicModule\n\nMusicModule -->\n\nDatabaseModule->MusicModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nMusicModule -->\n\nFileModule->MusicModule\n\n\n\n\n\nMusicService \n\nMusicService \n\nMusicService  -->\n\nMusicModule->MusicService \n\n\n\n\n\nMusicService\n\nMusicService\n\nMusicModule -->\n\nMusicService->MusicModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/domain/modules/music/music.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MusicService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MusicController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            FileModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MusicService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MusicController } from './music.controller';\nimport { MusicService } from './music.service';\nimport { musicProviders } from './music.provider';\nimport { DatabaseModule } from '../../../data/connection/database.module';\nimport { FileModule } from '../file/file.module';\n\n@Module({\n  imports: [DatabaseModule, FileModule],\n  controllers: [MusicController],\n  providers: [...musicProviders, MusicService],\n  exports: [...musicProviders, MusicService],\n})\nexport class MusicModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicService.html":{"url":"injectables/MusicService.html","title":"injectable - MusicService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MusicService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/modules/music/music.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findByKey\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(musicRepository: Repository, fileRepository: FileService)\n                    \n                \n                        \n                            \n                                Defined in src/domain/modules/music/music.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        musicRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(music: MusicDTO, files: FileDTO[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/music/music.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    music\n                                    \n                                                MusicDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            FileDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/music/music.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/music/music.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByKey(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/music/music.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, music: MusicDTO, files: FileDTO[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/music/music.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    music\n                                    \n                                                MusicDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            FileDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Music } from '../../../data/entities/music.entity';\nimport { MusicDTO } from './dto/music.dto';\nimport { IMusic } from '../../../main/interfaces/music.interface';\nimport FileUpload from '../../../main/utils/file.utils';\nimport { FileDTO } from '../file/dto/file.dto';\nimport { FileService } from '../file/file.service';\nimport { IFile } from '../../../main/interfaces/file.interface';\nimport StandardError from '../../../main/utils/error.utils';\n\n@Injectable()\nexport class MusicService {\n  constructor(\n    @Inject('MUSIC_REPOSITORY')\n    private musicRepository: Repository,\n    private fileRepository: FileService,\n  ) {}\n\n  public async findAll(): Promise {\n    const musics = await this.musicRepository.find();\n\n    for (const music of musics) {\n      let musicAux = new MusicDTO({ ...music });\n      musicAux.file = await this.fileRepository.findByKey('ownerId', music.id);\n\n      Object.assign(music, musicAux);\n    }\n\n    return musics;\n  }\n\n  public async findByKey(key: string, value: string): Promise {\n    const music = new MusicDTO(\n      await this.musicRepository.findOne({\n        where: { [key]: value },\n      }),\n    );\n\n    let musicAux: IMusic;\n\n    if (music)\n      musicAux.file = await this.fileRepository.findByKey('ownerId', music.id);\n\n    Object.assign(music, musicAux);\n\n    return music;\n  }\n\n  public async create(music: MusicDTO, files: FileDTO[]): Promise {\n    const filesPaths = await FileUpload.upload(files, music.id, 'music');\n\n    await this.fileRepository.create(filesPaths);\n\n    return await this.musicRepository.save(music);\n  }\n\n  public async update(\n    id: string,\n    music: MusicDTO,\n    files: FileDTO[],\n  ): Promise {\n    const musicFile: IFile = await this.fileRepository.findByKey('ownerId', id);\n\n    if (files.length) {\n      if (musicFile) {\n        await FileUpload.delete([musicFile.key]);\n        await this.fileRepository.destroy([musicFile]);\n      }\n\n      const filesPaths = await FileUpload.upload(files, id, 'music');\n      await this.fileRepository.create(filesPaths);\n    }\n\n    await this.musicRepository.save({ ...music, id });\n\n    return await this.musicRepository.findOne(id);\n  }\n\n  public async destroy(id: string): Promise {\n    const musicFile: IFile = await this.fileRepository.findByKey('ownerId', id);\n\n    await FileUpload.delete([musicFile.key]);\n\n    await this.fileRepository.destroy([musicFile]);\n\n    await this.musicRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Playlist.html":{"url":"classes/Playlist.html","title":"class - Playlist","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Playlist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/entities/playlist.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/playlist.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/playlist.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/playlist.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryColumn, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Playlist {\n  @PrimaryColumn()\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PlaylistController.html":{"url":"controllers/PlaylistController.html","title":"controller - PlaylistController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PlaylistController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/modules/playlist/playlist.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                public/playlists\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(file: FileDTO[], createPlaylistDTO: PlaylistDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post()@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/playlist/playlist.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            FileDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createPlaylistDTO\n                                    \n                                                PlaylistDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/playlist/playlist.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/playlist/playlist.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/playlist/playlist.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(file: FileDTO[], id: string, playlist: PlaylistDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Put(':id')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/playlist/playlist.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            FileDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    playlist\n                                    \n                                                PlaylistDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n  UseGuards,\n  UseInterceptors,\n  UploadedFiles,\n  UploadedFile,\n} from '@nestjs/common';\n/*import {\n      GrpcMethod,\n      ClientGrpc,\n      Client,\n      Transport,\n    } from '@nestjs/microservices';*/\nimport { PlaylistDTO } from './dto/playlist.dto';\nimport { IPlaylist } from '../../../main/interfaces/playlist.interface';\nimport { PlaylistService } from './playlist.service';\nimport { JwtAuthGuard } from '../../../infra/jwt/jwt-auth.guard';\nimport { FilesInterceptor } from '@nestjs/platform-express';\nimport { FileDTO } from '../file/dto/file.dto';\n\n@Controller('public/playlists')\nexport class PlaylistController {\n  constructor(private readonly playlistService: PlaylistService) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(): Promise {\n    return await this.playlistService.findAll();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get(':id')\n  //@GrpcMethod('UserService')\n  async findById(@Param('id') id: string): Promise {\n    return await this.playlistService.findByKey('id', id);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  @UseInterceptors(FilesInterceptor('file'))\n  async create(\n    @UploadedFiles() file: FileDTO[],\n    @Body() createPlaylistDTO: PlaylistDTO,\n  ): Promise {\n    const playlist: PlaylistDTO = await new PlaylistDTO(createPlaylistDTO);\n    return this.playlistService.create(playlist, file);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Put(':id')\n  @UseInterceptors(FilesInterceptor('file'))\n  async update(\n    @UploadedFile() file: FileDTO[],\n    @Param('id') id: string,\n    @Body() playlist: PlaylistDTO,\n  ): Promise {\n    const updatePlaylist = await new PlaylistDTO(playlist, id);\n    return await this.playlistService.update(id, updatePlaylist, file);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  async delete(@Param('id') id: string): Promise {\n    await this.playlistService.destroy(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlaylistDTO.html":{"url":"classes/PlaylistDTO.html","title":"class - PlaylistDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlaylistDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/modules/playlist/dto/playlist.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                cover\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: PlaylistDTO, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/domain/modules/playlist/dto/playlist.dto.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        PlaylistDTO\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        cover\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IFile\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/playlist/dto/playlist.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/playlist/dto/playlist.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/playlist/dto/playlist.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/playlist/dto/playlist.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IFile } from '../../../../main/interfaces/file.interface';\nimport { uuid } from 'uuidv4';\n\nexport class PlaylistDTO {\n  public id: string;\n  public name: string;\n  public description: string;\n  public cover?: IFile;\n\n  constructor(props: PlaylistDTO, id?: string) {\n    Object.assign(this, props);\n\n    if (!id) this.id = uuid();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlaylistModule.html":{"url":"modules/PlaylistModule.html","title":"module - PlaylistModule","body":"\n                   \n\n\n\n\n    Modules\n    PlaylistModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PlaylistModule\n\n\n\ncluster_PlaylistModule_exports\n\n\n\ncluster_PlaylistModule_providers\n\n\n\ncluster_PlaylistModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nPlaylistModule\n\nPlaylistModule\n\nPlaylistModule -->\n\nDatabaseModule->PlaylistModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nPlaylistModule -->\n\nFileModule->PlaylistModule\n\n\n\n\n\nPlaylistService \n\nPlaylistService \n\nPlaylistService  -->\n\nPlaylistModule->PlaylistService \n\n\n\n\n\nPlaylistService\n\nPlaylistService\n\nPlaylistModule -->\n\nPlaylistService->PlaylistModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/domain/modules/playlist/playlist.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PlaylistService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PlaylistController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            FileModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PlaylistService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PlaylistController } from './playlist.controller';\nimport { PlaylistService } from './playlist.service';\nimport { playlistProviders } from './playlist.provider';\nimport { DatabaseModule } from '../../../data/connection/database.module';\nimport { FileModule } from '../file/file.module';\n\n@Module({\n  imports: [DatabaseModule, FileModule],\n  controllers: [PlaylistController],\n  providers: [...playlistProviders, PlaylistService],\n  exports: [...playlistProviders, PlaylistService],\n})\nexport class PlaylistModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlaylistService.html":{"url":"injectables/PlaylistService.html","title":"injectable - PlaylistService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlaylistService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/modules/playlist/playlist.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findByKey\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(playlistRepository: Repository, fileRepository: FileService)\n                    \n                \n                        \n                            \n                                Defined in src/domain/modules/playlist/playlist.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        playlistRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(playlist: PlaylistDTO, files: FileDTO[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/playlist/playlist.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    playlist\n                                    \n                                                PlaylistDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            FileDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/playlist/playlist.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/playlist/playlist.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByKey(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/playlist/playlist.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, playlist: PlaylistDTO, files: FileDTO[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/playlist/playlist.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    playlist\n                                    \n                                                PlaylistDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            FileDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Playlist } from '../../../data/entities/playlist.entity';\nimport { PlaylistDTO } from './dto/playlist.dto';\nimport { IPlaylist } from '../../../main/interfaces/playlist.interface';\nimport FileUpload from '../../../main/utils/file.utils';\nimport { FileDTO } from '../file/dto/file.dto';\nimport { FileService } from '../file/file.service';\nimport { IFile } from '../../../main/interfaces/file.interface';\nimport StandardError from '../../../main/utils/error.utils';\n\n@Injectable()\nexport class PlaylistService {\n  constructor(\n    @Inject('PLAYLIST_REPOSITORY')\n    private playlistRepository: Repository,\n    private fileRepository: FileService,\n  ) {}\n\n  public async findAll(): Promise {\n    const playlists = await this.playlistRepository.find();\n\n    for (const playlist of playlists) {\n      let playlistAux = new PlaylistDTO({ ...playlist });\n      playlistAux.cover = await this.fileRepository.findByKey(\n        'ownerId',\n        playlist.id,\n      );\n\n      Object.assign(playlist, playlistAux);\n    }\n\n    return playlists;\n  }\n\n  public async findByKey(key: string, value: string): Promise {\n    const playlist = new PlaylistDTO(\n      await this.playlistRepository.findOne({\n        where: { [key]: value },\n      }),\n    );\n\n    let playlistAux: IPlaylist;\n\n    if (playlist)\n      playlistAux.cover = await this.fileRepository.findByKey(\n        'ownerId',\n        playlist.id,\n      );\n\n    Object.assign(playlist, playlistAux);\n\n    return playlist;\n  }\n\n  public async create(\n    playlist: PlaylistDTO,\n    files: FileDTO[],\n  ): Promise {\n    const filesPaths = await FileUpload.upload(files, playlist.id, 'playlist');\n\n    await this.fileRepository.create(filesPaths);\n\n    return await this.playlistRepository.save(playlist);\n  }\n\n  public async update(\n    id: string,\n    playlist: PlaylistDTO,\n    files: FileDTO[],\n  ): Promise {\n    const playlistFile: IFile = await this.fileRepository.findByKey(\n      'ownerId',\n      id,\n    );\n\n    if (files.length) {\n      if (playlistFile) {\n        await FileUpload.delete([playlistFile.key]);\n        await this.fileRepository.destroy([playlistFile]);\n      }\n\n      const filesPaths = await FileUpload.upload(files, id, 'playlist');\n      await this.fileRepository.create(filesPaths);\n    }\n\n    await this.playlistRepository.save({ ...playlist, id });\n\n    return await this.playlistRepository.findOne(id);\n  }\n\n  public async destroy(id: string): Promise {\n    const playlistFile: IFile = await this.fileRepository.findByKey(\n      'ownerId',\n      id,\n    );\n\n    await FileUpload.delete([playlistFile.key]);\n\n    await this.fileRepository.destroy([playlistFile]);\n\n    await this.playlistRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/S3Service.html":{"url":"injectables/S3Service.html","title":"injectable - S3Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  S3Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/s3/s3.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                bucketName\n                            \n                            \n                                    Private\n                                client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                upload\n                            \n                            \n                                    Private\n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/infra/s3/s3.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(keys: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/infra/s3/s3.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        upload\n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(files: FileDTO | FileDTO[], ownerId: string, ownerType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/s3/s3.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileDTO | FileDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ownerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ownerType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(file: FileDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/s3/s3.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                FileDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        bucketName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : s3Config.bucketName\n                    \n                \n                    \n                        \n                                Defined in src/infra/s3/s3.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     S3\n\n                    \n                \n                    \n                        \n                                Defined in src/infra/s3/s3.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { S3 } from 'aws-sdk';\nimport { Injectable, Req, Res } from '@nestjs/common';\nimport { s3Config } from './s3.config';\nimport { FileDTO } from '../../domain/modules/file/dto/file.dto';\n\n@Injectable()\nexport class S3Service {\n  private client: S3;\n\n  private readonly bucketName = s3Config.bucketName;\n\n  constructor() {\n    this.client = new S3({\n      region: s3Config.defaultRegion,\n      accessKeyId: s3Config.accessKeyId,\n      secretAccessKey: s3Config.secretAccessKey,\n    });\n  }\n\n  async upload(\n    files: FileDTO | FileDTO[],\n    ownerId: string,\n    ownerType: string,\n  ): Promise {\n    try {\n      if (Array.isArray(files)) {\n        const paths = await Promise.all(\n          files.map(async (file: Omit) => {\n            const newFile = await new FileDTO({\n              ...file,\n              ownerId,\n              ownerType,\n            }).generateFileKey();\n\n            return await this.uploadFile(newFile);\n          }),\n        );\n\n        return paths;\n      }\n\n      const path = await this.uploadFile(files);\n\n      return path;\n    } catch {\n      return undefined;\n    }\n  }\n\n  private async uploadFile(file: FileDTO): Promise {\n    let fileUploaded;\n\n    try {\n      fileUploaded = await this.client\n        .upload({\n          Bucket: this.bucketName,\n          Key: file.key,\n          ContentType: file.mimetype,\n          Body: file.buffer,\n          ACL: s3Config.defaultFilesACL,\n        })\n        .promise();\n    } catch (error) {\n      console.log(error);\n    }\n\n    file.url = fileUploaded.Location;\n    file.key = fileUploaded.Key;\n\n    return file;\n  }\n\n  public async delete(keys: string[]): Promise {\n    await this.client\n      .deleteObjects({\n        Bucket: this.bucketName,\n        Delete: {\n          Objects: keys.map((key) => ({ Key: key })),\n        },\n      })\n      .promise();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StandardError.html":{"url":"classes/StandardError.html","title":"class - StandardError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StandardError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/main/utils/error.utils.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statusCode: number, message: string)\n                    \n                \n                        \n                            \n                                Defined in src/main/utils/error.utils.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/main/utils/error.utils.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export default class StandardError extends Error {\n  private statusCode: number;\n\n  constructor(statusCode: number, message: string) {\n    super();\n    this.statusCode = statusCode;\n    this.message = message;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                companyId\n                            \n                            \n                                    Optional\n                                companyName\n                            \n                            \n                                    Optional\n                                country\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                dateOfBirth\n                            \n                            \n                                email\n                            \n                            \n                                file\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    Optional\n                                token\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 500, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/user.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/user.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 500})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :         File\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/user.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 250, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 250, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 250})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/user.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/user.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 250})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/data/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryColumn, OneToOne, JoinColumn } from 'typeorm';\nimport { File } from './file.entity';\n\n@Entity()\nexport class User {\n  @PrimaryColumn()\n  id: string;\n\n  @Column({ length: 250  })\n  username: string;\n\n  @Column({ length: 250 })\n  password: string;\n\n  @Column({ length: 500 })\n  email: string;\n\n  @Column({ length: 250, nullable: true })\n  firstName?: string;\n\n  @Column({ length: 250, nullable: true })\n  lastName?: string;\n\n  @Column({ nullable: true, type: 'date' })\n  dateOfBirth?: string;\n\n  @Column({ nullable: true })\n  phoneNumber?: string;\n\n  @Column({ length: 500, nullable: true })\n  address?: string;\n\n  @Column({ nullable: true })\n  city?: string;\n\n  @Column({ nullable: true })\n  country?: string;\n\n  @Column({ nullable: true })\n  token?: string;\n\n  @Column({ nullable: true })\n  companyId?: string;\n\n  @Column({ nullable: true })\n  companyName?: string;\n\n  @Column({ nullable: true })\n  createdAt: Date;\n\n  @Column({ nullable: true })\n  updatedAt: Date;\n\n  @OneToOne(() => File)\n  @JoinColumn()\n  file: File;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                private/users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByAddress\n                            \n                            \n                                    Async\n                                findByBirthDate\n                            \n                            \n                                    Async\n                                findByCity\n                            \n                            \n                                    Async\n                                findByCountry\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findByFirstName\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByLastName\n                            \n                            \n                                    Async\n                                findByPhoneNumber\n                            \n                            \n                                    Async\n                                findByUsername\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(files: FileDTO[], createUserDTO: UserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/user/user.controller.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserDTO\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/user/user.controller.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/user/user.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByAddress\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByAddress(address: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('/address/:address')\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/user/user.controller.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByBirthDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByBirthDate(birthDate: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('/birthDate/:birthDate')\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/user/user.controller.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    birthDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCity\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCity(city: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('/city/:city')\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/user/user.controller.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCountry\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCountry(country: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('/country/:country')\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/user/user.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    country\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('/email/:email')\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/user/user.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByFirstName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByFirstName(firstName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('/firstName/:firstName')\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/user/user.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/user/user.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByLastName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByLastName(lastName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('/lastName/:lastName')\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/user/user.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lastName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByPhoneNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByPhoneNumber(phoneNumber: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('/phoneNumber/:phoneNumber')\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/user/user.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUsername(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('/name/:username')\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/user/user.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(files: FileDTO[], id: string, user: UserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Put(':id')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/domain/modules/user/user.controller.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n  UseGuards,\n  UseInterceptors,\n  UploadedFiles,\n} from '@nestjs/common';\n/*import {\n  GrpcMethod,\n  ClientGrpc,\n  Client,\n  Transport,\n} from '@nestjs/microservices';*/\nimport { UserDTO } from './dto/user.dto';\nimport { IUser } from '../../../main/interfaces/user.interface';\nimport { UserService } from './user.service';\nimport { getFormatedDateFromDate } from '../../../main/utils/date.utils';\nimport { JwtAuthGuard } from '../../../infra/jwt/jwt-auth.guard';\nimport { FilesInterceptor } from '@nestjs/platform-express';\nimport { FileDTO } from '../file/dto/file.dto';\n\n@Controller('private/users')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(): Promise {\n    return await this.userService.findAll();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get(':id')\n  //@GrpcMethod('UserService')\n  async findById(@Param('id') id: string): Promise {\n    return await this.userService.findByKey('id', id);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('/email/:email')\n  //@GrpcMethod('UserService')\n  async findByEmail(@Param('email') email: string): Promise {\n    return await this.userService.findByKey('email', email);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('/name/:username')\n  async findByUsername(@Param('username') username: string): Promise {\n    return await this.userService.findByKey('username', username);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('/firstName/:firstName')\n  async findByFirstName(@Param('firstName') firstName: string): Promise {\n    return await this.userService.findByKey('firstName', firstName);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('/lastName/:lastName')\n  async findByLastName(@Param('lastName') lastName: string): Promise {\n    return await this.userService.findByKey('lastName', lastName);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('/birthDate/:birthDate')\n  async findByBirthDate(@Param('birthDate') birthDate: string): Promise {\n    const dateOfBirth: string = getFormatedDateFromDate(new Date(birthDate));\n    return await this.userService.findByKey('dateOfBirth', dateOfBirth);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('/phoneNumber/:phoneNumber')\n  async findByPhoneNumber(\n    @Param('phoneNumber') phoneNumber: string,\n  ): Promise {\n    return await this.userService.findByKey('phoneNumber', phoneNumber);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('/address/:address')\n  async findByAddress(@Param('address') address: string): Promise {\n    return await this.userService.findByKey('address', address);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('/city/:city')\n  async findByCity(@Param('city') city: string): Promise {\n    return await this.userService.findByKey('city', city);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('/country/:country')\n  async findByCountry(@Param('country') country: string): Promise {\n    return await this.userService.findByKey('country', country);\n  }\n\n  @Post()\n  @UseInterceptors(FilesInterceptor('files'))\n  async create(\n    @UploadedFiles() files: FileDTO[],\n    @Body() createUserDTO: UserDTO,\n  ): Promise {\n    const user: UserDTO = await new UserDTO(createUserDTO).encryptPassword();\n    return this.userService.create(user, files);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Put(':id')\n  @UseInterceptors(FilesInterceptor('files'))\n  async update(\n    @UploadedFiles() files: FileDTO[],\n    @Param('id') id: string,\n    @Body() user: UserDTO,\n  ): Promise {\n    const updateUser = await new UserDTO(user, id).encryptPassword();\n    return await this.userService.update(id, updateUser, files);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  async delete(@Param('id') id: string): Promise {\n    await this.userService.destroy(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDTO.html":{"url":"classes/UserDTO.html","title":"class - UserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/modules/user/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                country\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                dateOfBirth\n                            \n                            \n                                email\n                            \n                            \n                                file\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    Optional\n                                token\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                encodeSensitiveData\n                            \n                            \n                                    Public\n                                    Async\n                                encryptPassword\n                            \n                            \n                                    Public\n                                hideSensitiveData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: Omit, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/domain/modules/user/dto/user.dto.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    Omit\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/user/dto/user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/user/dto/user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/user/dto/user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/user/dto/user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/user/dto/user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/user/dto/user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :         File\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/user/dto/user.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/user/dto/user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/user/dto/user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/user/dto/user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/user/dto/user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMobilePhone('pt-BR')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/user/dto/user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/user/dto/user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/user/dto/user.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/user/dto/user.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        encodeSensitiveData\n                        \n                    \n                \n            \n            \n                \n                    \n                    encodeSensitiveData()\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/user/dto/user.dto.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         UserDTO\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        encryptPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    encryptPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/user/dto/user.dto.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hideSensitiveData\n                        \n                    \n                \n            \n            \n                \n                    \n                    hideSensitiveData()\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/user/dto/user.dto.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         UserDTO\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { uuid } from 'uuidv4';\nimport CryptographyService from '../../../../infra/criptography.service';\nimport { IsEmail, IsMobilePhone, IsNotEmpty } from 'class-validator';\nimport { File } from '../../../../data/entities/file.entity';\nimport { Logger } from '@nestjs/common';\n\nexport class UserDTO {\n  id: string;\n  username: string;\n\n  @IsNotEmpty()\n  password: string;\n\n  @IsEmail()\n  email: string;\n\n  firstName?: string;\n\n  lastName?: string;\n\n  dateOfBirth?: string;\n\n  @IsMobilePhone('pt-BR')\n  phoneNumber?: string;\n\n  address?: string;\n\n  city?: string;\n\n  country?: string;\n\n  token?: string;\n\n  createdAt: Date;\n\n  updatedAt: Date;\n\n  file: File;\n\n  constructor(\n    props: Omit,\n    id?: string,\n  ) {\n    Object.assign(this, props);\n\n    if (!id) {\n      this.id = uuid();\n      this.createdAt = new Date();\n      this.updatedAt = new Date();\n    }\n  }\n\n  public async encryptPassword(): Promise {\n    this.password = await CryptographyService.encrypt(this.password);\n\n    return this;\n  }\n\n  public hideSensitiveData(): UserDTO {\n    this.password = null;\n    this.token = null;\n    this.createdAt = null;\n    this.updatedAt = null;\n    this.dateOfBirth = null;\n    this.phoneNumber = null;\n\n    return this;\n  }\n\n  public encodeSensitiveData(): UserDTO {\n    this.id = '##########';\n    this.password = '******';\n    this.token = null;\n    this.createdAt = null;\n    this.updatedAt = null;\n    this.dateOfBirth = null;\n    this.phoneNumber =\n      this.phoneNumber.substring(0, 3) +\n      '******' +\n      this.phoneNumber.substring(9);\n\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nUserModule -->\n\nFileModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/domain/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            FileModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { userProviders } from './user.provider';\nimport { DatabaseModule } from '../../../data/connection/database.module';\nimport { FileModule } from '../file/file.module';\n\n@Module({\n  imports: [DatabaseModule, FileModule],\n  controllers: [UserController],\n  providers: [...userProviders, UserService],\n  exports: [...userProviders, UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/modules/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emailUtils\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                destroy\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findByKey\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, fileRepository: FileService)\n                    \n                \n                        \n                            \n                                Defined in src/domain/modules/user/user.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: UserDTO, files: FileDTO[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/user/user.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            FileDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/user/user.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/user/user.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByKey(key: string, value: string, encodeSensitiveData: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/user/user.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    encodeSensitiveData\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, user: UserDTO, files: FileDTO[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/modules/user/user.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            FileDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        emailUtils\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EmailUtils\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/modules/user/user.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { User } from '../../../data/entities/user.entity';\nimport { UserDTO } from './dto/user.dto';\nimport { IUser } from '../../../main/interfaces/user.interface';\nimport FileUpload from '../../../main/utils/file.utils';\nimport { FileDTO } from '../file/dto/file.dto';\nimport { FileService } from '../file/file.service';\nimport { IFile } from '../../../main/interfaces/file.interface';\nimport StandardError from '../../../main/utils/error.utils';\nimport { EmailUtils } from '../../../main/utils/email.utils';\n\n@Injectable()\nexport class UserService {\n  private emailUtils: EmailUtils;\n\n  constructor(\n    @Inject('USER_REPOSITORY')\n    private userRepository: Repository,\n    private fileRepository: FileService,\n  ) {\n    this.emailUtils = new EmailUtils(this.userRepository);\n  }\n\n  public async findAll(): Promise {\n    const users = await this.userRepository.find();\n\n    for (const user of users) {\n      let userAux = new UserDTO({ ...user }).hideSensitiveData();\n      userAux.file = await this.fileRepository.findByKey('ownerId', user.id);\n\n      Object.assign(user, userAux);\n    }\n\n    return users;\n  }\n\n  public async findByKey(\n    key: string,\n    value: string,\n    encodeSensitiveData: boolean = true,\n  ): Promise {\n    const user = await this.userRepository.findOne({\n      where: { [key]: value },\n    });\n\n    let userAux;\n\n    if (encodeSensitiveData) {\n      userAux = new UserDTO({ ...user }).encodeSensitiveData();\n    } else {\n      userAux = new UserDTO({ ...user });\n    }\n\n    if (user)\n      userAux.file = await this.fileRepository.findByKey('ownerId', user.id);\n\n    Object.assign(user, userAux);\n\n    return user;\n  }\n\n  public async create(user: UserDTO, files: FileDTO[]): Promise {\n    if (await this.emailUtils.checkEmailAlreadyExists(user.id, user.email))\n      throw new StandardError(202, 'Email already exists');\n\n    const filesPaths = await FileUpload.upload(files, user.id, 'user');\n\n    await this.fileRepository.create(filesPaths);\n\n    return await this.userRepository.save(user);\n  }\n\n  public async update(\n    id: string,\n    user: UserDTO,\n    files: FileDTO[],\n  ): Promise {\n    if (await this.emailUtils.checkEmailAlreadyExists(user.id, user.email))\n      throw new Error('Email already exists');\n\n    const userAvatar: IFile = await this.fileRepository.findByKey(\n      'ownerId',\n      id,\n    );\n\n    if (files.length) {\n      if (userAvatar) {\n        await FileUpload.delete([userAvatar.key]);\n        await this.fileRepository.destroy([userAvatar]);\n      }\n\n      const filesPaths = await FileUpload.upload(files, id, 'user');\n      await this.fileRepository.create(filesPaths);\n    }\n\n    await this.userRepository.save({ ...user, id });\n\n    return await this.userRepository.findOne(id);\n  }\n\n  public async destroy(id: string): Promise {\n    const userAvatar: IFile = await this.fileRepository.findByKey(\n      'ownerId',\n      id,\n    );\n\n    await FileUpload.delete([userAvatar.key]);\n\n    await this.fileRepository.destroy([userAvatar]);\n\n    await this.userRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/data/connection/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/connection/ormconfig.ts\n            \n            variable\n            connectionOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/entities/album.entity.ts\n            \n            class\n            Album\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/data/entities/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/data/entities/music.entity.ts\n            \n            class\n            Music\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/data/entities/playlist.entity.ts\n            \n            class\n            Playlist\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/data/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/domain/modules/album/album.controller.ts\n            \n            controller\n            AlbumController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain/modules/album/album.provider.ts\n            \n            variable\n            albumProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain/modules/album/album.service.ts\n            \n            injectable\n            AlbumService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/domain/modules/album/dto/album.dto.ts\n            \n            class\n            AlbumDTO\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/domain/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/domain/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/domain/modules/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain/modules/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain/modules/file/dto/file.dto.ts\n            \n            class\n            FileDTO\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/domain/modules/file/file.provider.ts\n            \n            variable\n            fileProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain/modules/file/file.service.ts\n            \n            injectable\n            FileService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/domain/modules/music/dto/music.dto.ts\n            \n            class\n            MusicDTO\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/domain/modules/music/music.controller.ts\n            \n            controller\n            MusicController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain/modules/music/music.provider.ts\n            \n            variable\n            musicProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain/modules/music/music.service.ts\n            \n            injectable\n            MusicService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/domain/modules/playlist/dto/playlist.dto.ts\n            \n            class\n            PlaylistDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain/modules/playlist/playlist.controller.ts\n            \n            controller\n            PlaylistController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain/modules/playlist/playlist.provider.ts\n            \n            variable\n            playlistProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain/modules/playlist/playlist.service.ts\n            \n            injectable\n            PlaylistService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/domain/modules/user/dto/user.dto.ts\n            \n            class\n            UserDTO\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/domain/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/domain/modules/user/user.provider.ts\n            \n            variable\n            userProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/infra/criptography.service.ts\n            \n            class\n            CryptographyService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/infra/jwt/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infra/jwt/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/infra/s3/s3.config.ts\n            \n            variable\n            s3Config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infra/s3/s3.service.ts\n            \n            injectable\n            S3Service\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main/filters/exception.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main/interfaces/album.interface.ts\n            \n            interface\n            IAlbum\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/main/interfaces/auth.interface.ts\n            \n            interface\n            IAuth\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main/interfaces/auth.interface.ts\n            \n            interface\n            IAuthCredentials\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main/interfaces/error.interface.ts\n            \n            interface\n            ErrorProps\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main/interfaces/file.interface.ts\n            \n            interface\n            IFile\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main/interfaces/file.interface.ts\n            \n            interface\n            IFileUploader\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main/interfaces/file.interface.ts\n            \n            interface\n            IUploadedFile\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main/interfaces/music.interface.ts\n            \n            interface\n            IMusic\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/main/interfaces/playlist.interface.ts\n            \n            interface\n            IPlaylist\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main/interfaces/user.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/main/middlewares/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main/utils/date.utils.ts\n            \n            function\n            getDateFromString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main/utils/date.utils.ts\n            \n            function\n            getFormatedDateFromDate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main/utils/email.utils.ts\n            \n            class\n            EmailUtils\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main/utils/error.utils.ts\n            \n            class\n            StandardError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main/utils/file.utils.ts\n            \n            injectable\n            FileUpload\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/typeorm : ^8.0.2\n        \n            aws-sdk : ^2.1044.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            date-fns : ^2.27.0\n        \n            helmet : ^4.6.0\n        \n            passport : ^0.5.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.7.1\n        \n            postgres : ^1.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.2.41\n        \n            uuidv4 : ^6.2.12\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getDateFromString   (src/.../date.utils.ts)\n                        \n                        \n                            getFormatedDateFromDate   (src/.../date.utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/main/utils/date.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getDateFromString\n                        \n                    \n                \n            \n            \n                \ngetDateFromString(date: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormatedDateFromDate\n                        \n                    \n                \n            \n            \n                \ngetFormatedDateFromDate(date: Date)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AlbumModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MusicModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlaylistModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AlbumModule\n\n\n\ncluster_AlbumModule_imports\n\n\n\ncluster_AlbumModule_exports\n\n\n\ncluster_AlbumModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_FileModule\n\n\n\ncluster_FileModule_exports\n\n\n\ncluster_FileModule_providers\n\n\n\ncluster_MusicModule\n\n\n\ncluster_MusicModule_exports\n\n\n\ncluster_MusicModule_providers\n\n\n\ncluster_PlaylistModule\n\n\n\ncluster_PlaylistModule_exports\n\n\n\ncluster_PlaylistModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nFileModule\n\nFileModule\n\nFileModule -->\n\nDatabaseModule->FileModule\n\n\n\n\n\nAlbumModule\n\nAlbumModule\n\nAlbumModule -->\n\nDatabaseModule->AlbumModule\n\n\n\n\n\nMusicModule\n\nMusicModule\n\nMusicModule -->\n\nDatabaseModule->MusicModule\n\n\n\n\n\nPlaylistModule\n\nPlaylistModule\n\nPlaylistModule -->\n\nDatabaseModule->PlaylistModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAlbumModule -->\n\nFileModule->AlbumModule\n\n\n\nMusicModule -->\n\nFileModule->MusicModule\n\n\n\nPlaylistModule -->\n\nFileModule->PlaylistModule\n\n\n\nUserModule -->\n\nFileModule->UserModule\n\n\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nFileService \n\nFileService \n\nFileService  -->\n\nFileModule->FileService \n\n\n\n\n\nAlbumService \n\nAlbumService \n\nAlbumService  -->\n\nAlbumModule->AlbumService \n\n\n\nAppModule -->\n\nAlbumModule->AppModule\n\n\n\n\n\nAlbumService\n\nAlbumService\n\nAlbumModule -->\n\nAlbumService->AlbumModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nAppModule -->\n\nMusicModule->AppModule\n\n\n\n\n\nMusicService \n\nMusicService \n\nMusicService  -->\n\nMusicModule->MusicService \n\n\n\nAppModule -->\n\nPlaylistModule->AppModule\n\n\n\n\n\nPlaylistService \n\nPlaylistService \n\nPlaylistService  -->\n\nPlaylistModule->PlaylistService \n\n\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nFileService\n\nFileService\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\nMusicService\n\nMusicService\n\nMusicModule -->\n\nMusicService->MusicModule\n\n\n\n\n\nPlaylistService\n\nPlaylistService\n\nPlaylistModule -->\n\nPlaylistService->PlaylistModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            albumProviders   (src/.../album.provider.ts)\n                        \n                        \n                            connectionOptions   (src/.../ormconfig.ts)\n                        \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            fileProviders   (src/.../file.provider.ts)\n                        \n                        \n                            musicProviders   (src/.../music.provider.ts)\n                        \n                        \n                            playlistProviders   (src/.../playlist.provider.ts)\n                        \n                        \n                            s3Config   (src/.../s3.config.ts)\n                        \n                        \n                            userProviders   (src/.../user.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/domain/modules/album/album.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        albumProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'ALBUM_REPOSITORY',\n    useFactory: (connection: Connection) => connection.getRepository(Album),\n    inject: ['DATABASE_CONNECTION'],\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/data/connection/ormconfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        connectionOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectionOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'postgres',\n  host: String(process.env.DB_HOST),\n  port: Number(process.env.DB_PORT),\n  username: String(process.env.DB_USERNAME),\n  password: String(process.env.DB_PASSWORD),\n  database: String(process.env.DB_NAME),\n  entities: [\n    join(__dirname, '**', '*.entity.{ts,js}'),\n    './dist/data/entities/*.js',\n  ],\n  migrations: [join(__dirname, '**', '*.migration.{ts,js}')],\n  cli: {\n    migrationsDir: 'migrations',\n  },\n  synchronize: true,\n  ssl: process.env.ENVIOREMENT === 'dev' ? false : true,\n  extra:\n    process.env.ENVIOREMENT === 'prod'\n      ? {\n          ssl: {\n            rejectUnauthorized: false,\n          },\n        }\n      : {},\n}\n                    \n                \n\n\n        \n    \n\n    src/data/connection/database.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'DATABASE_CONNECTION',\n    useFactory(): Promise {\n      return createConnection(connectionOptions);\n    },\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/domain/modules/file/file.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fileProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'FILE_REPOSITORY',\n    useFactory: (connection: Connection) => connection.getRepository(File),\n    inject: ['DATABASE_CONNECTION'],\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/domain/modules/music/music.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        musicProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'MUSIC_REPOSITORY',\n    useFactory: (connection: Connection) => connection.getRepository(Music),\n    inject: ['DATABASE_CONNECTION'],\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/domain/modules/playlist/playlist.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        playlistProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'PLAYLIST_REPOSITORY',\n    useFactory: (connection: Connection) => connection.getRepository(Playlist),\n    inject: ['DATABASE_CONNECTION'],\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/infra/s3/s3.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        s3Config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  bucketName: String(process.env.AWS_S3_BUCKET),\n  defaultRegion: String(process.env.DEFAULT_REGION),\n  defaultFilesACL: String(process.env.DEFAULT_FILES_ACL),\n  accessKeyId: String(process.env.AWS_ACCESS_KEY),\n  secretAccessKey: String(process.env.AWS_SECRET_ACCESS),\n}\n                    \n                \n\n\n        \n    \n\n    src/domain/modules/user/user.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'USER_REPOSITORY',\n    useFactory: (connection: Connection) => connection.getRepository(User),\n    inject: ['DATABASE_CONNECTION'],\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
